{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/actions/user.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.js","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/session.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","refreshSession","session","type","types","payload","dispatch","catch","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","realmReducer","geometry","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Music","props","_this","music_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","track","PureComponent","script","document","createElement","async","defer","src","appendChild","waitForFirstInteraction","waitForSoundcloudApi","_this2","first","window","removeEventListener","hasInteracted","play","addEventListener","SC","initialize","client_id","setTimeout","bind","_this3","player","kill","stream","on","next","setVolume","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","animation","delta","getDelta","time","oldTime","update","render","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","react_default","a","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Wrapper","styled","div","withConfig","displayName","componentId","Session","session_classCallCheck","session_getPrototypeOf","loginWithGoogle","session_assertThisInitialized","onMessage","popupWatcher","clearInterval","data","indexOf","screenX","screenY","left","screen","top","win","open","setInterval","postMessage","_this$props","signout","onClick","ti","react_redux_i18n_build","value","propTypes","PropTypes","bool","isRequired","func","connect","_ref3","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","PlaneBufferGeometry","rotateY","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","isHover","_get","prototype","font","textAlign","textBaseline","fillText","Menu","history","hover","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","addColorStop","Lobby","fetchRealms","onBeforeRender","touches","Touches","filtered","target","onPointerDown","page","previousRealms","disable","_this$renderer","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","arrayOf","shape","string","instanceOf","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","Promise","resolve","_ref2$data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","instance","updateMatrix","normal","attributes","setArray","addAttribute","BufferAttribute","setIndex","computeBoundingSphere","match","params","picker","head","intersects","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","updateMatrixWorld","Float32Array","number","_ref2$realm","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","round","r","g","b","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","components_session","music","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.e880ac1be35c002d6a55.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import { PureComponent } from 'react';\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    // Load soundcloud API\n    const script = document.createElement('script');\n    script.async = true;\n    script.defer = true;\n    script.src = 'https://connect.soundcloud.com/sdk/sdk-3.3.1.js';\n    document.body.appendChild(script);\n    this.waitForFirstInteraction();\n    this.waitForSoundcloudApi();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.hasInteracted = true;\n      if (this.api) {\n        this.play();\n      }\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  waitForSoundcloudApi() {\n    if (!window.SC) {\n      setTimeout(this.waitForSoundcloudApi.bind(this), 10);\n      return;\n    }\n    // Initialize\n    this.api = window.SC;\n    this.api.initialize({\n      client_id: 'eb5fcff9e107aab508431b4c3c416415',\n    });\n    // this.api.resolve('https://soundcloud.com/mikey-rogowski/sets/space-ambient').then(({ tracks }) => {\n    //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n    // });\n    // Start playing\n    if (this.hasInteracted) {\n      this.play();\n    }\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    // Dispose current player (if any)\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    // Stream the current track\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('audio_error', () => this.next());\n      player.on('finish', () => this.next());\n      player.setVolume(0.8);\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,261520524,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n    } = this;\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.6, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { TiEject, TiSocialGooglePlus } from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport { refreshSession, signout } from '@/actions/user';\nimport API from '@/services/api';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  > button {\n    display: flex;\n    align-items: center;\n    outline: 0;\n    font-family: inherit;\n    font-size: 1.2rem;\n    font-weight: 700;\n    width: 150px;\n    padding: 0.5rem 1rem;\n    > svg {\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.loginWithGoogle = this.loginWithGoogle.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { popupWatcher } = this;\n    if (popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n    }\n  }\n\n  onMessage({ origin, data: { session } }) {\n    const { popupWatcher } = this;\n    const { refreshSession } = this.props;\n    if (API.baseURL.indexOf(origin) === 0) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n      if (session) {\n        refreshSession(session);\n      }\n    }\n  }\n\n  loginWithGoogle({ screenX, screenY }) {\n    const w = 512;\n    const h = 512;\n    const left = (screenX || (window.screen.width / 2)) - w;\n    const top = (screenY || (window.screen.height / 2));\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    if (this.popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(this.popupWatcher);\n    }\n    this.popupWatcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(this.popupWatcher);\n        delete this.popupWatcher;\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    window.addEventListener('message', this.onMessage, false);\n  }\n\n  render() {\n    const { isAuth, signout } = this.props;\n    return (\n      <Wrapper>\n        {isAuth ? (\n          <button\n            type=\"button\"\n            onClick={signout}\n          >\n            <TiEject />\n            <Translate value=\"User.signOut\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.loginWithGoogle}\n          >\n            <TiSocialGooglePlus />\n            <Translate value=\"User.signIn\" />\n          </button>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  refreshSession: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: { isAuth },\n  }) => ({\n    isAuth,\n  }),\n  {\n    refreshSession,\n    signout,\n  }\n)(Session);\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x555555);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({ anisotropy, name, onPointer }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#333' : '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '80px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1.25, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.25, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    setTimeout(() => this.draw(), 250);\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#bbb';\n    ctx.fillText(\n      'dani@gatunes © 2019',\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.children)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor() {\n    super();\n    this.geometry = new BufferGeometry();\n    this.material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n    });\n    this.visible = false;\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const { children, geometry, material } = this;\n    const radius = 8;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    // TODO:\n    // This should really use an InstancedBufferGeometry\n    // But I need to figure out how to keep the raycasting\n    // and fustrum culling functionality\n    // Maybe I'll use an hybrid approach... Like:\n    // The closest chunks as full meshes and the further chunks instanced\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          this.add(instance);\n        }\n      }\n    }\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    this.visible = true;\n  }\n}\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels();\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.children,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Session />\n        <Music />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}