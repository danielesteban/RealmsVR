{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","type","payload","realmReducer","geometry","types","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Wrapper","styled","div","withConfig","displayName","componentId","Music","props","_this","music_classCallCheck","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","player","document","createElement","onended","next","bind","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","window","removeEventListener","play","addEventListener","paused","pause","src","_this3","clientId","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","react_default","a","href","rel","target","alt","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","PlaneBufferGeometry","rotateY","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","fonts","Fonts","fonts_classCallCheck","loaded","Array","isArray","Promise","all","font","resolve","tester","innerText","style","fontFamily","top","appendChild","initialWidth","setTimeout","check","abs","removeChild","Pillar","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","CylinderGeometry","Realm","onPointer","screenshot","_this$renderer","vignette","createRadialGradient","addColorStop","hasLoadedFont","waitUntilLoaded","draw","image","Image","onload","isHover","_get","prototype","drawImage","textAlign","textBaseline","fillText","Menu","history","hover","intersects","_ref3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","pillar","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","shadowColor","shadowBlur","__VERSION__","Lobby","_this$props","fetchRealms","onBeforeRender","touches","Touches","filtered","on","onPointerDown","page","previousRealms","disable","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","propTypes","PropTypes","isRequired","arrayOf","shape","string","instanceOf","func","connect","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","onMessage","postMessage","_ref2$data","data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","_ref$instanced","instanced","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","shader","InstancedBufferGeometry","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","uniforms","aux","frustum","Frustum","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","sort","filter","_instance$chunk","frustumCulled","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","_ref5","array","_ref6","normal","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","UniformsUtils","match","params","picker","extensions","head","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","number","_ref2$realm","dispatch","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","r","g","b","value","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","layout_Wrapper","components_renderer","scenes","music","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.52197803775e73de4b25.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.6, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const tester = document.createElement('div');\n            tester.innerText = 'QW@HhsXJ\\ue900';\n            tester.style.position = 'absolute';\n            tester.style.fontFamily = 'sans-serif';\n            tester.style.top = '-999999px';\n            document.body.appendChild(tester);\n            const { width: initialWidth } = tester.getBoundingClientRect();\n            const check = () => {\n              const { width } = tester.getBoundingClientRect();\n              if (Math.abs(width - initialWidth) > 1) {\n                document.body.removeChild(tester);\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            tester.style.fontFamily = font;\n            setTimeout(check, 10);\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    name,\n    onPointer,\n    screenshot,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (screenshot) {\n      const image = new Image();\n      image.src = `data:image/jpeg;base64,${screenshot}`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '700 60px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n      intersects,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    intersects.length = 0;\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n      intersects.push(panel);\n      const pillar = new Pillar();\n      pillar.position.copy(panel.position);\n      this.add(pillar);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: shader.uniforms,\n        vertexColors: VertexColors,\n        fog: true,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size && animation.time > 1) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\n// import Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        {/* <Session /> */}\n        <Music />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}