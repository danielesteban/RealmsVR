{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","type","payload","realmReducer","geometry","types","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Wrapper","styled","div","withConfig","displayName","componentId","Music","props","_this","music_classCallCheck","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","player","document","createElement","onended","next","bind","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","window","removeEventListener","play","addEventListener","paused","pause","src","_this3","clientId","stream_url","setState","catch","title","artwork","artwork_url","username","waveform","waveform_url","react_default","a","alt","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","PlaneBufferGeometry","rotateY","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","screenshot","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","image","Image","onload","isHover","_get","prototype","drawImage","font","textAlign","textBaseline","fillText","Menu","history","hover","_ref3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","setTimeout","grd","createLinearGradient","addColorStop","Lobby","_this$props","fetchRealms","onBeforeRender","touches","Touches","filtered","target","on","onPointerDown","page","previousRealms","disable","_this$renderer","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","propTypes","PropTypes","isRequired","arrayOf","shape","string","instanceOf","func","connect","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","onMessage","Promise","resolve","postMessage","_ref2$data","data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","_ref$instanced","instanced","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","shader","InstancedBufferGeometry","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","uniforms","aux","frustum","Frustum","instances","instance","chunk","updateMatrix","updateMatrixWorld","sort","b","distanceTo","intersects","filter","_instance$chunk","frustumCulled","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","_ref5","array","_ref6","normal","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","UniformsUtils","match","params","picker","extensions","head","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","number","_ref2$realm","dispatch","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","round","r","g","value","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","music","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.885b4ad34586db901b05.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > div:nth-child(1) {\n      color: #eee;\n    }\n    > div:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      user: { username },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <img alt={title} src={artwork || waveform} />\n        <div>\n          <div>{title}</div>\n          <div>{username}</div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.6, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x555555);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    name,\n    onPointer,\n    screenshot,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n    if (screenshot) {\n      const image = new Image();\n      image.src = `data:image/png;base64,${screenshot}`;\n      image.onload = () => {\n        this.screenshot = image;\n        this.draw();\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#333' : '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = 'rgba(0, 0, 0, .5)';\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '700 60px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1.25, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.25, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    setTimeout(() => this.draw(), 250);\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#bbb';\n    ctx.fillText(\n      'dani@gatunes © 2019',\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.children)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: shader.uniforms,\n        vertexColors: VertexColors,\n        fog: true,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.chunk = { x, y, z };\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          instance.updateMatrixWorld();\n          this.instances.push(instance);\n        }\n      }\n    }\n    const origin = new Vector3();\n    this.instances.sort(({ position: a }, { position: b }) => (\n      a.distanceTo(origin) - b.distanceTo(origin)\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size && animation.time > 1) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\n// import Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        {/* <Session /> */}\n        <Music />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}