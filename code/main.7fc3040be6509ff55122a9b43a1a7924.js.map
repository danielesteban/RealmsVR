{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.js","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","type","payload","realmReducer","geometry","types","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Music","props","_this","music_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","track","PureComponent","script","document","createElement","async","defer","src","appendChild","waitForFirstInteraction","waitForSoundcloudApi","_this2","first","window","removeEventListener","hasInteracted","play","addEventListener","SC","initialize","client_id","setTimeout","bind","_this3","player","kill","stream","on","next","setVolume","catch","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","animation","delta","getDelta","time","oldTime","update","render","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","react_default","a","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","PlaneBufferGeometry","rotateY","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","isHover","_get","prototype","font","textAlign","textBaseline","fillText","Menu","history","hover","_ref3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","addColorStop","Lobby","_this$props","fetchRealms","onBeforeRender","touches","Touches","filtered","target","onPointerDown","page","previousRealms","disable","_this$renderer","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","propTypes","PropTypes","isRequired","arrayOf","shape","string","instanceOf","func","connect","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","onMessage","Promise","resolve","postMessage","_ref2$data","data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","instance","updateMatrix","normal","attributes","setArray","addAttribute","BufferAttribute","setIndex","computeBoundingSphere","match","params","picker","head","intersects","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","updateMatrixWorld","Float32Array","number","_ref2$realm","dispatch","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","round","r","g","b","value","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","Wrapper","styled","div","withConfig","displayName","componentId","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","components_renderer","scenes","music","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.124bc8027ebd4b12321a.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import { PureComponent } from 'react';\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    // Load soundcloud API\n    const script = document.createElement('script');\n    script.async = true;\n    script.defer = true;\n    script.src = 'https://connect.soundcloud.com/sdk/sdk-3.3.1.js';\n    document.body.appendChild(script);\n    this.waitForFirstInteraction();\n    this.waitForSoundcloudApi();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.hasInteracted = true;\n      if (this.api) {\n        this.play();\n      }\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  waitForSoundcloudApi() {\n    if (!window.SC) {\n      setTimeout(this.waitForSoundcloudApi.bind(this), 10);\n      return;\n    }\n    // Initialize\n    this.api = window.SC;\n    this.api.initialize({\n      client_id: 'eb5fcff9e107aab508431b4c3c416415',\n    });\n    // this.api.resolve('https://soundcloud.com/mikey-rogowski/sets/space-ambient').then(({ tracks }) => {\n    //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n    // });\n    // Start playing\n    if (this.hasInteracted) {\n      this.play();\n    }\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    // Dispose current player (if any)\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    // Stream the current track\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('audio_error', () => this.next());\n      player.on('finish', () => this.next());\n      player.setVolume(0.8);\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n    } = this;\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.6, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x555555);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({ anisotropy, name, onPointer }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#333' : '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '80px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1.25, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.25, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    setTimeout(() => this.draw(), 250);\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#bbb';\n    ctx.fillText(\n      'dani@gatunes © 2019',\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.children)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor() {\n    super();\n    this.geometry = new BufferGeometry();\n    this.material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n    });\n    this.visible = false;\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const { children, geometry, material } = this;\n    const radius = 8;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    // TODO:\n    // This should really use an InstancedBufferGeometry\n    // But I need to figure out how to keep the raycasting\n    // and fustrum culling functionality\n    // Maybe I'll use an hybrid approach... Like:\n    // The closest chunks as full meshes and the further chunks instanced\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          this.add(instance);\n        }\n      }\n    }\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    this.visible = true;\n  }\n}\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels();\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.children,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\n// import Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        {/* <Session /> */}\n        <Music />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}