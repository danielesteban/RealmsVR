{"version":3,"sources":["webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/github.jsx","webpack:///./src/components/music.jsx","webpack:///./src/components/session.jsx","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/scenes/lobby.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/components/lobby/ground.js","webpack:///./src/actions/lobby.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/starfield.js","webpack:///./src/scenes/realm.js","webpack:///./src/services/api.js","webpack:///./src/services/mesher.worker.js","webpack:///./src/components/panel.js","webpack:///./src/textures/noise.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/actions/types.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/title.js"],"names":["Hands","_this","_classCallCheck","this","mesh","pointerMesh","setup","_possibleConstructorReturn","_getPrototypeOf","call","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","children","gamepads","navigator","getGamepads","forEach","length","gamepad","id","startsWith","pose","updateHand","_ref","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","scale","premultiply","matrixWorldNeedsUpdate","pressed","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","geometry","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","map","Noise","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","Renderer","props","renderer_classCallCheck","renderer_possibleConstructorReturn","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","bind","renderer_assertThisInitialized","onResize","Component","current","isScreenshot","window","__SCREENSHOT__","camera","PerspectiveCamera","clock","Clock","fog","FogExp2","Raycaster","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setAnimationLoop","addEventListener","room","hands","resetCamera","resetScene","setupVR","scene","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","setHex","setClearColor","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","then","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","setFog","Scene","react_default","a","createElement","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","locales","en","User","confirmPassword","email","name","signIn","signInWithGoogle","signOut","password","register","es","availableLocales","Object","keys","translations","locale","merge","lobbyReducer","combineReducers","filter","state","arguments","undefined","action","type","types","payload","value","hasLoaded","pagination","page","pages","_objectSpread","realms","realmReducer","_id","isCreator","size","voxels","Uint32Array","sessionKey","storedSession","JSON","parse","localStorage","getItem","API","setAuthorization","token","userReducer","isAuth","isSigningIn","profile","user_objectSpread","firstName","split","setItem","stringify","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Link","styled","withConfig","displayName","componentId","GitHub","href","rel","target","xmlns","viewBox","fill","d","className","Wrapper","div","Music","tracks","music_toConsumableArray","iteration","Date","now","index","random","Math","floor","temp","player","document","onended","next","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","removeEventListener","play","paused","pause","src","_this3","clientId","fetch","concat","res","json","Error","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","alt","Popup","Heading","Content","Form","form","Session","session_classCallCheck","session_possibleConstructorReturn","session_getPrototypeOf","onLoginSubmit","session_assertThisInitialized","onRegisterSubmit","tab","e","preventDefault","login","_this$props","hide","loginWithGoogle","session_Wrapper","onClick","react_redux_i18n_build","ti","onSubmit","required","propTypes","PropTypes","bool","isRequired","func","connect","Scenes","react_router","path","Lobby","Realm","exact","key","_extends","to","shape","instanceOf","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","music","github","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","dispatch","loadTranslations","setLocale","getState","refreshSession","history","createBrowserHistory","basename","__BASENAME__","location","hash","mount","getElementById","react_redux_es","layout","__webpack_require__","__webpack_exports__","hideSessionPopup","showSessionPopup","signout","_types__WEBPACK_IMPORTED_MODULE_1__","_services_api__WEBPACK_IMPORTED_MODULE_2__","body","endpoint","method","left","screen","w","top","h","win","open","baseURL","watcher","setInterval","postMessage","clearInterval","onMessage","_ref3","data","createRealm","fetchRealms","setFilter","setPage","signin","anisotropy","Ground","Starfield","Title","Menu","onBeforeRender","touches","Touches","filtered","on","onPointerDown","previousFilter","wasSigningIn","previousPagination","previousRealms","previousUser","_this$props2","filterHasUpdated","updateFilter","updateSession","updatePagination","updateRealms","setImmediate","__SCREENSHOT_READY__","disable","_this$renderer","hit","intersectObjects","intersects","setHover","distance","object","point","z","onPointer","isDown","x","y","_this$renderer2","setFromCamera","min","max","defaultProps","string","number","arrayOf","slug","_ref4","_ref4$lobby","_ref4$user","Voxels","_ref$instanced","instanced","shader","InstancedBufferGeometry","ShaderMaterial","defines","vertexShader","vertex","fragmentShader","fragment","uniforms","UniformsUtils","vertexColors","VertexColors","aux","frustum","Frustum","remove","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","push","sort","_instance$chunk","frustumCulled","offset","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","_ref5","array","needsUpdate","_ref6","normal","uv","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","USE_MAP","PlaneGeometry","rotateX","PI","Color","copy","_types__WEBPACK_IMPORTED_MODULE_0__","_services_api__WEBPACK_IMPORTED_MODULE_1__","_getState$lobby","Picker","block","strip","blockColor","setRGB","Fonts","waitUntilLoaded","draw","Panel","ctx","context","_get","prototype","save","fillStyle","getHexString","fillRect","grdWhite","createLinearGradient","addColorStop","grdBlack","restore","grd","strokeStyle","beginPath","rect","stroke","font","textAlign","textBaseline","fillText","imageData","getImageData","goBack","Pillar","CylinderGeometry","creator","vignette","createRadialGradient","hasLoadedFont","image","Image","crossOrigin","onload","screenshot","isHover","drawImage","ButtonsPanel","label","isActive","isDisabled","CreateRealm","_ref7","_this3$renderer","_ref8","Pagination","_ref9","_this4","_this4$renderer","_ref10","_this5","_this6","_ref11","userPhoto","Filter","_ref12","_this7","_this7$renderer","_ref13","button","_ref14","_this8","hover","addPanel","panel","lookAt","pillar","_ref15","_ref16","_this9","showCreateRealm","_ref17","_ref18","Points","count","normalize","multiplyScalar","c","PointsMaterial","match","params","picker","extensions","get","head","previousGeometry","previousSize","resize","_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","axis","sin","rotateY","translateZ","_ref2$realm","__API__","_ref$headers","headers","_ref$method","authorization","Authorization","FormData","status","arrayBuffer","module","exports","Worker","p","_ref$width","_ref$height","backplate","texture","CanvasTexture","getContext","worldToLocal","splice","side","DoubleSide","PlaneBufferGeometry","pixels","light","putImageData","magFilter","NearestFilter","minFilter","wrapS","RepeatWrapping","wrapT","mesher","Mesher","promiseId","promises","worker","onmessage","Promise","resolve","_ref2$data","create","generateGeometry","generate","_getState$realm","randomized","r","g","b","append","Blob","buffer","LOBBY_FETCH_REALMS","LOBBY_FETCH_REALMS_FULFILLED","LOBBY_SET_FILTER","LOBBY_SET_PAGE","REALM_CREATE","REALM_CREATE_FULFILLED","REALM_FETCH","REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_GEOMETRY_FULFILLED","REALM_UPDATE_VOXELS","REALM_RESET","USER_HIDE_SESSION_POPUP","USER_REFRESH_SESSION","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SHOW_SESSION_POPUP","USER_LOGIN","USER_LOGIN_FULFILLED","USER_REGISTER","USER_REGISTER_FULFILLED","USER_SIGNOUT","loaded","fonts","Array","isArray","all","check","setTimeout","transparent","shadowColor","shadowBlur","__VERSION__"],"mappings":"8gCAuKeA,cAzJb,SAAAA,IAAc,IAAAC,+FAAAC,CAAAC,KAAAH,GAETA,EAAMI,MACHJ,EAAMK,aACVL,EAAMM,QAERL,EAAAM,EAAAJ,KAAAK,EAAAR,GAAAS,KAAAN,OAEA,IARY,IAOJC,EAAsBJ,EAAtBI,KAAMC,EAAgBL,EAAhBK,YAPFK,EAAA,SAQHC,GACP,IAAMC,EAAOR,EAAKS,QAClBD,EAAKE,QAAU,CACbC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,KAAK,EACLC,SAAS,EACTC,OAAO,EACPC,SAAS,EACTC,aAAa,EACbC,WAAW,GAEbd,EAAKe,QAAUtB,EAAYQ,QAC3BD,EAAKe,QAAQC,SAAU,EACvBhB,EAAKiB,IAAIjB,EAAKe,SACdf,EAAKkB,kBAAmB,EACxBlB,EAAKmB,eAAiB,SAAAC,GAAS,OAAIhC,EAAM+B,eAAe,CAAEnB,OAAMoB,eAChEpB,EAAKgB,SAAU,EACf3B,EAAK4B,IAAIjB,IAtBFD,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAGD,IARnB,OAAAT,8OADIgC,yFAmCT,IACCC,EAAa/B,KAAb+B,SACFC,EAAY,gBAAiBC,UAAYA,UAAUC,cAAgB,GACzEH,EAASI,QAAQ,SAAC1B,GAChBA,EAAKgB,SAAU,IAGjB,IADA,IAAIhB,EAAO,EACFD,EAAI,EAAGA,EAAIwB,EAASI,OAAQ5B,GAAK,EAAG,CAC3C,IAAM6B,EAAUL,EAASxB,GACzB,GACE6B,IAEiB,mBAAfA,EAAQC,IACLD,EAAQC,GAAGC,WAAW,iBACtBF,EAAQC,GAAGC,WAAW,yBAGvBF,EAAQG,MACVxC,KAAKyC,WAAW,CACdhC,KAAMsB,EAAStB,GACfE,QAAS0B,EAAQ1B,QACjB6B,KAAMH,EAAQG,OAIP,GADX/B,GAAQ,IACM,6CASjB,IAHDA,EAGCiC,EAHDjC,KACAE,EAEC+B,EAFD/B,QACA6B,EACCE,EADDF,KAEQG,EAAmB3C,KAAnB2C,eACc,OAAlBH,EAAKI,UACPnC,EAAKmC,SAASC,UAAUL,EAAKI,UAEN,OAArBJ,EAAKM,aACPrC,EAAKsC,WAAWF,UAAUL,EAAKM,aAEjCrC,EAAKuC,OAAOC,QAAQxC,EAAKmC,SAAUnC,EAAKsC,WAAYtC,EAAKyC,OACzDzC,EAAKuC,OAAOG,YAAYR,GACxBlC,EAAK2C,wBAAyB,EAC9B3C,EAAKgB,SAAU,EAEf,IAAMb,EAAOD,EAAQ,IAAMA,EAAQ,GAAG0C,QACtC5C,EAAKE,QAAQE,SAAWD,GAAQH,EAAKE,QAAQC,OAASA,EACtDH,EAAKE,QAAQG,QAAUF,GAAQH,EAAKE,QAAQC,OAASA,EACrDH,EAAKE,QAAQC,KAAOA,EACpB,IAAMG,EAAOJ,EAAQ,IAAMA,EAAQ,GAAG0C,QACtC5C,EAAKE,QAAQK,SAAWD,GAAQN,EAAKE,QAAQI,OAASA,EACtDN,EAAKE,QAAQM,QAAUF,GAAQN,EAAKE,QAAQI,OAASA,EACrDN,EAAKE,QAAQI,KAAOA,EACpB,IAAMG,EAAMP,EAAQ,IAAMA,EAAQ,GAAG0C,QACrC5C,EAAKE,QAAQQ,QAAUD,GAAOT,EAAKE,QAAQO,MAAQA,EACnDT,EAAKE,QAAQS,OAASF,GAAOT,EAAKE,QAAQO,MAAQA,EAClDT,EAAKE,QAAQO,IAAMA,EACnB,IAAMG,EAAUV,EAAQ,IAAMA,EAAQ,GAAG0C,QACzC5C,EAAKE,QAAQW,YAAcD,GAAWZ,EAAKE,QAAQU,UAAYA,EAC/DZ,EAAKE,QAAQY,WAAaF,GAAWZ,EAAKE,QAAQU,UAAYA,EAC9DZ,EAAKE,QAAQU,QAAUA,8CAGkB,IAAnBZ,EAAmB6C,EAAnB7C,KAAMoB,EAAayB,EAAbzB,UACvBpB,EAAK8C,YACR9C,EAAK8C,UAAY,IAAIC,KAFkB,IAIjCD,EAA2B9C,EAA3B8C,UAAWE,EAAgBhD,EAAhBgD,YACnBF,EAAUG,WAAWC,gBAAgBF,GACrC5B,EAAU+B,IAAIC,OAAOC,sBAAsBL,GAC3C5B,EAAU+B,IAAIG,UAAUC,IAAI,EAAG,GAAI,GAAGC,aAAaV,GACnD1B,EAAU+B,IAAIC,OAAOK,gBAAgBrC,EAAU+B,IAAIG,WAAY,sCAI/D,IAAKlE,EAAMsE,SAAU,CACnB,IAAMA,EAAW,IAAIC,IAAY,EAAG,EAAG,GACvCD,EAASjB,MAAM,IAAM,IAAM,IAC3BiB,EAASE,UAAU,EAAG,EAAG,MACzBF,EAASG,MAAMnC,QAAQ,SAACoC,EAAM/D,GAC5B+D,EAAKC,MAAMR,IAAI,SACN,IAALxD,GAAWA,GAAK,IAClB+D,EAAKC,MAAMC,UAAU,EAAG,GAAI,MAGhC5E,EAAMsE,UAAY,IAAIO,KAAkBC,aAAaR,GAElDtE,EAAM+E,WACT/E,EAAM+E,SAAW,IAAIC,IAAkB,CACrCL,MAAO,SACPM,IAAKC,OAGJlF,EAAMI,OACTJ,EAAMI,KAAO,IAAI+E,IACfnF,EAAMsE,SACNtE,EAAM+E,WAGL/E,EAAMoF,kBACTpF,EAAMoF,iBAAmB,IAAIP,KAC1BQ,cAAc,CAAC,IAAIC,IAAQ,EAAG,EAAG,GAAI,IAAIA,IAAQ,EAAG,GAAI,MAExDtF,EAAMuF,kBACTvF,EAAMuF,gBAAkB,IAAIC,IAAkB,CAC5Cb,MAAO,YAGN3E,EAAMK,cACTL,EAAMK,YAAc,IAAIoF,IACtBzF,EAAMoF,gBACNpF,EAAMuF,opCCnJRG,cACJ,SAAAA,EAAYC,GAAO,IAAA1F,EAAA,mGAAA2F,CAAAzF,KAAAuF,IACjBzF,uEAAA4F,CAAA1F,KAAA2F,EAAAJ,GAAAjF,KAAAN,KAAMwF,KACDI,OAASC,IAAMC,YACpBhG,EAAKiG,gBAAkBjG,EAAKiG,gBAAgBC,KAArBC,EAAAnG,IACvBA,EAAKoG,SAAWpG,EAAKoG,SAASF,KAAdC,EAAAnG,IAJCA,8OADEqG,4GAQD,IACSP,EAAa5F,KAAhC4F,OAAUQ,QAClBpG,KAAKqG,aAAeC,OAAOC,eAC3BvG,KAAKwG,OAAS,IAAIC,IAAkB,GAAI,EAAG,GAAK,MAChDzG,KAAK0G,MAAQ,IAAIC,IACjB3G,KAAK4G,IAAM,IAAIC,IAAQ,EAAG,OAC1B7G,KAAK6B,UAAY,IAAIiF,IACrB,IAAMC,EAAW,IAAIC,IAAc,CACjCC,WAAW,EACXrB,SACAsB,gBAAiB,mBACjBC,SAAS,IAEXJ,EAASK,cAAcd,OAAOe,kBAAoB,GAClDN,EAASO,iBAAiBtH,KAAK+F,iBAC/BO,OAAOiB,iBAAiB,SAAUvH,KAAKkG,UAAU,GACjDlG,KAAK+G,SAAWA,EAChB/G,KAAKwH,KAAO,IAAI1F,IAChB9B,KAAKwH,KAAK9F,IAAI1B,KAAKwG,QACnBxG,KAAKyH,MAAQ,IAAI5H,EACjBG,KAAKwH,KAAK9F,IAAI1B,KAAKyH,OACnBzH,KAAK0H,cACL1H,KAAK2H,aACL3H,KAAKkG,WACLlG,KAAK4H,0DAYL,OAAO,4CAGS,IAEdpB,EAMExG,KANFwG,OACAE,EAKE1G,KALF0G,MACAe,EAIEzH,KAJFyH,MACAV,EAGE/G,KAHF+G,SACAc,EAEE7H,KAFF6H,MACAC,EACE9H,KADF8H,MAEEA,GAAOA,EAAMC,QACjBhB,EAASiB,UAAY,CACnBC,MAAOvB,EAAMwB,WACbC,KAAMzB,EAAM0B,QAAU,KAExBX,EAAMY,SACNtB,EAASuB,OAAOT,EAAOrB,GACnBsB,GAAOA,EAAMS,yCAGR,IAEY3C,EAGjB5F,KAHF4F,OAAUQ,QACVI,EAEExG,KAFFwG,OACAO,EACE/G,KADF+G,SAJOyB,EAMiB5C,EAAO6C,WAAWC,wBAApCC,EANCH,EAMDG,MAAOC,EANNJ,EAMMI,OACf5I,KAAK2I,MAAQA,EACb3I,KAAK4I,OAASA,EACT7B,EAAS8B,GAAGC,gBACf/B,EAASgC,QAAQJ,EAAOC,GAE1BpC,EAAOwC,OAASL,EAAQC,EACxBpC,EAAOyC,oEAKP,OADqBjJ,KAAb+G,SACQmC,aAAaC,kDAGxB3E,GAAO,IACJoC,EAAkB5G,KAAlB4G,IAAKG,EAAa/G,KAAb+G,SACbH,EAAIpC,MAAM4E,OAAO5E,GACjBuC,EAASsC,cAAczC,EAAIpC,yCAGnB,IACAiD,EAAoBzH,KAApByH,MAAOV,EAAa/G,KAAb+G,SACTuC,EAAW,OAAQrH,UACnBsH,EAAW,kBAAmBtH,UACpC,GAAIqH,EAAU,CAGZ,IAAME,EAAU,WACd,IAAIzC,EAAS8B,GAAGC,eAAhB,CACA,IAAMW,EAAU1C,EAAS8B,GAAGa,YACvBD,EAOLA,EACGE,eAAe,CAAEC,WAAW,EAAMC,WAAW,IAC7CC,KAAK,SAACC,GACLhD,EAAS8B,GAAGmB,WAAWD,EAAS,CAAEE,qBAAsB,YAT1DhI,UAAUiI,GAAGC,gBAAgBL,KAAK,SAACL,GACjC1C,EAAS8B,GAAGuB,SAAU,EACtBrD,EAAS8B,GAAGwB,UAAUZ,OAU5BnD,OAAOiB,iBAAiB,YAAaiC,GAAS,GAC9CA,SACK,GAAID,EAAU,CACnB,IAAMC,EAAU,WACd,IAAIzC,EAAS8B,GAAGC,eAAhB,CACA,IAAMW,EAAU1C,EAAS8B,GAAGa,YACvBD,EASLA,EAAQa,eAAe,CAAC,CAAEC,OAAQxD,EAASyD,cARzCvI,UAAUwI,gBAAgBX,KAAK,SAACY,GAC9B,GAAKA,EAAStI,OAAd,CAD2C,IAEpCqH,EAFoCkB,EAEzBD,EAFyB,MAG3C3D,EAAS8B,GAAGuB,SAAU,EACtBrD,EAAS8B,GAAGwB,UAAUZ,QAM5BnD,OAAOiB,iBAAiB,YAAaiC,GAAS,GAC9ClD,OAAOiB,iBAAiB,oBAAqBiC,GAAS,GACtDA,IAEF/B,EAAM9E,eAAiBoE,EAAS8B,GAAG+B,0DAGvB,IACJpE,EAAWxG,KAAXwG,OACRA,EAAO5D,SAASoB,IAAI,EAAG,KAAM,GAC7BwC,EAAOqE,SAAS7G,IAAI,EAAG,EAAG,wCAc1B,OAVIhE,KAAK6H,OACP7H,KAAK6H,MAAM9F,SAASI,QAAQ,SAAC2I,GACvBA,EAAMC,SAASD,EAAMC,YAG7B/K,KAAKwH,KAAK5E,SAASoB,IAAI,EAAG,EAAG,GAC7BhE,KAAKgL,OAAO,QACZhL,KAAK6H,MAAQ,IAAIoD,IACjBjL,KAAK6H,MAAMnG,IAAI1B,KAAKwH,MACpBxH,KAAK6H,MAAMjB,IAAM5G,KAAK4G,IACf5G,KAAK6H,uCAGL,IACCjC,EAAW5F,KAAX4F,OACR,OACEsF,EAAAC,EAAAC,cAAA,UAAQC,IAAKzF,aAMnB0F,IAAYC,gBAAkBD,IAAYC,gBAAgBC,QACxD,0BACA,0BAEFF,IAAYG,WAAaH,IAAYG,WAAWD,QAC9C,4BACA,0BAEFF,IAAYI,kBAAoBJ,IAAYI,kBAAkBF,QAC5D,0BACA,0BAEFF,IAAYK,aAAeL,IAAYK,aAAaH,QAClD,uGACA,CACE,oCACA,sGACAI,KAAK,OACPJ,QACA,6DACA,sEAGajG,oOCxMf,IAAMsG,EAAU,CACdC,GCPa,CACbC,KAAM,CACJC,gBAAiB,mBACjBC,MAAO,QACPC,KAAM,OACNC,OAAQ,UACRC,iBAAkB,sBAClBC,QAAS,WACTC,SAAU,WACVC,SAAU,sBDDZC,GERa,CACbT,KAAM,CACJC,gBAAiB,uBACjBC,MAAO,QACPC,KAAM,SACNC,OAAQ,iBACRC,iBAAkB,4BAClBC,QAAS,gBACTC,SAAU,aACVC,SAAU,sBFCRE,EAAmBC,OAAOC,KAAKd,GAI/Be,EAAe,GACrBH,EAAiBtK,QAAQ,SAAC0K,GACxBD,EAAaC,GAAUC,qBAAM,EAAMjB,EAAO,GAAiBA,EAAQgB,MAI9D,4cGjBP,IAyEeE,EAPMC,YAAgB,CACnCC,OAnEa,WAGV,IAFHC,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,MACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAAQC,MACxB,QACE,OAAOP,IA4DXQ,UAxDgB,WAGb,IAFHR,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,IAAAA,UAAA,GACH,QADG,EAAAA,UAAA/K,OAAA+K,UAAA,QAAAC,GACYE,MACb,KAAKC,IACH,OAAO,EACT,KAAKA,IACH,OAAO,EACT,QACE,OAAOL,IA+CXS,WA3CiB,WAMd,IALHT,EAKG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GALK,CACNS,KAAM,EACNC,MAAO,GAETR,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAAO,EAAA,GACKZ,EADL,CAEEW,MAAOR,EAAOG,QAAQK,QAE1B,KAAKN,IACH,OAAAO,EAAA,GACKZ,EADL,CAEEU,KAAM,IAEV,KAAKL,IACH,OAAAO,EAAA,GACKZ,EADL,CAEEU,KAAMP,EAAOG,QAAQC,QAEzB,QACE,OAAOP,IAoBXa,OAhBa,WAGV,IAFHb,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,GACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAAQO,OACxB,QACE,OAAOb,MCgCEc,EATMhB,YAAgB,CACnC7I,SAtFe,WAGZ,IAFH+I,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,GACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAChB,KAAKD,IACH,MAAO,GACT,QACE,OAAOL,IA6EX5K,GAzES,WAGN,IAFH4K,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,GACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAAQS,IACxB,KAAKV,IACH,MAAO,GACT,QACE,OAAOL,IAgEXgB,UA5DgB,WAGb,IAFHhB,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,IAAAA,UAAA,GADHE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,QAASF,EAAOG,QAAQU,UAC1B,KAAKX,IACH,OAAO,EACT,QACE,OAAOL,IAmDXhB,KA/CW,WAGR,IAFHgB,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,GACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAAQtB,KACxB,KAAKqB,IACH,MAAO,GACT,QACE,OAAOL,IAsCXiB,KAlCW,WAGR,IAFHjB,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,EACRE,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACH,OAAOF,EAAOG,QAAQW,KACxB,KAAKZ,IACH,OAAO,EACT,QACE,OAAOL,IAyBXkB,OArBa,WAGV,IAFHlB,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFK,IAAIkB,YACZhB,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACL,KAAKA,IACH,OAAOF,EAAOG,QAAQY,OACxB,KAAKb,IACH,OAAO,IAAIc,YACb,QACE,OAAOnB,kBChFb,IAAMoB,EAAa,oBACbC,EAAgBC,KAAKC,MACzBC,aAAaC,QAAQL,IAAe,SAElCC,GACFK,IAAIC,iBAAiBN,EAAcO,OAGrC,IAoFeC,EAPK/B,YAAgB,CAClCgC,OA9Ea,WAGV,IAFH9B,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,KAFOoB,EAGV,QADG,EAAApB,UAAA/K,OAAA+K,UAAA,QAAAC,GACYE,MACb,KAAKC,IACL,KAAKA,IACL,KAAKA,IACH,OAAO,EACT,KAAKA,IACL,KAAKA,IACH,OAAO,EACT,QACE,OAAOL,IAkEX+B,YA9DkB,WAGf,IAFH/B,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,IAAAA,UAAA,GACH,QADG,EAAAA,UAAA/K,OAAA+K,UAAA,QAAAC,GACYE,MACb,KAAKC,IACH,OAAO,EACT,KAAKA,IACL,KAAKA,IACL,KAAKA,IACH,OAAO,EACT,QACE,OAAOL,IAmDXgC,QA/Cc,WAGX,IAFHhC,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFKoB,EAAgBA,EAAcW,QAAU,GAChD7B,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACL,KAAKA,IACL,KAAKA,IAA+B,IAC1B2B,EAAY7B,EAAOG,QAAnB0B,QAER,ibAAAC,CAAA,GACKD,EADL,CAEEE,UAHeF,EAAThD,KAGUmD,MAAM,KAAK,KAG/B,KAAK9B,IACL,KAAKA,IACH,MAAO,GACT,QACE,OAAOL,IA6BX4B,MAzBY,WAGT,IAFH5B,EAEG,EAAAC,UAAA/K,aAAAgL,IAAAD,UAAA,GAAAA,UAAA,GAFKoB,EAAgBA,EAAcO,MAAQ,GAC9CzB,EACG,EAAAF,UAAA/K,OAAA+K,UAAA,QAAAC,EACH,OAAQC,EAAOC,MACb,KAAKC,IACL,KAAKA,IACL,KAAKA,IAGH,OAFAqB,IAAIC,iBAAiBxB,EAAOG,QAAQsB,OACpCJ,aAAaY,QAAQhB,EAAYE,KAAKe,UAAUlC,EAAOG,UAChDH,EAAOG,QAAQsB,MACxB,KAAKvB,IACL,KAAKA,IAGH,OAFAqB,IAAIC,kBAAiB,GACrBH,aAAac,WAAWlB,GACjB,GACT,QACE,OAAOpB,MCtEEuC,EARKzC,YAAgB,CAClC0C,mBACAC,+BACAC,QACAC,QACAC,qBCTIC,EAAOC,IAAO7E,EAAV8E,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAGH,CAAH,iVA6DKI,EA7BA,kBACblF,EAAAC,EAAAC,cAAC2E,EAAD,CACEM,KAAK,mDACLC,IAAI,sBACJC,OAAO,UAEPrF,EAAAC,EAAAC,cAAA,OACEoF,MAAM,6BACN7H,MAAM,KACNC,OAAO,KACP6H,QAAQ,cACRC,KAAK,QAELxF,EAAAC,EAAAC,cAAA,QACEuF,EAAE,mCACFD,KAAK,SAEPxF,EAAAC,EAAAC,cAAA,QACEwF,UAAU,WACVD,EAAE,oFAEJzF,EAAAC,EAAAC,cAAA,QACEwF,UAAU,YACVD,EAAE,gxCCvDV,IAAME,EAAUb,IAAOc,IAAVb,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGH,CAAH,waAqCPe,cACJ,SAAAA,EAAYvL,GAAO,IAAA1F,+FAAAC,CAAAC,KAAA+Q,GACjBjR,uEAAAM,CAAAJ,KAAAK,EAAA0Q,GAAAzQ,KAAAN,KAAMwF,IAGN,IADA,IAAMwL,EAASC,EAAIF,EAAMC,QAChBE,EAAY,EAAGA,EAAcC,KAAKC,MAAQ,GAAM,EAAIF,GAAa,EACxE,IAAK,IAAIG,EAAQL,EAAO5O,OAAS,EAAY,GAATiP,EAAYA,GAAS,EAAG,CAC1D,IAAMC,EAASC,KAAKC,MAAMD,KAAKD,SAAWN,EAAO5O,QAC3CqP,EAAOT,EAAOK,GACpBL,EAAOK,GAASL,EAAOM,GACvBN,EAAOM,GAAUG,EATJ,OAajB3R,EAAK4R,OAASC,SAASvG,cAAc,SACrCtL,EAAK4R,OAAOE,QAAU9R,EAAK+R,KAAK7L,KAAV8L,EAAAhS,IACtBA,EAAK4R,OAAOK,OAAS,GACrBjS,EAAKoN,MAAQ,CAAE8E,WAAO5E,GACtBtN,EAAKkR,OAASA,EACdlR,EAAKkS,MAAQ,EAlBIlS,8OADDmS,gHAuBhBjS,KAAKkS,4EAGmB,IAAAC,EAAAnS,KAClBoS,EAAQ,SAARA,IACJ9L,OAAO+L,oBAAoB,YAAaD,GACxC9L,OAAO+L,oBAAoB,aAAcD,GACzC9L,OAAO+L,oBAAoB,oBAAqBD,GAChDD,EAAKG,QAEPhM,OAAOiB,iBAAiB,YAAa6K,GAAO,GAC5C9L,OAAOiB,iBAAiB,aAAc6K,GAAO,GAC7C9L,OAAOiB,iBAAiB,oBAAqB6K,GAAO,kCAG/C,IACGV,EAAW1R,KAAX0R,OAEHA,EAAOa,QACVb,EAAOc,QAETd,EAAOe,IAAM,GAEbzS,KAAKgS,OAAShS,KAAKgS,MAAQ,GAAKhS,KAAKgR,OAAO5O,OAC5CpC,KAAKsS,sCAGA,IAAAI,EAAA1S,KAEH0R,EAGE1R,KAHF0R,OACAM,EAEEhS,KAFFgS,MACAhB,EACEhR,KADFgR,OAGI2B,EAAW,6CACXrQ,EAAK0O,EAAOgB,GAIlBY,MAAK,qCAAAC,OAAsCvQ,EAAtC,iBAAAuQ,OAAwDF,IAC1D7I,KAAK,SAAAgJ,GAAG,OAAIA,EAAIC,SAChBjJ,KAAK,SAACkI,GACL,IAAKA,EACH,MAAM,IAAIgB,MAAJ,yBAAAH,OAAmCvQ,IAG3CoP,EAAOe,IAAP,GAAAI,OAAgBb,EAAMiB,WAAtB,KAAAJ,OAAoCF,GACpCjB,EAAOY,OACPI,EAAKQ,SAAS,CAAElB,YAEjBmB,MAAM,kBACLT,EAAKb,0CAIF,IACCG,EAAUhS,KAAKkN,MAAf8E,MACR,IAAKA,EACH,OAAO,KAHF,IAMLoB,EAKEpB,EALFoB,MACaC,EAIXrB,EAJFsB,YACeC,EAGbvB,EAHFwB,cARKC,EAWHzB,EAFFlC,KAAQ4D,EATHD,EASGC,SAAyBC,EAT5BF,EASaD,cACJI,EACZ5B,EADF6B,aAEF,OACE3I,EAAAC,EAAAC,cAACyF,EAAD,KACE3F,EAAAC,EAAAC,cAAA,KACEiF,KAAMkD,EACNjD,IAAI,sBACJC,OAAO,UAEPrF,EAAAC,EAAAC,cAAA,OAAK0I,IAAKV,EAAOX,IAAKY,GAAWO,KAEnC1I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KACEiF,KAAMkD,EACNjD,IAAI,sBACJC,OAAO,UAEN6C,GAEHlI,EAAAC,EAAAC,cAAA,KACEiF,KAAMsD,EACNrD,IAAI,sBACJC,OAAO,UAENmD,cASb3C,EAAMC,OAAS,CAAC,UAAU,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,UAAU,UAAU,UAAU,SAAS,SAAS,UAAU,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,SAAS,QAAQ,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,QAAQ,QAAQ,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,UAAU,UAAU,UAAU,SAAS,UAAU,SAAS,UAAU,QAAQ,SAAS,SAAS,UAAU,SAAS,UAAU,UAAU,UAAU,UAAU,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,WAEh3BD,wxBClJf,IAAMF,EAAUb,IAAOc,IAAVb,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGH,CAAH,6EASP+D,EAAQ/D,IAAOc,IAAVb,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAAGH,CAAH,uIAULgE,EAAUhE,IAAOc,IAAVb,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGH,CAAH,gWAiCPiE,GAAUjE,IAAOc,IAAVb,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGH,CAAH,uiBA2CPkE,GAAOlE,IAAOmE,KAAVlE,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGH,CAAH,0SA0BJoE,eACJ,SAAAA,EAAY5O,GAAO,IAAA1F,EAAA,mGAAAuU,CAAArU,KAAAoU,IACjBtU,uEAAAwU,CAAAtU,KAAAuU,EAAAH,GAAA9T,KAAAN,KAAMwF,KACDgP,cAAgB1U,EAAK0U,cAAcxO,KAAnByO,EAAA3U,IACrBA,EAAK4U,iBAAmB5U,EAAK4U,iBAAiB1O,KAAtByO,EAAA3U,IACxBA,EAAKoN,MAAQ,CAAEyH,IAAK,SAJH7U,8OADCmS,0GAQN2C,GACZA,EAAEC,iBADa,IAECV,EAASS,EAAjBrE,QAERuE,EADkB9U,KAAKwF,MAAfsP,OACF,CACJ7I,MAAOkI,EAAKlI,MAAMwB,MAClBnB,SAAU6H,EAAK7H,SAASmB,iDAIXmH,GACfA,EAAEC,iBADgB,IAEFV,EAASS,EAAjBrE,OACAhE,EAAavM,KAAKwF,MAAlB+G,SACJ4H,EAAK7H,SAASmB,QAAU0G,EAAKnI,gBAAgByB,OAGjDlB,EAAS,CACPN,MAAOkI,EAAKlI,MAAMwB,MAClBvB,KAAMiI,EAAKjI,KAAKuB,MAChBnB,SAAU6H,EAAK7H,SAASmB,yCAInB,IAAA0E,EAAAnS,KAAA+U,EAKH/U,KAAKwF,MAHPyJ,EAFK8F,EAEL9F,YACA+F,EAHKD,EAGLC,KACAC,EAJKF,EAILE,gBAEMN,EAAQ3U,KAAKkN,MAAbyH,IACR,OAAK1F,EAIH/D,EAAAC,EAAAC,cAAC8J,EAAD,KACEhK,EAAAC,EAAAC,cAAC2I,EAAD,KACE7I,EAAAC,EAAAC,cAAC4I,EAAD,KACE9I,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,QACb1F,EAAAC,EAAAC,cAAA,KACEwF,UAAmB,UAAR+D,EAAkB,SAAW,KACxCQ,QAAS,kBAAMhD,EAAKe,SAAS,CAAEyB,IAAK,YAEpCzJ,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,iBAEnBvC,EAAAC,EAAAC,cAAA,KACEwF,UAAmB,aAAR+D,EAAqB,SAAW,KAC3CQ,QAAS,kBAAMhD,EAAKe,SAAS,CAAEyB,IAAK,eAEpCzJ,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,oBAGrBvC,EAAAC,EAAAC,cAAA,KACE+J,QAASH,GAET9J,EAAAC,EAAAC,cAACiK,EAAA,QAAD,QAGJnK,EAAAC,EAAAC,cAAC6I,GAAD,KACE/I,EAAAC,EAAAC,cAAC8I,GAAD,CACEtD,UAAmB,UAAR+D,EAAkB,SAAW,KACxCW,SAAUtV,KAAKwU,eAEftJ,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,gBACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,QAAQpB,KAAK,QAAQqJ,UAAQ,IACzCrK,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,mBACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,WAAWpB,KAAK,WAAWqJ,UAAQ,IAC/CrK,EAAAC,EAAAC,cAAA,UACEkC,KAAK,UAELpC,EAAAC,EAAAC,cAACiK,EAAA,MAAD,MACAnK,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,kBAGrBvC,EAAAC,EAAAC,cAAC8I,GAAD,CACEtD,UAAmB,aAAR+D,EAAqB,SAAW,KAC3CW,SAAUtV,KAAK0U,kBAEfxJ,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,eACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,OAAOpB,KAAK,OAAOqJ,UAAQ,IACvCrK,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,gBACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,QAAQpB,KAAK,QAAQqJ,UAAQ,IACzCrK,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,mBACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,WAAWpB,KAAK,WAAWqJ,UAAQ,IAC/CrK,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,0BACxBvC,EAAAC,EAAAC,cAAA,SAAOkC,KAAK,WAAWpB,KAAK,kBAAkBqJ,UAAQ,IACtDrK,EAAAC,EAAAC,cAAA,UACEkC,KAAK,UAELpC,EAAAC,EAAAC,cAACiK,EAAA,MAAD,MACAnK,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,oBAGrBvC,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,MACb1F,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,aAEnBvC,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,UACb1F,EAAAC,EAAAC,cAAA,UACE+J,QAASF,EACT3H,KAAK,UAELpC,EAAAC,EAAAC,cAACiK,EAAA,2BAAD,MACAnK,EAAAC,EAAAC,cAACgK,EAAA,UAAD,CAAW3H,MAAM,+BAtEpB,cAgFb2G,GAAQoB,UAAY,CAClBvG,YAAawG,IAAUC,KAAKC,WAC5BX,KAAMS,IAAUG,KAAKD,WACrBb,MAAOW,IAAUG,KAAKD,WACtBV,gBAAiBQ,IAAUG,KAAKD,WAChCpJ,SAAUkJ,IAAUG,KAAKD,YAGZE,yBACb,SAAAnT,GAAA,MAIO,CACLuM,YALFvM,EACEoN,KACEb,cAKJ,CACE+F,SACAF,UACAG,oBACA1I,cAZWsJ,CAcbzB,+OCjRF,IAAM0B,GAAS,SAAApT,GAAA,IAAGqE,EAAHrE,EAAGqE,SAAH,OACbmE,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACG,CACC,CAAEC,KAAM,IAAK7P,UAAW8P,MACxB,CAAED,KAAM,SAAU7P,UAAW+P,OAC7BpR,IAAI,SAAAxB,GAAA,IAAG0S,EAAH1S,EAAG0S,KAAM7P,EAAT7C,EAAS6C,UAAT,OACJ+E,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,OAAK,EACLC,IAAKJ,EACLA,KAAMA,EACN1N,OAAQ,SAAA9C,GAAK,OACX0F,EAAAC,EAAAC,cAACjF,EAADkQ,GAAA,GAAe7Q,EAAf,CAAsBuB,SAAUA,UAItCmE,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAUO,GAAG,QAIjBR,GAAON,UAAY,CACjBzO,SAAU0O,IAAUc,MAAM,CACxBnQ,QAASqP,IAAUe,WAAWjR,OAC7BoQ,YAGUG,0zBCtBf,IXcgBW,GAERC,GACAC,GAQF9J,GWzBAgE,GAAUb,IAAOc,IAAVb,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGH,CAAH,+BAKP4G,GAAkB,CACtBC,gBAAiB,OACjBC,OAAQ,GA2BiBC,eAvBzB,SAAAA,EAAYvR,GAAO,IAAA1F,EAAA,mGAAAkX,CAAAhX,KAAA+W,IACjBjX,EAAAmX,GAAAjX,KAAAkX,GAAAH,GAAAzW,KAAAN,KAAMwF,KACDuB,SAAWlB,IAAMC,YAFLhG,+OADAmS,uGAMV,IACClL,EAAa/G,KAAb+G,SACFV,EAAeC,OAAOC,eAC5B,OACE2E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+L,EAAAhM,EAAD,CAAYiM,MAAOR,KACnB1L,EAAAC,EAAAC,cAACiM,GAAD,KACEnM,EAAAC,EAAAC,cAACkM,EAAA,EAAD,CAAUjM,IAAKtE,KAEjBmE,EAAAC,EAAAC,cAACmM,GAAD,CAAQxQ,SAAUA,IAClBmE,EAAAC,EAAAC,cAACoM,EAAD,MACEnR,EAA4B,KAAb6E,EAAAC,EAAAC,cAACqM,EAAD,MACjBvM,EAAAC,EAAAC,cAACrB,GAAD,gBCtBF9G,IADaqD,OAAOoR,qCACmCC,KACvDlB,GAAQmB,YACZnI,EACA,GACAxM,GACE4U,YAAgBC,IAAiBC,IAAmBC,oCZGxCvB,GYASA,GZEjBC,GAAehI,aAAaC,QAAQ,oBACpCgI,KACHrQ,OAAOrE,UAAUgW,UAAY3R,OAAOrE,UAAUgW,UAAU,GAAK,OAC3D3R,OAAOrE,UAAUiW,UACjB5R,OAAOrE,UAAUkW,iBACjB7R,OAAOrE,UAAUmW,cApBF,MAsBlBC,OAAO,EAAG,GAAGC,cAEXzL,GAxBgB,MAyBfJ,EAAiB8L,QAAQ7B,IAAe7J,GAAS6J,IAC5CjK,EAAiB8L,QAAQ5B,MAAgB9J,GAAS8J,IAG5D6B,mCAAyB/B,IACpBA,GApBCgC,SAASC,2BAAiB9L,IAqBhC6J,GAAMgC,SAASE,oBAAU9L,KYfvB4J,GAAMmC,WAAW9I,KAAKd,QACxByH,GAAMgC,SAASI,eAIjB,IAAMC,GAAUC,YAAqB,CACnCC,SAAUC,MAIR3S,OAAO4S,SAASC,MAClBL,GAAQtN,QAAR,IAAAqH,OAAoBvM,OAAO4S,SAASC,KAAKd,OAAO,KAIlD/R,OAAOiB,iBAAiB,cAAe,SAAAqN,GAAC,OACtCA,EAAEC,mBACD,GAGH,IAAMuE,GAAQzH,SAAS0H,eAAe,SACtC/Q,iBACE4C,EAAAC,EAAAC,cAACkO,EAAA,SAAD,CAAU7C,MAAOA,IACfvL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAQ+C,QAASA,IACf5N,EAAAC,EAAAC,cAACmO,GAAD,QAGJH,yCCtDFI,EAAA7I,EAAA8I,EAAA,sBAAAC,IAAAF,EAAA7I,EAAA8I,EAAA,sBAAAlN,IAAAiN,EAAA7I,EAAA8I,EAAA,sBAAAZ,IAAAW,EAAA7I,EAAA8I,EAAA,sBAAAE,IAAAH,EAAA7I,EAAA8I,EAAA,sBAAA3E,IAAA0E,EAAA7I,EAAA8I,EAAA,sBAAAxE,IAAAuE,EAAA7I,EAAA8I,EAAA,sBAAAG,IAAAJ,EAAA,YAAAK,EAAAL,EAAA,QAAAM,EAAAN,EAAA,QAIO,SAASE,IACd,MAAO,CACLpM,KAAMC,KAIH,SAAShB,EAAT7J,GAA6C,IAAzBuJ,EAAyBvJ,EAAzBuJ,MAAOC,EAAkBxJ,EAAlBwJ,KAAMI,EAAY5J,EAAZ4J,SACtC,OAAO,SAAAmM,GAAQ,OAAIA,EAAS,CAC1BnL,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBmH,KAAM,CACJ9N,QACAC,OACAI,YAEF0N,SAAU,OACVC,OAAQ,UAET9G,MAAM,eAGJ,SAAS0F,IACd,OAAO,SAAAJ,GAAQ,OAAIA,EAAS,CAC1BnL,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBoH,SAAU,WAEX7G,MAAM,eAUJ,SAASwG,IACd,MAAO,CACLrM,KAAMC,KAIH,SAASuH,EAATxR,GAAoC,IAAnB2I,EAAmB3I,EAAnB2I,MAAOK,EAAYhJ,EAAZgJ,SAC7B,OAAO,SAAAmM,GAAQ,OAAIA,EAAS,CAC1BnL,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBmH,KAAM,CACJ9N,QACAK,YAEF0N,SAAU,OACVC,OAAQ,WAET9G,MAAM,eAGJ,SAAS8B,IACd,OAAO,SAACwD,GACN,IAEMyB,EAAQ5T,OAAO6T,OAAOxR,MAAQ,EAAKyR,IACnCC,EAAO/T,OAAO6T,OAAOvR,OAAS,EAAK0R,IACnCC,EAAMjU,OAAOkU,KAAP,GAAA3H,OACPjE,IAAI6L,QADG,eAEV,kBAFU,SAAA5H,OAJF,IAIE,YAAAA,OAHF,IAGE,SAAAA,OAGoBwH,EAHpB,UAAAxH,OAGgCqH,IAEtCQ,EAAUC,YAAY,WACrBJ,EAAIjU,OAITiU,EAAIK,aAAY,EAAMhM,IAAI6L,SAHxBI,cAAcH,IAIf,KAcHpU,OAAOiB,iBAAiB,UAbN,SAAZuT,EAAYC,GAAmC,IAAhClX,EAAgCkX,EAAhClX,OAAgBkG,EAAgBgR,EAAxBC,KAAQjR,QACnC,GAAoC,IAAhC6E,IAAI6L,QAAQlC,QAAQ1U,GAAe,CAGrC,GAFAyC,OAAO+L,oBAAoB,UAAWyI,GACtCD,cAAcH,IACT3Q,EACH,OAEF0O,EAAS,CACPnL,KAAMC,IACNC,QAASzD,OAI+B,IAI3C,SAAS6P,IACd,MAAO,CACLtM,KAAMC,y5CC/EJ0I,sZAAchE,gHACE,IAAA8C,EAgBd/U,KAAKwF,MAdPyH,EAFgB8H,EAEhB9H,OACAS,EAHgBqH,EAGhBrH,UACAoL,EAJgB/D,EAIhB+D,QACA7J,EALgB8F,EAKhB9F,YACAtB,EANgBoH,EAMhBpH,WACAI,EAPgBgH,EAOhBhH,OACA+B,EARgBiF,EAQhBjF,KACqB/I,EATLgO,EAShBhO,SAAYX,QACZ6U,EAVgBlG,EAUhBkG,YACAC,EAXgBnG,EAWhBmG,YACAC,EAZgBpG,EAYhBoG,UACAC,EAbgBrG,EAahBqG,QACAC,EAdgBtG,EAchBsG,OACAzB,EAfgB7E,EAehB6E,QAGI0B,EAAavU,EAASoC,mBACtBtB,EAAQd,EAASY,aACvBE,EAAMnG,IAAI,IAAI6Z,KACd1T,EAAMnG,IAAI,IAAI8Z,KACd3T,EAAMnG,IAAI,IAAI+Z,IAAM,CAAEH,gBACtBtb,KAAKY,KAAO,IAAI8a,IAAK,CACnBJ,aACArO,SACA6L,UACA7J,cACAtB,aACAI,SACA+B,OACAmL,cACAE,YACAC,UACAC,SACAzB,YAEF/R,EAAMnG,IAAI1B,KAAKY,MACfZ,KAAK+G,SAAWA,GAChB/G,KAAK6H,MAAQA,GACP8T,eAAiB3b,KAAK2b,eAAe3V,KAAKhG,MAE3C+G,EAASA,SAAS8B,GAAGuB,UACxBpK,KAAK4b,QAAUC,IACbvV,OACA,CACEwV,UAAU,EACVvL,OAAQxJ,EAASnB,OAAOQ,UAGzB2V,GAAG,QAAS/b,KAAKgc,cAAchW,KAAKhG,QAEpC0N,GAEHwN,kDAUD,IALOe,EAKPvZ,EALDuK,OACaiP,EAIZxZ,EAJDuM,YACYkN,EAGXzZ,EAHDiL,WACQyO,EAEP1Z,EAFDqL,OACMsO,EACL3Z,EADDoN,KACCwM,EASGtc,KAAKwF,MAPPyH,EAFDqP,EAECrP,OACAgC,EAHDqN,EAGCrN,YACAtB,EAJD2O,EAIC3O,WACAI,EALDuO,EAKCvO,OACA+B,EANDwM,EAMCxM,KACAoL,EAPDoB,EAOCpB,YACAC,EARDmB,EAQCnB,UAGAva,EAEEZ,KAFFY,KACYyF,EACVrG,KADF+G,SAAYV,aAERkW,EAAmBtP,IAAWgP,GAElCM,GACG5O,EAAWC,OAASuO,EAAmBvO,OAG1CsN,IAEEqB,GAEF3b,EAAK4b,aAAavP,GAEhBgC,IAAgBiN,GAElBtb,EAAK6b,cAAc,CAAExN,gBAEnBtB,IAAewO,GAEjBvb,EAAK8b,iBAAiB/O,GAEpBI,IAAWqO,IAEbxb,EAAK+b,aAAa5O,GACd1H,GACFuW,EAAa,WACXtW,OAAOuW,sBAAuB,KAIhC/M,IAASuM,IAEXzb,EAAK6b,cAAc,CAAE3M,SAChBA,GAAmB,SAAX7C,GACXkO,EAAU,uDAKO,IACbtT,EAAmB7H,KAAnB6H,MAAO+T,EAAY5b,KAAZ4b,eACR/T,EAAM8T,eACTC,GACFA,EAAQkB,mDAIK,IAEblc,EAKEZ,KALFY,KAFamc,EAOX/c,KAJF+G,SACEU,EAJWsV,EAIXtV,MACA5F,EALWkb,EAKXlb,UAKJ4F,EAAM1F,SAASI,QAAQ,SAAC1B,EAAMD,GAAM,IAC1BG,EAAqBF,EAArBE,QAASa,EAAYf,EAAZe,QACjBf,EAAKmB,eAAeC,GACpB,IAAMmb,EAAMnb,EAAUob,iBAAiBrc,EAAKsc,YAAY,KAAM,EAC9D,IAAKF,EAGH,OAFAxb,EAAQC,SAAU,OAClBb,EAAKuc,SAAS,CAAE1c,KAAMD,IANU,IAUhC4c,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,MAGF9b,EAAQ0B,MAAMqa,EAAIH,EAAW,KAC7B5b,EAAQC,SAAU,EAElB4b,EAAOG,UAAU,CACf/c,KAAMD,EACNid,OAAQ9c,EAAQW,YAChBgc,kDAKQ1I,KAAW,IAAAmG,EAAApQ,EAAArH,EAAA,GAAPoa,EAAO3C,EAAA,GAAJ4C,EAAI5C,EAAA,GAGrBna,EAUEZ,KAVFY,KAEEqO,EAQAjP,KATFwF,MACEyJ,YALmB2O,EAanB5d,KANF+G,SACEP,EARmBoX,EAQnBpX,OACA3E,EATmB+b,EASnB/b,UACA8G,EAVmBiV,EAUnBjV,MACAC,EAXmBgV,EAWnBhV,OAGJ,IAAIqG,EAAJ,CAGApN,EAAUgc,cAAc,CACtBH,GAAuD,EAApDnM,KAAKuM,IAAIvM,KAAKwM,IAAI,GAAOL,EAAI/U,GAAS,IAAM,IAC/CgV,EAAuD,EAApDpM,KAAKuM,IAAIvM,KAAKwM,IAAI,GAAOJ,EAAI/U,GAAU,IAAM,KAC/CpC,GACH,IAAMwW,EAAMnb,EAAUob,iBAAiBrc,EAAKsc,YAAY,KAAM,EACzDF,GAGLA,EAAIK,OAAOG,UAAU,CACnB/c,KAAM,EACNgd,QAAQ,EACRH,MAAON,EAAIM,0CAKb,OAAO,cAIXrH,EAAM+H,aAAe,CACnBlO,UAAM1C,GAGR6I,EAAMT,UAAY,CAChBvI,OAAQwI,IAAUwI,OAAOtI,WACzBjI,UAAW+H,IAAUC,KAAKC,WAE1BmD,QAASrD,IAAU4H,OAAO1H,WAC1B1G,YAAawG,IAAUC,KAAKC,WAC5BhI,WAAY8H,IAAUc,MAAM,CAC1B3I,KAAM6H,IAAUyI,OAAOvI,WACvB9H,MAAO4H,IAAUyI,OAAOvI,aACvBA,WACH5H,OAAQ0H,IAAU0I,QAAQ1I,IAAUc,MAAM,CACxCrK,KAAMuJ,IAAUwI,OAAOtI,WACvByI,KAAM3I,IAAUwI,OAAOtI,cACrBA,WACJ5O,SAAU0O,IAAUc,MAAM,CACxBnQ,QAASqP,IAAUe,WAAWjR,OAC7BoQ,WACH7F,KAAM2F,IAAUc,MAAM,CACpBtI,IAAKwH,IAAUwI,OACf/R,KAAMuJ,IAAUwI,SAElBhD,YAAaxF,IAAUG,KAAKD,WAC5BuF,YAAazF,IAAUG,KAAKD,WAC5BwF,UAAW1F,IAAUG,KAAKD,WAC1ByF,QAAS3F,IAAUG,KAAKD,WACxB0F,OAAQ5F,IAAUG,KAAKD,WACvBiE,QAASnE,IAAUG,KAAKD,YAGXE,sBACb,SAAAwI,GAAA,IAAAC,EAAAD,EACEzO,MACE3C,EAFJqR,EAEIrR,OACAS,EAHJ4Q,EAGI5Q,UACAC,EAJJ2Q,EAII3Q,WACAI,EALJuQ,EAKIvQ,OALJwQ,EAAAF,EAOEvO,KACEd,EARJuP,EAQIvP,OACAC,EATJsP,EASItP,YACSa,EAVbyO,EAUIrP,QAVJ,MAYO,CACLjC,SACAS,YACAuB,cACAtB,aACAI,SACA+B,KAAMd,EAASc,OAAO1C,IAExB,CACE6N,gBACAC,gBACAC,cACAC,YACAC,WACAzB,aA3BW/D,CA6BbI,i5BCrQIuI,cACJ,SAAAA,EAAA9b,GAAmC,IAAA5C,EAAA2e,EAAA/b,EAArBgc,iBAAqB,IAAAD,KAEjC,+FAFiC1e,CAAAC,KAAAwe,GACjC1e,EAAAM,EAAAJ,KAAAK,EAAAme,GAAAle,KAAAN,OACI0e,EAAW,KACLC,EAAWH,EAAXG,OACR7e,EAAKqE,SAAW,IAAIya,IACpB9e,EAAK8E,SAAW,IAAIia,IAAe,CACjCC,QAASH,EAAOG,QAChBC,aAAcJ,EAAOK,OACrBC,eAAgBN,EAAOO,SACvBC,SAAUC,IAActS,MAAM,CAC5B6R,EAAOQ,SACP,CAAEra,IAAK,CAAE2I,MAAO1I,QAElB6B,KAAK,EACLyY,aAAcC,WAGhBxf,EAAKqE,SAAW,IAAIO,IACpB5E,EAAK8E,SAAW,IAAIC,IAAkB,CACpCC,IAAKC,IACLsa,aAAcC,MApBe,OAuBjCxf,EAAK4e,UAAYA,EACjB5e,EAAK2B,SAAU,EAEf3B,EAAKyf,IAAM,CACTC,QAAS,IAAIC,IACbzc,OAAQ,IAAIQ,KA5BmB1D,8OADhBgC,0FAiCT,IACAqC,EAAuBnE,KAAvBmE,SAAUS,EAAa5E,KAAb4E,SAClBT,EAAS4G,UACTnG,EAASmG,yCAGJoD,GAOL,IAPW,IAAAgE,EAAAnS,KAET+B,EAIE/B,KAJF+B,SACAoC,EAGEnE,KAHFmE,SACAua,EAEE1e,KAFF0e,UACA9Z,EACE5E,KADF4E,SAEK7C,EAASK,QACdpC,KAAK0f,OAAO3d,EAAS,IAIvB/B,KAAK2f,UAAY,GAGjB,IAFA,IAAMJ,EAAM,IAAIpa,IACVtB,EAAS,IAAIsB,IACVoY,GAJM,EAIOA,GAJP,EAIoBA,GAAK,EACtC,IAAK,IAAII,GALI,EAKSA,GALT,EAKsBA,GAAK,EACtC,IAAK,IAAID,GANE,EAMWA,GANX,EAMwBA,GAAK,EAAG,CACzC,IAAMN,EAAWmC,EAAIvb,IAAI0Z,EAAGC,EAAGJ,GAAGqC,WAAW/b,GAC7C,GAAI0N,KAAKsO,MAAMzC,IARN,EAQ2B,CAClC,IAAM0C,EAAW,IAAI9a,IACnBb,EACAS,GAEFkb,EAASC,MAAQ,CAAErC,IAAGC,IAAGJ,KACzBuC,EAAS1C,SAAWA,EACpB0C,EAASne,kBAAmB,EAC5Bme,EAASld,SAASoB,IAAI0Z,EAAIvP,EAAMwP,EAAIxP,EAAMoP,EAAIpP,GAC9C2R,EAASE,eACTF,EAASG,oBACTjgB,KAAK2f,UAAUO,KAAKJ,IAiB5B,GAZA9f,KAAK2f,UAAUQ,KAAK,SAAA7c,EAAAyX,GAAA,OAAAzX,EAAG8Z,SAAHrC,EAAoBqC,WAGxCpd,KAAKkd,WAAald,KAAK2f,UAAU1S,OAAO,SAAC6S,GAAa,IAAAM,EACrBN,EAAvBC,MAASrC,EADmC0C,EACnC1C,EAAGC,EADgCyC,EAChCzC,EAAGJ,EAD6B6C,EAC7B7C,EACvB,OACQ,GAANG,GAAWA,GAAK,IACP,GAANC,GAAWA,GAAK,IACV,GAANJ,GAAWA,GAAK,IAInBmB,EAAW,CACb,IAAMze,EAAO,IAAI+E,IACfb,EACAS,GAEF3E,EAAKogB,eAAgB,EACrBrgB,KAAK0B,IAAIzB,GACT,IAAMqgB,EAAS,IAAIC,aAAqC,EAAxBvgB,KAAK2f,UAAUvd,QAC3C+B,EAASqc,WAAWF,OACtBnc,EAASqc,WAAWF,OAAOG,SAASH,IAEpCnc,EAASuc,aAAa,SAAU,IAAIC,IAAyBL,EAAQ,IACrEnc,EAASqc,WAAWF,OAAOM,YAAW,IAExCzc,EAAS0c,kBAAoB,OAE7B7gB,KAAK2f,UAAUxd,QAAQ,SAAA2d,GAAQ,OAAI3N,EAAKzQ,IAAIoe,2CAIlCtZ,GAAQ,IAAAsa,EAMhB9gB,KAJFuf,IAAOC,EAFWsB,EAEXtB,QAASxc,EAFE8d,EAEF9d,OAChBmB,EAGEnE,KAHFmE,SACAua,EAEE1e,KAFF0e,UACAiB,EACE3f,KADF2f,UAEF,GAAKjB,GAAciB,EAAnB,CACA3c,EAAO+d,iBAAiBva,EAAOwa,iBAAkBxa,EAAOya,oBACxDzB,EAAQ0B,cAAcle,GACtB,IAAMme,EAAUxB,EACb1S,OAAO,SAAAoR,GAAA,IAAG+C,EAAH/C,EAAG+C,YAAH,OAAqBA,GAAe5B,EAAQ6B,iBAAiBD,KACpEE,OAAO,SAACH,EAADI,GAA2B,IAAf3e,EAAe2e,EAAf3e,SAMlB,OALAue,EAAQjB,KACNtd,EAAS8a,EACT9a,EAAS+a,EACT/a,EAAS2a,GAEJ4D,GACN,IACLhd,EAASqc,WAAWF,OAAOkB,MAAMxd,IAAImd,GACrChd,EAASqc,WAAWF,OAAOmB,aAAc,EACzCtd,EAAS0c,kBAAoBM,EAAQ/e,OAAS,qCAS7C,IALDiP,EAKCqQ,EALDrQ,MACAzO,EAIC8e,EAJD9e,SACA4B,EAGCkd,EAHDld,MACAmd,EAECD,EAFDC,OACAC,EACCF,EADDE,GAEQzd,EAAwBnE,KAAxBmE,SAAUwb,EAAc3f,KAAd2f,UACdxb,EAASqc,WAAW5d,UACtBuB,EAASqc,WAAW5d,SAAS6d,SAAS7d,GACtCuB,EAASqc,WAAW5d,SAAS6e,aAAc,GAE3Ctd,EAASuc,aAAa,WAAY,IAAImB,IAAgBjf,EAAU,IAE9DuB,EAASqc,WAAWhc,OACtBL,EAASqc,WAAWhc,MAAMic,SAASjc,GACnCL,EAASqc,WAAWhc,MAAMid,aAAc,GAExCtd,EAASuc,aAAa,QAAS,IAAImB,IAAgBrd,EAAO,IAExDL,EAASqc,WAAWmB,QACtBxd,EAASqc,WAAWmB,OAAOlB,SAASkB,GACpCxd,EAASqc,WAAWmB,OAAOF,aAAc,GAEzCtd,EAASuc,aAAa,SAAU,IAAImB,IAAgBF,EAAQ,IAE1Dxd,EAASqc,WAAWoB,IACtBzd,EAASqc,WAAWoB,GAAGnB,SAASmB,GAChCzd,EAASqc,WAAWoB,GAAGH,aAAc,GAErCtd,EAASuc,aAAa,KAAM,IAAImB,IAAgBD,EAAI,IAElDzd,EAASkN,OACXlN,EAASkN,MAAMoP,SAASpP,GACxBlN,EAASkN,MAAMoQ,aAAc,GAE7Btd,EAAS2d,SAAS,IAAID,IAAgBxQ,EAAO,IAE/ClN,EAAS4d,wBACTpC,EAAUxd,QAAQ,SAAC2d,GACjBA,EAASsB,YAAcjd,EAAS6d,eAC7BthB,QACAuD,aAAa6b,EAASrc,eAE3BzD,KAAKyB,SAAU,WAInB+c,EAAOG,OAAS,CACdK,OACEiD,IAAUC,MAAMnD,aACbvT,QACC,yCACA,CACE,yCACA,0BACAI,KAAK,OAERJ,QACC,0BACA,CACE,iDACAI,KAAK,OAGbsT,SAAU+C,IAAUC,MAAMjD,eAC1BE,SAAUC,IAAc1e,MAAMuhB,IAAUC,MAAM/C,UAC9CL,QAAS,CAAEqD,SAAS,IAGP3D,s2BClNTjD,cACJ,SAAAA,IAAc,mGAAAxb,CAAAC,KAAAub,GAETA,EAAOpX,UACJoX,EAAO3W,UAEX2W,EAAOpb,QALGC,EAAAJ,KAAAK,EAAAkb,GAAAjb,KAAAN,KAQVub,EAAOpX,SACPoX,EAAO3W,uPAVQI,6FAejB,IAAKuW,EAAOpX,SAAU,CACpB,IACMA,EAAW,IAAIie,IADR,iBAEbje,EAASke,SAAmB,GAAX9Q,KAAK+Q,IACtB,IAAM9d,EAAQ,IAAI+d,IAClBpe,EAASG,MAAMnC,QAAQ,SAACoC,EAAM/D,GACxBA,EAAI,GAAM,EACZ+D,EAAKC,MAAMge,KAAKhe,IAEhBD,EAAKC,MAAM4E,OAAO,SAClB7E,EAAKC,MAAMC,UAAU,EAAG,GAAoB,GAAjB8M,KAAKD,UAChC9M,EAAMge,KAAKje,EAAKC,UAGpB+W,EAAOpX,UAAY,IAAIO,KAAkBC,aAAaR,GAEnDoX,EAAO3W,WACV2W,EAAO3W,SAAW,IAAIC,IAAkB,CACtCwa,aAAcC,gBAMP/D,yCChDf/B,EAAA7I,EAAA8I,EAAA,sBAAAyB,IAAA1B,EAAA7I,EAAA8I,EAAA,sBAAA0B,IAAA3B,EAAA7I,EAAA8I,EAAA,sBAAA2B,IAAA,IAAAqH,EAAAjJ,EAAA,QAAAkJ,EAAAlJ,EAAA,QAGO,SAAS0B,IACd,OAAO,SAACzC,EAAUG,GAAa,IAAA+J,EACuB/J,IAA5ChJ,MAAS3C,EADY0V,EACZ1V,OAAsBW,EADV+U,EACJhV,WAAcC,KACvC,OAAO6K,EAAS,CACdnL,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBoH,SAAQ,UAAAnH,OAAuB,SAAX5F,EAAoB,QAAU,IAA1C4F,OAA+CjF,QAMxD,SAASuN,EAAU1N,GACxB,MAAO,CACLH,KAAMC,IACNC,QAAS,CAAEC,UAIR,SAAS2N,EAAQ3N,GACtB,MAAO,CACLH,KAAMC,IACNC,QAAS,CAAEC,omCCrBTmV,cACJ,SAAAA,EAAAlgB,GAAqC,IAAA5C,EAAvBwb,EAAuB5Y,EAAvB4Y,WAAYxC,EAAWpW,EAAXoW,qGAAW/Y,CAAAC,KAAA4iB,GAAA,IAE3B7b,EAF2B+K,EACnChS,uEAAAM,CAAAJ,KAAAK,EAAAuiB,GAAAtiB,KAAAN,KAAM,CAAEsb,iBACAvU,SAF2B,OAGnCjH,EAAK8C,SAASoB,KAAK,IAAM,IAAM,MAC/BlE,EAAK+K,SAAS7G,IAAI,EAAa,GAAVuN,KAAK+Q,GAAoB,GAAV/Q,KAAK+Q,GAAU,OACnDxiB,EAAKoD,MAAMc,IAAI,GAAK,GAAK,GACzBlE,EAAK+iB,MAAQ,CACXnF,EAAoB,IAAjB3W,EAAS4B,MACZgV,EAAqB,IAAlB5W,EAAS6B,OACZD,MAAwB,IAAjB5B,EAAS4B,MAChBC,OAA0B,IAAlB7B,EAAS6B,QAEnB9I,EAAKgjB,MAAQ,CACXpF,EAAoB,IAAjB3W,EAAS4B,MACZgV,EAAqB,IAAlB5W,EAAS6B,OACZD,MAAwB,GAAjB5B,EAAS4B,MAChBC,OAA0B,IAAlB7B,EAAS6B,QAEnB9I,EAAKc,KAAO,CACV8c,EAAoB,IAAjB3W,EAAS4B,MACZgV,EAAqB,IAAlB5W,EAAS6B,OACZD,MAAwB,IAAjB5B,EAAS4B,MAChBC,OAA0B,GAAlB7B,EAAS6B,QAEnB9I,EAAKijB,WAAa,IAAIR,IACtBziB,EAAK0E,MAAQ,IAAI+d,IACjBziB,EAAKijB,WAAWC,OAAO,EAAG,EAAG,GAC7BljB,EAAK0E,MAAMge,KAAK1iB,EAAKijB,YACrBjjB,EAAKgZ,QAAUA,EACfmK,IACGC,gBAAgB,UAChBpZ,KAAK,kBACJhK,EAAKqjB,SAhC0BrjB,8OADlBsjB,uFAqCZ,IAEHP,EAOE7iB,KAPF6iB,MACAE,EAME/iB,KANF+iB,WACAve,EAKExE,KALFwE,MACS6e,EAIPrjB,KAJFsjB,QACA1iB,EAGEZ,KAHFY,KACAmG,EAEE/G,KAFF+G,SACA+b,EACE9iB,KADF8iB,MAGFS,EAAAljB,EAAAuiB,EAAAY,WAAA,OAAAxjB,MAAAM,KAAAN,MAEA,IAEI0d,EAIEmF,EAJFnF,EACAC,EAGEkF,EAHFlF,EACAhV,EAEEka,EAFFla,MACAC,EACEia,EADFja,OAEFya,EAAII,OACJJ,EAAIhf,UAAUqZ,EAAGC,GACjB0F,EAAIK,UAAJ,IAAA7Q,OAAoBkQ,EAAWY,gBAC/BN,EAAIO,SAAS,EAAG,EAAGjb,EAAOC,GAE1B,IAAMib,EAAWR,EAAIS,qBAAqB,EAAG,EAAGnb,EAAO,GACvDkb,EAASE,aAAa,EAAG,uBACzBF,EAASE,aAAa,EAAG,uBACzBV,EAAIK,UAAYG,EAChBR,EAAIO,SAAS,EAAG,EAAGjb,EAAOC,GAE1B,IAAMob,EAAWX,EAAIS,qBAAqB,EAAG,EAAG,EAAGlb,GACnDob,EAASD,aAAa,EAAG,iBACzBC,EAASD,aAAa,EAAG,iBACzBV,EAAIK,UAAYM,EAChBX,EAAIO,SAAS,EAAG,EAAGjb,EAAOC,GAC1Bya,EAAIY,UAGN,IAEIvG,EAIEoF,EAJFpF,EACAC,EAGEmF,EAHFnF,EACAhV,EAEEma,EAFFna,MACAC,EACEka,EADFla,OAEFya,EAAII,OACJJ,EAAIhf,UAAUqZ,EAAGC,GACjB,IAAMuG,EAAMb,EAAIS,qBAAqB,EAAG,EAAG,EAAGlb,GAC9Csb,EAAIH,aAAa,EAAG,sBACpBG,EAAIH,aAAa,IAAM,wBACvBG,EAAIH,aAAa,IAAM,sBACvBG,EAAIH,aAAa,IAAM,wBACvBG,EAAIH,aAAa,IAAM,sBACvBG,EAAIH,aAAa,IAAM,wBACvBG,EAAIH,aAAa,EAAG,sBACpBV,EAAIK,UAAYQ,EAChBb,EAAIO,SAAS,EAAG,EAAGjb,EAAOC,GAC1Bya,EAAIY,UAGNZ,EAAII,OACJJ,EAAIhf,UAAUzD,EAAK8c,EAAG9c,EAAK+c,GAC3B0F,EAAIK,UAAY,OAChBL,EAAIc,YAAc,OAClBd,EAAIe,YACJf,EAAIgB,KAAK,EAAG,EAAGzjB,EAAK+H,MAAO/H,EAAKgI,QAChCya,EAAI3S,OACJ2S,EAAIiB,SACJjB,EAAIK,UAAY,OAChBL,EAAIkB,KAAO,kBACXlB,EAAImB,UAAY,SAChBnB,EAAIoB,aAAe,SACnBpB,EAAIqB,SAAS,WAAyB,GAAb9jB,EAAK+H,MAA2B,GAAd/H,EAAKgI,QAChDya,EAAIY,UAGFZ,EAAII,OACJ,IAAM9a,EAAyB,IAAjB5B,EAAS4B,MACjBC,EAA0B,GAAjB7B,EAAS4B,MACxB0a,EAAIhf,UAA2B,KAAjB0C,EAAS4B,MAAiC,IAAlB5B,EAAS6B,QAC/Cya,EAAIK,UAAJ,IAAA7Q,OAAoBrO,EAAMmf,gBAC1BN,EAAIc,YAAc,OAClBd,EAAIe,YACJf,EAAIgB,KAAK,EAAG,EAAG1b,EAAOC,GACtBya,EAAI3S,OACJ2S,EAAIiB,SACJjB,EAAIY,4CAIE3G,GAAO,IAAAnL,EAAAnS,KAEb6iB,EAQE7iB,KARF6iB,MACAE,EAOE/iB,KAPF+iB,WACAve,EAMExE,KANFwE,MACS6e,EAKPrjB,KALFsjB,QACAxK,EAIE9Y,KAJF8Y,QACAlY,EAGEZ,KAHFY,KACAY,EAEExB,KAFFwB,QACAshB,EACE9iB,KADF8iB,MAEFS,EAAAljB,EAAAuiB,EAAAY,WAAA,YAAAxjB,MAAAM,KAAAN,KAAgBsd,GAChB,CAACuF,EAAOC,EAAOliB,GAAMuB,QAAQ,SAACkb,GAAW,IAErCK,EAIEL,EAJFK,EACAC,EAGEN,EAHFM,EACAhV,EAEE0U,EAFF1U,MACAC,EACEyU,EADFzU,OAEF,KACEpH,EAAQkc,EAAIA,GACTlc,EAAQkc,EAAIA,EAAI/U,GAChBnH,EAAQmc,EAAIA,GACZnc,EAAQmc,EAAIA,EAAI/U,GAIrB,GAAIyU,IAAWzc,EAAf,CAIA,IAAM+jB,EAAYtB,EAAIuB,aAAapjB,EAAQkc,EAAGlc,EAAQmc,EAAG,EAAG,GAAG3C,KAC3DqC,IAAWyF,GACbC,EAAWC,OACT2B,EAAU,GAAK,IACfA,EAAU,GAAK,IACfA,EAAU,GAAK,KAGnBngB,EAAMwe,OACJ2B,EAAU,GAAK,IACfA,EAAU,GAAK,IACfA,EAAU,GAAK,KAEjBxS,EAAKgR,YAhBHrK,EAAQ+L,oBAqBDjC,s+DCxKTkC,cACJ,SAAAA,IAAc,OAAA/kB,EAAAC,KAAA8kB,GACPA,EAAO3gB,UAAa2gB,EAAOlgB,UAC9BkgB,EAAO3kB,QAFGC,EAAAJ,KAAAK,EAAAykB,GAAAxkB,KAAAN,KAKV8kB,EAAO3gB,SACP2gB,EAAOlgB,sBAPQI,gDAYjB,IAAK8f,EAAO3gB,SAAU,CACpB,IAAMA,EAAW,IAAI4gB,IAAiB,KAAO,KAAO,EAAG,EAAG,IAC1D5gB,EAASE,UAAU,GAAI,KAAO,GAC9B,IAAMG,EAAQ,IAAI+d,IAClBpe,EAASG,MAAMnC,QAAQ,SAACoC,EAAM/D,GACxBA,EAAI,GAAM,EACZ+D,EAAKC,MAAMge,KAAKhe,IAEhBD,EAAKC,MAAM4E,OAAO,SAClB7E,EAAKC,MAAMC,UAAU,EAAG,GAAoB,GAAjB8M,KAAKD,UAChC9M,EAAMge,KAAKje,EAAKC,UAGpBsgB,EAAO3gB,UAAY,IAAIO,KAAkBC,aAAaR,GAEnD2gB,EAAOlgB,WACVkgB,EAAOlgB,SAAW,IAAIC,IAAkB,CACtCwa,aAAcC,gBAMhBpJ,cACJ,SAAAA,EAAAxT,GAMG,IAAA5C,EALDwb,EAKC5Y,EALD4Y,WACKhZ,EAIJI,EAJDuL,IACA/B,EAGCxJ,EAHDwJ,KACA8Y,EAECtiB,EAFDsiB,QACAxH,EACC9a,EADD8a,UACCzd,EAAAC,KAAAkW,IACDpW,EAAAM,EAAAJ,KAAAK,EAAA6V,GAAA5V,KAAAN,KAAM,CACJsb,iBAEGpP,KAAOA,EACZpM,EAAK0d,UAAYA,EACjB1d,EAAKoD,MAAMc,IAAI,GAAK,GAAK,GACzB,IAAA+Y,EAC4Bjd,EAAKiH,SAAvB4B,EADVoU,EACUpU,MAAOC,EADjBmU,EACiBnU,OACTqc,EAAWnlB,EAAKwjB,QAAQ4B,qBACpB,GAARvc,EAAsB,GAATC,EAAsB,GAARD,EACnB,GAARA,EAAsB,GAATC,EAAsB,GAARD,GAE7Bsc,EAASlB,aAAa,EAAG,oBACzBkB,EAASlB,aAAa,EAAG,qBACzBjkB,EAAKmlB,SAAWA,EAElB,IAAIE,GAAgB,EAOpB,GANAlC,IACGC,gBAAgB,UAChBpZ,KAAK,WACJqb,GAAgB,EAChBrlB,EAAKqjB,SAEL6B,EAAS,CACX,IAAMI,EAAQ,IAAIC,MAClBD,EAAME,YAAc,YACpBF,EAAM3S,IAAN,GAAAI,OAAejE,IAAI6L,QAAnB,SAAA5H,OAAkCmS,EAAQ/W,IAA1C,UACAmX,EAAMG,OAAS,WACbzlB,EAAKklB,QAAUI,EACXD,GACFrlB,EAAKqjB,QAKT,IAAMiC,EAAQ,IAAIC,MApCnB,OAqCCD,EAAME,YAAc,YACpBF,EAAM3S,IAAN,GAAAI,OAAejE,IAAI6L,QAAnB,UAAA5H,OAAmCvQ,EAAnC,eACA8iB,EAAMG,OAAS,WACbzlB,EAAK0lB,WAAaJ,EACdD,GACFrlB,EAAKqjB,QA1CVrjB,aAPesjB,0CAuDX,IAEMC,EAOPrjB,KAPFsjB,QACA0B,EAMEhlB,KANFglB,QACAS,EAKEzlB,KALFylB,QACAvZ,EAIElM,KAJFkM,KACAnF,EAGE/G,KAHF+G,SACAye,EAEExlB,KAFFwlB,WACAP,EACEjlB,KADFilB,SAEF1B,EAAAljB,EAAA6V,EAAAsN,WAAA,OAAAxjB,MAAAM,KAAAN,MACIwlB,GACFnC,EAAIqC,UAAUF,EAAY,EAAG,GAE/BnC,EAAIK,UAAYuB,EAChB5B,EAAIO,SAAS,EAAG,EAAG7c,EAAS4B,MAAO5B,EAAS6B,QAC5Cya,EAAIK,UAAJ,QAAA7Q,OAAwB4S,EAAU,gBAAkB,UAApD,SACApC,EAAIO,SAAS,EAAqB,IAAlB7c,EAAS6B,OAAe7B,EAAS4B,MAAyB,IAAlB5B,EAAS6B,QACjEya,EAAIkB,KAAO,cACXlB,EAAImB,UAAY,OAChBnB,EAAIoB,aAAe,SACnBpB,EAAIK,UAAY+B,EAAU,OAAS,OAC/BT,GACF3B,EAAIqC,UACFV,EACA,EAAqB,IAAlBje,EAAS6B,OACK,IAAjB7B,EAAS4B,MAAgC,IAAlB5B,EAAS6B,QAGpCya,EAAIqB,SACFxY,EACiB,IAAjBnF,EAAS4B,MAAgB5B,EAAS4B,OAASqc,EAAU,IAAO,KAC1C,KAAlBje,EAAS6B,iBAKT+c,cACJ,SAAAA,EAAAriB,GAEG,IAAA6O,EADDmJ,EACChY,EADDgY,WACC,OAAAvb,EAAAC,KAAA2lB,IACDxT,EAAA/R,EAAAJ,KAAAK,EAAAslB,GAAArlB,KAAAN,KAAM,CACJsb,aACA3S,MAAO,IACPC,OAAQ,QAEL1F,MAAMc,IAAI,IAAM,IAAM,GAC3BmO,EAAKgT,eAAgB,EACrBlC,IACGC,gBAAgB,UAChBpZ,KAAK,WACJqI,EAAKgT,eAAgB,EACrBhT,EAAKgR,SAZRhR,aAHsBiR,0CAmBlB,IAEHziB,EAEEX,KAFFW,QACS0iB,EACPrjB,KADFsjB,QAEFC,EAAAljB,EAAAslB,EAAAnC,WAAA,OAAAxjB,MAAAM,KAAAN,MACAqjB,EAAIkB,KAAO,kBACXlB,EAAImB,UAAY,SAChBnB,EAAIoB,aAAe,SACnB9jB,EAAQwB,QAAQ,SAAA4Y,GAQV,IAPJ6K,EAOI7K,EAPJ6K,MACAlI,EAMI3C,EANJ2C,EACAC,EAKI5C,EALJ4C,EACAhV,EAIIoS,EAJJpS,MACAC,EAGImS,EAHJnS,OACAid,EAEI9K,EAFJ8K,SACAC,EACI/K,EADJ+K,WAEAzC,EAAII,OACJJ,EAAIhf,UAAUqZ,EAAGC,GACjB0F,EAAIe,YACJf,EAAIgB,KAAK,EAAG,EAAG1b,EAAOC,GAEpBya,EAAIK,UADFoC,EACc,OACPD,EACO,OAEA,OAElBxC,EAAIc,YAAc,OAClBd,EAAI3S,OACJ2S,EAAIiB,SAEFjB,EAAIK,UADFoC,EACc,OACPD,EACO,OAEA,OAElBxC,EAAIqB,SACFkB,EACQ,GAARjd,EACS,GAATC,GAEFya,EAAIY,iDAIqB,IAAjBxG,EAAiBY,EAAjBZ,OAAQH,EAASe,EAATf,MACV3c,EAAqBX,KAArBW,QAASa,EAAYxB,KAAZwB,QACZic,IACL8F,EAAAljB,EAAAslB,EAAAnC,WAAA,YAAAxjB,MAAAM,KAAAN,KAAgBsd,GAChB3c,EACGsM,OAAO,SAAAsU,GAAA,OAAAA,EAAGuE,aACV3jB,QAAQ,SAAAuf,GAMH,IALJhE,EAKIgE,EALJhE,EACAC,EAII+D,EAJJ/D,EACAhV,EAGI+Y,EAHJ/Y,MACAC,EAEI8Y,EAFJ9Y,OACA4U,EACIkE,EADJlE,UAGEhc,EAAQkc,EAAIA,GACTlc,EAAQkc,EAAIA,EAAI/U,GAChBnH,EAAQmc,EAAIA,GACZnc,EAAQmc,EAAIA,EAAI/U,GAIrB4U,gBAKFuI,cACJ,SAAAA,EAAAC,GAIG,IAAAtT,EAHD4I,EAGC0K,EAHD1K,WACAxC,EAECkN,EAFDlN,QACAmC,EACC+K,EADD/K,YACClb,EAAAC,KAAA+lB,IACDrT,EAAAtS,EAAAJ,KAAAK,EAAA0lB,GAAAzlB,KAAAN,KAAM,CAAEsb,iBACHpY,MAAMc,IAAI,GAAK,GAAK,GAFxB,IAAAiiB,EAGyBvT,EAAK3L,SAAvB4B,EAHPsd,EAGOtd,MAAOC,EAHdqd,EAGcrd,OAHd,OAID8J,EAAK/R,QAAU,CACb,CACEilB,MAAO,eACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAW,kBACTvC,IACGnR,KAAK,SAAAoc,GAAA,IAAU9H,EAAV8H,EAAGzY,MAAH,OAAqBqL,EAAQoH,KAAR,IAAArN,OAAiBuL,SAbnD1L,aALqBiT,QAyBpBQ,cACJ,SAAAA,EAAAC,GAKG,IAAAC,EAJD/K,EAIC8K,EAJD9K,WACA1N,EAGCwY,EAHDxY,KACAC,EAECuY,EAFDvY,MACAxF,EACC+d,EADD/d,OACCtI,EAAAC,KAAAmmB,GAAA,IAAAG,GACDD,EAAAjmB,EAAAJ,KAAAK,EAAA8lB,GAAA7lB,KAAAN,KAAM,CAAEsb,iBACuBvU,SAAvB4B,EAFP2d,EAEO3d,MAAOC,EAFd0d,EAEc1d,OAFd,OAGDyd,EAAK1lB,QAAU,CACb,CACEilB,MAAO,IACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAW,WACO,EAAZ6I,EAAKzY,MAAUvF,EAAOge,EAAKzY,KAAO,KAG1C,CACEgY,MAAO,IACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAW,WACL6I,EAAKzY,KAAOyY,EAAKxY,MAAQ,GAAGxF,EAAOge,EAAKzY,KAAO,MAIzDyY,EAAKzY,KAAOA,EACZyY,EAAKxY,MAAQA,EA1BZwY,aANoBV,qCAmChB,IAEMtC,EAIPrjB,KAJFsjB,QACA1V,EAGE5N,KAHF4N,KACAC,EAEE7N,KAFF6N,MACA9G,EACE/G,KADF+G,SAEFwc,EAAAljB,EAAA8lB,EAAA3C,WAAA,OAAAxjB,MAAAM,KAAAN,MACAqjB,EAAIK,UAAY,OAChBL,EAAIqB,SAAJ,GAAA7R,OACKjF,EAAO,EADZ,OAAAiF,OACmBhF,GACA,GAAjB9G,EAAS4B,MACS,IAAlB5B,EAAS6B,iBAKTwL,cACJ,SAAAA,EAAAmS,GAMG,IAAAC,EALDlL,EAKCiL,EALDjL,WACArM,EAICsX,EAJDtX,YACAa,EAGCyW,EAHDzW,KACAuL,EAECkL,EAFDlL,OACAzB,EACC2M,EADD3M,QACC,OAAA7Z,EAAAC,KAAAoU,IACDoS,EAAApmB,EAAAJ,KAAAK,EAAA+T,GAAA9T,KAAAN,KAAM,CAAEsb,iBACHD,OAASA,EACdmL,EAAK5M,QAAUA,EACf4M,EAAK/J,cAAc,CACjBxN,cACAa,SAND0W,aAPiBb,+CAiBiB,IAAAc,EAAAzmB,KAArBiP,EAAqByX,EAArBzX,YAAaa,EAAQ4W,EAAR5W,KACnB/I,EAA8B/G,KAA9B+G,SAAUsU,EAAoBrb,KAApBqb,OAAQzB,EAAY5Z,KAAZ4Z,QAClBjR,EAAkB5B,EAAlB4B,MAAOC,EAAW7B,EAAX6B,OAyBf,GAvBE5I,KAAKW,QADHsO,EACa,GACLa,EAUK,CAAC,CACd8V,MAAO,WACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAW5D,IAfE,CAAC,CACdgM,MAAO,UACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAWnC,IAYfrb,KAAKiP,YAAcA,EACnBjP,KAAK8P,KAAOA,SACL9P,KAAK2mB,UACR7W,EAAM,CACR,IAAMsV,EAAQ,IAAIC,MAClBD,EAAME,YAAc,YACpBF,EAAM3S,IAAN,GAAAI,OAAejE,IAAI6L,QAAnB,SAAA5H,OAAkC/C,EAAK7B,IAAvC,UACAmX,EAAMG,OAAS,WACbkB,EAAKE,UAAYvB,EACbqB,EAAKtB,eACPsB,EAAKtD,wCAMN,IAEME,EAKPrjB,KALFsjB,QACArU,EAIEjP,KAJFiP,YACAlI,EAGE/G,KAHF+G,SACA+I,EAEE9P,KAFF8P,KACA6W,EACE3mB,KADF2mB,UAEFpD,EAAAljB,EAAA+T,EAAAoP,WAAA,OAAAxjB,MAAAM,KAAAN,MACAqjB,EAAIK,UAAY,OACZzU,GACFoU,EAAIqB,SACF,cACiB,GAAjB3d,EAAS4B,MACS,IAAlB5B,EAAS6B,QAEXya,EAAIqB,SACF,UACiB,GAAjB3d,EAAS4B,MACS,GAAlB5B,EAAS6B,QAEXya,EAAIqB,SACF,cACiB,GAAjB3d,EAAS4B,MACS,GAAlB5B,EAAS6B,QAEXya,EAAIqB,SACF,kBACiB,GAAjB3d,EAAS4B,MACS,IAAlB5B,EAAS6B,SAGXya,EAAIqB,SACF5U,EAAOA,EAAKV,UAAY,QACP,GAAjBrI,EAAS4B,MACS,GAAlB5B,EAAS6B,QAGTkH,GAAQ6W,GACVtD,EAAIqC,UACFiB,EACiB,GAAjB5f,EAAS4B,MAAc,GAAsB,GAAlB5B,EAAS6B,OAAe,GACnD,GAAI,aAMNge,cACJ,SAAAA,EAAAC,GAKG,IAAAC,EAJDxL,EAICuL,EAJDvL,WACAtM,EAGC6X,EAHD7X,OACA/B,EAEC4Z,EAFD5Z,OACA5E,EACCwe,EADDxe,OACCtI,EAAAC,KAAA4mB,GAAA,IAAAG,GACDD,EAAA1mB,EAAAJ,KAAAK,EAAAumB,GAAAtmB,KAAAN,KAAM,CAAEsb,iBACuBvU,SAAvB4B,EAFPoe,EAEOpe,MAAOC,EAFdme,EAEcne,OAFd,OAGDke,EAAKnmB,QAAU,CACb,CACE2B,GAAI,MACJsjB,MAAO,aACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACR4U,UAAW,kBAAMnV,EAAO,SAE1B,CACE/F,GAAI,OACJsjB,MAAO,cACPlI,EAAW,GAAR/U,EACHgV,EAAY,GAAT/U,EACHD,MAAe,GAARA,EACPC,OAAiB,GAATA,EACRkd,YAAa9W,EACbwO,UAAW,kBAAMnV,EAAO,WAG5Bye,EAAK7Z,OAASA,EACd6Z,EAAKze,OAASA,EAzBbye,aANgBnB,+CAkCO,IAAV3W,EAAUgY,EAAVhY,OACdhP,KAAKW,QAAQ,GAAGmlB,YAAc9W,iCAGzB,IACGrO,EAAoBX,KAApBW,QAASsM,EAAWjN,KAAXiN,OACjBtM,EAAQwB,QAAQ,SAAC8kB,GACfA,EAAOpB,SAAWoB,EAAO3kB,KAAO2K,IAElCsW,EAAAljB,EAAAumB,EAAApD,WAAA,OAAAxjB,MAAAM,KAAAN,eAIE0b,cACJ,SAAAA,EAAAwL,GAaG,IAAAC,EAZD7L,EAYC4L,EAZD5L,WACArO,EAWCia,EAXDja,OACA6L,EAUCoO,EAVDpO,QACA7J,EASCiY,EATDjY,YACAtB,EAQCuZ,EARDvZ,WACAI,EAOCmZ,EAPDnZ,OACA+B,EAMCoX,EANDpX,KACAmL,EAKCiM,EALDjM,YACAE,EAIC+L,EAJD/L,UACAC,EAGC8L,EAHD9L,QACAC,EAEC6L,EAFD7L,OACAzB,EACCsN,EADDtN,QACC,OAAA7Z,EAAAC,KAAA0b,IACDyL,EAAA/mB,EAAAJ,KAAAK,EAAAqb,GAAApb,KAAAN,QACKsb,WAAaA,EAClB6L,EAAKrO,QAAUA,EACfqO,EAAKC,MAAQ,GACbD,EAAKjK,WAAa,GAClBiK,EAAKvkB,SAASoB,IAAI,EAAG,GAAI,GACzBmjB,EAAKxZ,WAAawZ,EAAKE,SACrBlB,EADgBrY,EAAA,GAGXH,EAHW,CAIdtF,OAAQ+S,IAEV,GAAI,GAAK,KAEX+L,EAAKpd,QAAUod,EAAKE,SAClBjT,EACA,CACEnF,cACAa,OACAuL,SACAzB,YAED,IAAM,GAAK,KAEduN,EAAKla,OAASka,EAAKE,SACjBT,EACA,CACE3Z,SACA+B,SAAUc,EACVzH,OAAQ8S,GAEV,IAAM,GAAK,KAEbgM,EAAKlM,YAAcA,EACnBkM,EAAKxK,aAAa5O,GAnCjBoZ,aAdcrlB,4CAoDRshB,EAAO5d,EAAOkY,EAAGC,EAAGJ,GAAG,IACtBjC,EAA2Btb,KAA3Bsb,WAAY4B,EAAeld,KAAfkd,WACdoK,EAAQ,IAAIlE,EAAJtV,EAAA,GAAetI,EAAf,CAAsB8V,gBACpCgM,EAAM1kB,SAASoB,IAAI0Z,EAAGC,EAAGJ,GACzB+J,EAAMC,OAAO,EAAG,GAAK,GACrBvnB,KAAK0B,IAAI4lB,GACT,IAAME,EAAS,IAAI1C,EAInB,OAHA0C,EAAO5kB,SAAS4f,KAAK8E,EAAM1kB,UAC3B5C,KAAK0B,IAAI8lB,GACTtK,EAAWgD,KAAKoH,GACTA,oCAIctnB,KAAb+B,SACCI,QAAQ,SAAA2I,GAAK,OAAIA,EAAMC,SAAWD,EAAMC,gDAGzB,IAAftK,EAAegnB,EAAfhnB,KAAMoP,EAAS4X,EAAT5X,MACPuX,EAAUpnB,KAAVonB,MACJA,EAAM3mB,KAAUoP,IAGhBuX,EAAM3mB,KACR2mB,EAAM3mB,GAAMglB,SAAU,EACtB2B,EAAM3mB,GAAM0iB,QAEVtT,IACFA,EAAM4V,SAAU,EAChB5V,EAAMsT,QAERnjB,KAAKonB,MAAM3mB,GAAQoP,wCAGRpC,GAAO,IACVR,EAAWjN,KAAXiN,OACRA,EAAOA,OAASQ,EAChBR,EAAOkW,mDAGyB,IAAfvV,EAAe8Z,EAAf9Z,KAAMC,EAAS6Z,EAAT7Z,MACfF,EAAe3N,KAAf2N,WACRA,EAAWC,KAAOA,EAClBD,EAAWE,MAAQA,EACnBF,EAAWwV,4CAGApV,GASX,IATmB,IAAA4Z,EAAA3nB,KAEjBsb,EAMEtb,KANFsb,WACAvZ,EAKE/B,KALF+B,SACAkZ,EAIEjb,KAJFib,YACUhO,EAGRjN,KAHFiN,OAAUA,OACV6L,EAEE9Y,KAFF8Y,QACAnL,EACE3N,KADF2N,WAEuB,EAAlB5L,EAASK,QACdpC,KAAK0f,OAAO3d,EAASA,EAASK,OAAS,IAEzCpC,KAAKkd,WAAW9a,OAAS,EACzB,IAAMwlB,EAA6B,SAAX3a,GAAyC,IAApBU,EAAWC,KAEpD0S,EAAS,KAAgB,KADfvS,EAAO3L,QAAUwlB,EAAkB,EAAI,IAEjDA,IACF5nB,KAAKqnB,SACHtB,EACA,CACEjN,UACAmC,eAEFqF,EAAQ,EAAG,GAEbA,GAAU,IAEZvS,EAAO5L,QAAQ,SAAC0N,EAAOrP,GACrB,IAAM8mB,EAAQK,EAAKN,SACjBnR,EADYpI,EAAA,GAGP+B,EAHO,CAIVyL,aACAkC,UAAW,SAAAqK,GAAsB,IAAnBpnB,EAAmBonB,EAAnBpnB,KAAMgd,EAAaoK,EAAbpK,OAClBkK,EAAKxK,SAAS,CAAE1c,OAAMoP,MAAOyX,IACzB7J,GACF3E,EAAQoH,KAAR,IAAArN,OAAiBhD,EAAMuO,UAI7BkC,EAAc,GAAJ9f,EAAU,EAAG,8CAKQ,IAArByO,EAAqB6Y,EAArB7Y,YAAaa,EAAQgY,EAARhY,KACnB7C,EAAoBjN,KAApBiN,OAAQlD,EAAY/J,KAAZ+J,QAChBkD,EAAOwP,cAAc,CAAEzN,SAAUc,IACjC7C,EAAOkW,OACPpZ,EAAQ0S,cAAc,CAAExN,cAAaa,SACrC/F,EAAQoZ,gBAIGzH,o2BC9lBTF,cACJ,SAAAA,IAAc,mGAAAzb,CAAAC,KAAAwb,GAETA,EAAUrX,UACPqX,EAAU5W,UAEd4W,EAAUrb,QALAC,EAAAJ,KAAAK,EAAAmb,GAAAlb,KAAAN,KAQVwb,EAAUrX,SACVqX,EAAU5W,uPAVQmjB,6FAepB,IAAKvM,EAAUrX,SAAU,CAMvB,IALA,IAEMvB,EAAW,IAAI2d,aAAayH,MAC5BxjB,EAAQ,IAAI+b,aAAayH,MACzBzI,EAAM,IAAIpa,IACP3E,EAAI,EAAGA,EAAIwnB,KAAWxnB,GAAK,EAAG,CACrC+e,EACGvb,IACiB,EAAhBuN,KAAKD,SAAe,EACpBC,KAAKD,SACW,EAAhBC,KAAKD,SAAe,GAErB2W,YACAC,eAZU,KAabtlB,EAASpC,GAAK+e,EAAI7B,EAClB9a,EAASpC,EAAI,GAAK+e,EAAI5B,EACtB/a,EAASpC,EAAI,GAAK+e,EAAIhC,EACtB,IAAM4K,EAAI,GAAsB,GAAhB5W,KAAKD,SACrB9M,EAAMhE,GAAK2nB,EAAoB,GAAhB5W,KAAKD,SACpB9M,EAAMhE,EAAI,GAAK2nB,EAAoB,GAAhB5W,KAAKD,SACxB9M,EAAMhE,EAAI,GAAK2nB,EAAoB,GAAhB5W,KAAKD,UAE1BkK,EAAUrX,SAAW,IAAIO,KACNgc,aAAa,WAAY,IAAImB,IAAgBjf,EAAU,IAC1E4Y,EAAUrX,SAASuc,aAAa,QAAS,IAAImB,IAAgBrd,EAAO,IAEjEgX,EAAU5W,WACb4W,EAAU5W,SAAW,IAAIwjB,IAAe,CACtCxhB,KAAK,EACLyY,aAAcC,gBAMP9D,qrDCnDTtF,sZAAcjE,gHACE,IAAA8C,EAMd/U,KAAKwF,MAJY4Y,EAFHrJ,EAEhBsT,MAASC,OAAUlK,KACnBtF,EAHgB/D,EAGhB+D,QACqB/R,EAJLgO,EAIhBhO,SAAYX,QACZwM,EALgBmC,EAKhBnC,MAGI/K,EAAQd,EAASY,aACvB3H,KAAKuoB,OAAS,IAAI3F,IAAO,CACvBtH,WAAYvU,EAASoC,mBACrB2P,YAEF/R,EAASU,MAAM1F,SAAS,GAAGL,IAAI1B,KAAKuoB,QACpCvoB,KAAKoO,OAAS,IAAIoQ,IAAO,CACvBE,YAAa3X,EAASA,SAASyhB,WAAWC,IAAI,4BAEhD5gB,EAAMnG,IAAI1B,KAAKoO,QACfpO,KAAK0oB,KAAO,IAAIvjB,IAChBnF,KAAKkd,WAAa,CAACld,KAAKuoB,QACxBvoB,KAAK+G,SAAWA,GAChB/G,KAAK6H,MAAQA,GACP8T,eAAiB3b,KAAK2b,eAAe3V,KAAKhG,MAEhD4S,EAAMwL,iDAG+D,IAAxCuK,EAAwCjmB,EAAlDyB,SAAkCykB,EAAgBlmB,EAAtByL,KAAsBmO,EAC1Ctc,KAAKwF,MAAxBrB,EAD6DmY,EAC7DnY,SAAUgK,EADmDmO,EACnDnO,KADmD4O,EAWjE/c,KARF+G,SACEV,EAJiE0W,EAIjE1W,aACAxE,EALiEkb,EAKjElb,UACA2F,EANiEuV,EAMjEvV,KACYqB,EAPqDkU,EAOjEhW,SAAY8B,GAEd0f,EAEEvoB,KAFFuoB,OACAna,EACEpO,KADFoO,OAeF,GAbID,IAASya,IAEXphB,EAAK5E,SAASoB,IACL,GAAPmK,EAAa,GACN,GAAPA,EACO,GAAPA,EAAa,IAEfC,EAAOya,OAAO1a,GACdnO,KAAKkd,WAAL,CACEqL,GADF1V,OAAAiW,EAEK1a,EAAO8O,cAGV/Y,IAAawkB,EAAkB,CAGjC,GADAva,EAAO/F,OAAOlE,IACTwkB,EAAiBtX,OAASxI,EAAGuB,QAAS,CAEzCvI,EAAU+B,IAAIC,OAAO2e,KAAKhb,EAAK5E,UAC/Bf,EAAU+B,IAAIG,UAAUC,IAAI,GAAI,EAAG,GACnC,IAAMgZ,EAAMnb,EAAUob,iBAAiB7O,EAAO8O,YAAY,GACtDF,IACFxV,EAAK5E,SAAS+a,EAAIX,EAAIM,MAAMK,GAG5BtX,GACFuW,EAAa,WACXtW,OAAOuW,sBAAuB,oDAMf,IACb0L,EAA4BvoB,KAA5BuoB,OAAQxhB,EAAoB/G,KAApB+G,SAAUc,EAAU7H,KAAV6H,MAClBkhB,EAAU/oB,KAAKwF,MAAfujB,MACRhiB,EAASU,MAAM1F,SAAS,GAAG2d,OAAO6I,GAClCA,EAAOxd,iBACAlD,EAAM8T,eACboN,IACKhiB,EAASA,SAAS8B,GAAGuB,SACxBrD,EAASW,qDAIEX,EAAUc,EAAOrB,GAAQ,IAEpCkiB,EAcE1oB,KAdF0oB,KACAxL,EAaEld,KAbFkd,WACAqL,EAYEvoB,KAZFuoB,OAJoCS,EAgBlChpB,KAXFwF,MACE2I,EANkC6a,EAMlC7a,KACA8a,EAPkCD,EAOlCC,aAPkCrL,EAgBlC5d,KAPF+G,SACEU,EAVkCmW,EAUlCnW,MACApB,EAXkCuX,EAWlCvX,aACAxE,EAZkC+b,EAYlC/b,UACA2F,EAbkCoW,EAalCpW,KAGAxH,KADFoO,OAGK8a,cAAc1iB,GAGrBiB,EAAM1F,SAASI,QAAQ,SAAC1B,GAAS,IACvBE,EAAqBF,EAArBE,QAASa,EAAYf,EAAZe,QACjBf,EAAKmB,eAAeC,GACpB,IAAMmb,EAAMnb,EAAUob,iBAAiBC,GAAY,KAAM,EACzD,GAAKF,EAAL,CAJ+B,IAS7BI,EAIEJ,EAJFI,SACQuE,EAGN3E,EAHFzY,KAAQod,OACRtE,EAEEL,EAFFK,OACAC,EACEN,EADFM,MAMF,GAHA9b,EAAQ0B,MAAMqa,EAAIH,EAAW,KAC7B5b,EAAQC,SAAU,EAEd4b,IAAWkL,EAAf,CAOA,GACE5nB,EAAQQ,SACQ,IAAbwgB,EAAOjE,GACM,IAAbiE,EAAOhE,GACM,IAAbgE,EAAOpE,EACV,CACAmL,EAAK5kB,sBAAsB0C,EAAO/C,aAClC,IAAM6c,EAAS,CACb5C,EAAGgL,EAAKhL,EAAIlW,EAAK5E,SAAS8a,EAC1BC,EAAG,EACHJ,EAAGmL,EAAKnL,EAAI/V,EAAK5E,SAAS2a,GAL5B4L,EAAAxe,EAOkB,CAAC,IAAK,IAAK,KAAK7F,IAAI,SAACskB,GAErC,IADA,IAAIxmB,EAAW0a,EAAM8L,GAAQ9I,EAAO8I,GAC7BxmB,EAAW,GAAGA,GAAYuL,EACjC,KAAmBA,GAAZvL,GAAkBA,GAAYuL,EACrC,OAAOvL,IAXT,GAOO8a,EAPPyL,EAAA,GAOUxL,EAPVwL,EAAA,GAOa5L,EAPb4L,EAAA,GAaA3hB,EAAK5E,SAASoB,IAAI0Z,EAAGC,EAAGJ,IAIxB5c,EAAQW,aACLX,EAAQK,WAEXioB,EAAa,CACXzkB,MAAO+jB,EAAO/jB,MACd8Y,QACAqE,SACAjC,OAAQ/e,EAAQK,gBAnCdL,EAAQW,aACVinB,EAAO/K,UAAUF,QAfnB9b,EAAQC,SAAU,IA1BgB,IAiF9BuG,EAAkBjB,EAAlBiB,UAAWa,EAAO9B,EAAP8B,GACnB,IAAKxC,IAAiBwC,EAAGuB,SAAW+D,EAAM,KAChClG,EAAgBD,EAAhBC,MAAOE,EAASH,EAATG,KACT0C,EAAkC,KAAvB0G,KAAK8X,IAAW,GAAPlhB,GAC1B3B,EAAO8iB,QAAQze,GACfrE,EAAO6b,QAAQxX,GACfrE,EAAO+iB,WAAmB,GAARthB,GAClBzB,EAAOyZ,oBACP,CAAC,IAAK,IAAK,KAAK9d,QAAQ,SAACinB,GACnB5iB,EAAO5D,SAASwmB,GAAQ,IAC1B5iB,EAAO5D,SAASwmB,IAASjb,GAEvB3H,EAAO5D,SAASwmB,IAASjb,IAC3B3H,EAAO5D,SAASwmB,IAASjb,uCAO/B,OAAO,cAIX+H,EAAMV,UAAY,CAChB6S,MAAO5S,IAAUc,MAAM,CACrB+R,OAAQ7S,IAAUc,MAAM,CACtB6H,KAAM3I,IAAUwI,OAAOtI,aACtBA,aACFA,WACHxR,SAAUsR,IAAUc,MAAM,CACxBlF,MAAOoE,IAAUe,WAAWnI,aAC5BzL,SAAU6S,IAAUe,WAAW+J,cAC/B/b,MAAOiR,IAAUe,WAAW+J,cAC5BoB,OAAQlM,IAAUe,WAAW+J,cAC7BqB,GAAInM,IAAUe,WAAW+J,gBACxB5K,WAEHmD,QAASrD,IAAU4H,OAAO1H,WAC1BxH,KAAMsH,IAAUyI,OAAOvI,WACvB5O,SAAU0O,IAAUc,MAAM,CACxBnQ,QAASqP,IAAUe,WAAWjR,OAC7BoQ,WACH/C,MAAO6C,IAAUG,KAAKD,WACtBoT,MAAOtT,IAAUG,KAAKD,WACtBsT,aAAcxT,IAAUG,KAAKD,YAGhBE,sBACb,SAAAvS,GAAA,IAAAkmB,EAAAlmB,EACEuM,MADF,MAKO,CACL1L,SANFqlB,EAEIrlB,SAKFgK,KAPFqb,EAGIrb,OAMJ,CACEyE,UACAmW,UACAE,kBAbWpT,CAebK,oPC9OItH,aACJ,SAAAA,iGAAc7O,CAAAC,KAAA4O,GACZ5O,KAAKya,QAAUgP,+OAQd,IAJD1P,EAICrX,EAJDqX,KACAC,EAGCtX,EAHDsX,SAGC0P,EAAAhnB,EAFDinB,eAEC,IAAAD,EAFS,GAETA,EAAAE,EAAAlnB,EADDuX,cACC,IAAA2P,EADQ,MACRA,EAECC,EAEE7pB,KAFF6pB,cACApP,EACEza,KADFya,QASF,OAPIoP,IACFF,EAAQG,cAAgBD,IAEtB9P,GAAUA,aAAgBgQ,WAC5BhQ,EAAOvL,KAAKe,UAAUwK,GACtB4P,EAAQ,gBAAkB,oBAErB/W,MAAK,GAAAC,OACP4H,GADO5H,OACGmH,GACb,CACED,OACA4P,UACA1P,WAGDnQ,KAAK,SAACgJ,GAAQ,IACL6W,EAAoB7W,EAApB6W,QAASK,EAAWlX,EAAXkX,OACjB,GAAIA,EAAS,KAAiB,KAAVA,EAClB,MAAM,IAAIhX,MAAMgX,GAGlB,QADcL,EAAQlB,IAAI,iBAAmB,IAAIpZ,MAAM,KAAK,IAE1D,IAAK,aACH,OAAOyD,EAAImX,cACb,IAAK,mBACH,OAAOnX,EAAIC,OACb,QACE,OAAOD,+CAKAhE,GACXA,EACF9O,KAAK6pB,cAAL,UAAAhX,OAA+B/D,UAExB9O,KAAK6pB,cAEd7pB,KAAK8O,MAAQA,WAIF2K,EAAA,MAAI7K,wBCzDnBsb,EAAAC,QAAA,WACA,WAAAC,OAAoB5Q,EAAA6Q,EAAuB,64BCWrCjH,cACJ,SAAAA,EAAA1gB,GAIG,IAAA5C,EAHDwb,EAGC5Y,EAHD4Y,WAGCgP,EAAA5nB,EAFDiG,aAEC,IAAA2hB,EAFO,IAEPA,EAAAC,EAAA7nB,EADDkG,cACC,IAAA2hB,EADQ,IACRA,+FAAAxqB,CAAAC,KAAAojB,GAEEA,EAAMoH,WACHpH,EAAMjf,UAEVif,EAAMjjB,QAER,IAAM4G,EAAW4K,SAASvG,cAAc,UACxCrE,EAAS4B,MAAQA,EACjB5B,EAAS6B,OAASA,EAClB,IAAM6hB,EAAU,IAAIC,IAAc3jB,GAVjC,OAWD0jB,EAAQnP,WAAaA,GACrBxb,EAAAM,EAAAJ,KAAAK,EAAA+iB,GAAA9iB,KAAAN,KACEojB,EAAMjf,SACN,IAAIU,IAAkB,CACpBC,IAAK2lB,OAGJ/oB,IAAI0hB,EAAMoH,UAAU9pB,SACzBZ,EAAKwjB,QAAUvc,EAAS4jB,WAAW,MACnC7qB,EAAK0B,QAAU,IAAI2D,IACnBrF,EAAKiH,SAAWA,EAChBjH,EAAK2qB,QAAUA,EAtBd3qB,8OALekF,0FA8BR,IACAJ,EAAsB5E,KAAtB4E,SAAU6lB,EAAYzqB,KAAZyqB,QAClB7lB,EAASmG,UACT0f,EAAQ1f,yCAGH,IAEMsY,EAGPrjB,KAHFsjB,QACAvc,EAEE/G,KAFF+G,SACA0jB,EACEzqB,KADFyqB,QAEFpH,EAAIK,UAAY,OAChBL,EAAIO,SAAS,EAAG,EAAG7c,EAAS4B,MAAO5B,EAAS6B,QAC5C6hB,EAAQhJ,aAAc,oCAGdnE,GAAO,IACP9b,EAAsBxB,KAAtBwB,QAASuF,EAAa/G,KAAb+G,SACjB/G,KAAK4qB,aAAappB,EAAQghB,KAAKlF,IAC/B9b,EAAQwC,KACLxC,EAAQkc,EAAI,IAAO3W,EAAS4B,OAC5B,GAAKnH,EAAQmc,EAAI,KAAQ5W,EAAS6B,OACnC,qCAKF,IAAKwa,EAAMoH,UAAW,CACpB,IAAMrmB,EAAW,IAAIC,IAAY,EAAG,EAAG,KACvCD,EAASG,MAAMumB,OAAO,EAAG,GACzB1mB,EAASG,MAAMnC,QAAQ,SAACoC,EAAM/D,GAAP,OACrB+D,EAAKC,MAAM4E,OACa,IAAtBmI,KAAKC,MAAMhR,EAAI,GAAW,QAAW,WAGzC2D,EAASE,UAAU,EAAG,GAAI,KAC1B,IAAMmmB,EAAY,IAAIxlB,KACnB,IAAIN,KAAkBC,aAAaR,GACpC,IAAIU,IAAkB,CACpBimB,KAAMC,IACN1L,aAAcC,OAGlB8D,EAAMoH,UAAYA,EAGfpH,EAAMjf,WACTif,EAAMjf,SAAW,IAAI6mB,IAAoB,EAAG,aAKnC5H,8rBCzFTre,cACJ,SAAAA,IAAc,IAAAjF,+FAAAC,CAAAC,KAAA+E,GACZ,IAAMgC,EAAW4K,SAASvG,cAAc,UAClCiY,EAAMtc,EAAS4jB,WAAW,MAChC5jB,EAAS4B,MAAQ,GACjB5B,EAAS6B,OAAS,GAElB,IADA,IAAMqiB,EAAS5H,EAAIuB,aAAa,EAAG,EAAG7d,EAAS4B,MAAO5B,EAAS6B,QACtDpI,EAAI,EAAGA,EAAIyqB,EAAOjQ,KAAK5Y,OAAQ5B,GAAK,EAAG,CAC9C,IAAM0qB,EAAQ3Z,KAAKC,MAAuC,KAAhC,GAAuB,IAAhBD,KAAKD,WACtC2Z,EAAOjQ,KAAKxa,GAAK0qB,EACjBD,EAAOjQ,KAAKxa,EAAI,GAAK0qB,EACrBD,EAAOjQ,KAAKxa,EAAI,GAAK0qB,EACrBD,EAAOjQ,KAAKxa,EAAI,GAAK,IAXX,OAaZ6iB,EAAI8H,aAAaF,EAAQ,EAAG,IAC5BnrB,EAAAM,EAAAJ,KAAAK,EAAA0E,GAAAzE,KAAAN,KAAM+G,KACDqkB,UAAYC,IACjBvrB,EAAKwrB,UAAYD,IACjBvrB,EAAKyrB,MAAQC,IACb1rB,EAAK2rB,MAAQD,IACb1rB,EAAK2hB,aAAc,EAnBP3hB,8OADI4qB,aAwBLjR,EAAA,MAAI1U,uRCAJ2mB,EAAA,eA3Bb,SAAAC,iGAAc5rB,CAAAC,KAAA2rB,GACZ3rB,KAAK4rB,UAAY,EACjB5rB,KAAK6rB,SAAW,GAChB7rB,KAAK8rB,OAAS,IAAI1B,IAClBpqB,KAAK8rB,OAAOC,UAAY/rB,KAAK8a,UAAU9U,KAAKhG,iGAGnB,IAAAF,EAAAE,KAAhBmO,EAAgBzL,EAAhByL,KAAMC,EAAU1L,EAAV0L,OACPwd,EAAgC5rB,KAAhC4rB,UAAWC,EAAqB7rB,KAArB6rB,SAAUC,EAAW9rB,KAAX8rB,OAC7B,OAAO,IAAIE,QAAQ,SAACC,GAClBJ,EAASD,GAAaK,EACtBnsB,EAAK8rB,WAAa,EAClBE,EAAOlR,YAAY,CACjBgR,YACAzd,OACAC,kDAKuC,IAAA8d,EAAA5oB,EAAjC0X,KAAQ7W,EAAyB+nB,EAAzB/nB,SAAUynB,EAAeM,EAAfN,UACpBC,EAAa7rB,KAAb6rB,SACRA,EAASD,GAAWznB,UACb0nB,EAASD,+ZCtBb,SAASO,IACd,MAAO,CACL7e,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBoH,SAAU,QACVC,OAAQ,SAKP,SAASmS,EAAT1pB,GAA4C,IAAhByL,EAAgBzL,EAAhByL,KAAMC,EAAU1L,EAAV0L,OACvC,MAAO,CACLd,KAAMC,IACNC,QAASme,EAAOU,SAAS,CAAEle,OAAMC,YAI9B,SAASwE,EAAMwL,GACpB,OAAO,SAAA3F,GAAQ,OAAIA,EAAS,CAC1BnL,KAAMC,IACNC,QAASoB,IAAIgE,MAAM,CACjBoH,SAAQ,SAAAnH,OAAWuL,KAElBtU,KAAK,SAAA+F,GAAK,OACTjB,IAAIgE,MAAM,CACRoH,SAAQ,SAAAnH,OAAWhD,EAAM5B,IAAjB,aAEPnE,KAAK,SAACsE,GAGL,OAFAA,EAAS,IAAIC,YAAYD,GACzBqK,EAAS2T,EAAiB,CAAEje,KAAM0B,EAAM1B,KAAMC,sbAC9CN,CAAA,GACK+B,EADL,CAEEzB,kBAOP,SAAS2a,IACd,MAAO,CACLzb,KAAMC,KAIH,SAAS0b,EAAT3lB,GAKJ,IAJDkB,EAIClB,EAJDkB,MACAmd,EAGCre,EAHDqe,OACArE,EAECha,EAFDga,MACAoC,EACCpc,EADDoc,OAEA,OAAO,SAACjH,EAAUG,GAAa,IAAA0T,EAQzB1T,IANF/I,MACEvN,EAHyBgqB,EAGzBhqB,GACA4L,EAJyBoe,EAIzBpe,UACAC,EALyBme,EAKzBne,KACQ/H,EANiBkmB,EAMzBle,OANyB+a,EAAAxe,EAUX,CAAC,IAAK,IAAK,KAAK7F,IAAI,SAACskB,GAErC,IADA,IAAIxmB,EAAW2O,KAAKC,MAAM8L,EAAM8L,GAAwB,GAAfzH,EAAOyH,IAAe1J,GAAU,EAAI,IACtE9c,EAAW,GAAGA,GAAYuL,EACjC,KAAmBA,GAAZvL,GAAkBA,GAAYuL,EACrC,OAAOvL,IAdoB,GAUtB8a,EAVsByL,EAAA,GAUnBxL,EAVmBwL,EAAA,GAUhB5L,EAVgB4L,EAAA,GAiBvBoD,EACDhb,KAAKuM,IAAIvM,KAAKwM,IAAIxM,KAAKsO,MAAiB,IAAVrb,EAAMgoB,EAA6B,EAAhBjb,KAAKD,SAAgB,GAAI,GAAI,KAD7Eib,EAEDhb,KAAKuM,IAAIvM,KAAKwM,IAAIxM,KAAKsO,MAAiB,IAAVrb,EAAMioB,EAA6B,EAAhBlb,KAAKD,SAAgB,GAAI,GAAI,KAF7Eib,EAGDhb,KAAKuM,IAAIvM,KAAKwM,IAAIxM,KAAKsO,MAAiB,IAAVrb,EAAMkoB,EAA6B,EAAhBnb,KAAKD,SAAgB,GAAI,GAAI,KAE7E7D,EAAQiS,EACZ,EAEC,GAAQ,GAAO6M,GAAgB,GAAOA,GAAgB,EAAKA,EAGxDne,EAAS,IAAIC,YAAYjI,GAI/B,GAHAgI,EAAOmP,EAAIpP,EAAOA,EAAOwP,EAAIxP,EAAOuP,GAAKjQ,EAEzCgL,EAAS2T,EAAiB,CAAEje,OAAMC,YAC9BF,EAAW,CAEb,IAAM6L,EAAO,IAAIgQ,SACjBhQ,EAAK4S,OAAO,SAAU,IAAIC,KAAK,CAACxe,EAAOye,QAAS,CAAEvf,KAAM,gBACxDsB,IAAIgE,MAAM,CACRmH,OACAC,SAAQ,SAAAnH,OAAWvQ,EAAX,WACR2X,OAAQ,QAGZ,OAAOxB,EAAS,CACdnL,KAAMC,IACNC,QAAS,CAAEY,gLCnGjBoL,EAAA7I,EAAA8I,EAAA,sBAAAqT,IAAAtT,EAAA7I,EAAA8I,EAAA,sBAAAsT,IAAAvT,EAAA7I,EAAA8I,EAAA,sBAAAuT,IAAAxT,EAAA7I,EAAA8I,EAAA,sBAAAwT,IAAAzT,EAAA7I,EAAA8I,EAAA,sBAAAyT,IAAA1T,EAAA7I,EAAA8I,EAAA,sBAAA0T,IAAA3T,EAAA7I,EAAA8I,EAAA,sBAAA2T,IAAA5T,EAAA7I,EAAA8I,EAAA,sBAAA4T,IAAA7T,EAAA7I,EAAA8I,EAAA,sBAAA6T,IAAA9T,EAAA7I,EAAA8I,EAAA,sBAAA8T,IAAA/T,EAAA7I,EAAA8I,EAAA,sBAAA+T,IAAAhU,EAAA7I,EAAA8I,EAAA,sBAAAgU,IAAAjU,EAAA7I,EAAA8I,EAAA,sBAAAiU,IAAAlU,EAAA7I,EAAA8I,EAAA,sBAAAkU,IAAAnU,EAAA7I,EAAA8I,EAAA,sBAAAmU,IAAApU,EAAA7I,EAAA8I,EAAA,sBAAAoU,IAAArU,EAAA7I,EAAA8I,EAAA,sBAAAqU,IAAAtU,EAAA7I,EAAA8I,EAAA,sBAAAsU,IAAAvU,EAAA7I,EAAA8I,EAAA,sBAAAuU,IAAAxU,EAAA7I,EAAA8I,EAAA,sBAAAwU,IAAAzU,EAAA7I,EAAA8I,EAAA,sBAAAyU,IAAA1U,EAAA7I,EAAA8I,EAAA,sBAAA0U,IACO,IAAMrB,EAAqB,qBACrBC,EAA+B,+BAC/BC,EAAmB,mBACnBC,EAAiB,iBAGjBC,EAAe,eACfC,EAAyB,yBACzBC,EAAc,cACdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAkC,kCAClCC,EAAsB,sBACtBC,EAAc,cAGdC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAiC,iCACjCC,EAAgC,gCAChCC,EAA0B,0BAC1BC,EAAa,aACbC,EAAuB,uBAEvBC,EAAgB,gBAChBC,EAA0B,0BAE1BC,EAAe,4NC5BtBlL,aACJ,SAAAA,iGAAcljB,CAAAC,KAAAijB,GACZjjB,KAAKouB,OAAS,kGAGAC,GAAO,IACbD,EAAWpuB,KAAXouB,OAIR,OAHKE,MAAMC,QAAQF,KACjBA,EAAQ,CAACA,IAEJrC,QAAQwC,IACbH,EACGvpB,IAAI,SAAAyf,GAAI,OACP,IAAIyH,QAAQ,SAACC,GACX,GAAImC,EAAO7J,GACT0H,QADF,EAIc,SAARwC,IACJ,GAAI9c,SAAS0c,MAAMI,MAAf,QAAA5b,OAA6B0R,IAG/B,OAFA6J,EAAO7J,IAAQ,OACf0H,IAGFyC,WAAWD,EAAO,IAEpBA,kBAOGhV,EAAA,MAAIwJ,82BCzBbxH,cACJ,SAAAA,EAAA/Y,GAA4B,IAAA5C,EAAdwb,EAAc5Y,EAAd4Y,wGAAcvb,CAAAC,KAAAyb,GAC1B,IAAM1U,EAAW4K,SAASvG,cAAc,UACxCrE,EAAS4B,MAAQ,KACjB5B,EAAS6B,OAAS,KAClB,IAAM6hB,EAAU,IAAIC,IAAc3jB,GAJR,OAK1B0jB,EAAQnP,WAAaA,GACrBxb,EAAAM,EAAAJ,KAAAK,EAAAob,GAAAnb,KAAAN,KACE,IAAIgrB,IAAoB,EAAG,GAC3B,IAAInmB,IAAkB,CACpBC,IAAK2lB,EACLkE,aAAa,OAGZpH,OAAO,GAAI,GAAK,GACrBznB,EAAK8C,SAASoB,IAAI,EAAG,GAAI,GACzBlE,EAAKiH,SAAWA,EAChBjH,EAAK2qB,QAAUA,EACfxH,IACGC,gBAAgB,UAChBpZ,KAAK,kBACJhK,EAAKqjB,SApBiBrjB,8OADVkF,0FAyBR,IACAb,EAAgCnE,KAAhCmE,SAAUS,EAAsB5E,KAAtB4E,SAAU6lB,EAAYzqB,KAAZyqB,QAC5BtmB,EAAS4G,UACTnG,EAASmG,UACT0f,EAAQ1f,yCAGH,IACGhE,EAAsB/G,KAAtB+G,SAAU0jB,EAAYzqB,KAAZyqB,QACZpH,EAAMtc,EAAS4jB,WAAW,MAC1BzG,EAAMb,EAAIS,qBAAqB,EAAG,EAAG,EAAG/c,EAAS6B,QACvDsb,EAAIH,aAAa,EAAG,sBACpBG,EAAIH,aAAa,EAAG,oBACpBV,EAAIK,UAAYQ,EAChBb,EAAIO,SAAS,EAAG,EAAG7c,EAAS4B,MAAO5B,EAAS6B,QAC5Cya,EAAIkB,KAAO,mBACXlB,EAAImB,UAAY,SAChBnB,EAAIoB,aAAe,SACnBpB,EAAIK,UAAY,OAChBL,EAAIuL,YAAc,wBAClBvL,EAAIwL,WAAa,GACjBxL,EAAIqB,SACF,SACiB,GAAjB3d,EAAS4B,MACS,GAAlB5B,EAAS6B,QAEXya,EAAIkB,KAAO,cACXlB,EAAIK,UAAY,OAChBL,EAAIwL,WAAa,EACjBxL,EAAIqB,SACF,4BACiB,GAAjB3d,EAAS4B,MACS,GAAlB5B,EAAS6B,QAEXya,EAAIkB,KAAO,cACXlB,EAAIK,UAAY,OAChBL,EAAIqB,SAAJ,IAAA7R,OACMic,SADN,0BAEmB,GAAjB/nB,EAAS4B,MACS,GAAlB5B,EAAS6B,QAEX6hB,EAAQhJ,aAAc,WAIXhG","file":"code/main.ae985dc6d3e3e943ef54.js","sourcesContent":["import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n        map: Noise,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.isScreenshot = window.__SCREENSHOT__;\n    this.camera = new PerspectiveCamera(80, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.fog = new FogExp2(0, 0.0125);\n    this.raycaster = new Raycaster();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__ && !this.isScreenshot) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setFog(color) {\n    const { fog, renderer } = this;\n    fog.color.setHex(color);\n    renderer.setClearColor(fog.color);\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.25, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.setFog(0x020214);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = this.fog;\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirm password',\n    email: 'Email',\n    name: 'Name',\n    signIn: 'Sign-In',\n    signInWithGoogle: 'Sign-In with Google',\n    signOut: 'Sign-Out',\n    password: 'Password',\n    register: 'Create an account',\n  },\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirmar contraseña',\n    email: 'Email',\n    name: 'Nombre',\n    signIn: 'Iniciar sesión',\n    signInWithGoogle: 'Iniciar sesión con Google',\n    signOut: 'Cerrar sesión',\n    password: 'Contraseña',\n    register: 'Crear una cuenta',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst filter = (\n  state = 'all',\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_SET_FILTER:\n      return action.payload.value;\n    default:\n      return state;\n  }\n};\n\nconst hasLoaded = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return true;\n    case types.REALM_CREATE_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst pagination = (\n  state = {\n    page: 0,\n    pages: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return {\n        ...state,\n        pages: action.payload.pages,\n      };\n    case types.LOBBY_SET_FILTER:\n      return {\n        ...state,\n        page: 0,\n      };\n    case types.LOBBY_SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload.realms;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  filter,\n  hasLoaded,\n  pagination,\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst isCreator = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return !!action.payload.isCreator;\n    case types.REALM_RESET:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  isCreator,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isSigningIn = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_SHOW_SESSION_POPUP:\n      return true;\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_HIDE_SESSION_POPUP:\n    case types.USER_REGISTER_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED: {\n      const { profile } = action.payload;\n      const { name } = profile;\n      return {\n        ...profile,\n        firstName: name.split(' ')[0],\n      };\n    }\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  isSigningIn,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Link = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  &:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  @keyframes octocat-wave {\n    0% {\n      transform: rotate(0deg);\n    }\n    20% {\n      transform: rotate(-25deg);\n    }\n    40% {\n      transform: rotate(10deg);\n    }\n    60% {\n      transform: rotate(-25deg);\n    }\n    80% {\n      transform: rotate(10deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst GitHub = () => (\n  <Link\n    href=\"https://github.com/danielesteban/RealmsVR#readme\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      fill=\"#fff\"\n    >\n      <path\n        d=\"M0 0l115 115h15l12 27 108 108V0z\"\n        fill=\"#000\"\n      />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n      />\n    </svg>\n  </Link>\n);\n\nexport default GitHub;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let iteration = 0; iteration < ((Date.now() % 10) + 1); iteration += 1) {\n      for (let index = tracks.length - 1; index >= 0; index -= 1) {\n        const random = Math.floor(Math.random() * tracks.length);\n        const temp = tracks[index];\n        tracks[index] = tracks[random];\n        tracks[random] = temp;\n      }\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  TiKey,\n  TiSocialGooglePlusCircular,\n  TiTimes,\n} from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport {\n  hideSessionPopup as hide,\n  login,\n  loginWithGoogle,\n  register,\n} from '@/actions/user';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, .5);\n`;\n\nconst Popup = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  background: #444;\n  box-shadow: 0 0 32px rgba(0, 0, 0, .5);\n`;\n\nconst Heading = styled.div`\n  background: #111;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 56px;\n  .tabs {\n    display: flex;\n    height: 100%;\n    > a {\n      display: flex;\n      align-items: center;\n      background: #222;\n      padding: 0 1rem;\n      border-left: 1px solid #333;\n      cursor: pointer;\n      &:first-child {\n        border-left: none;\n      }\n      &.active {\n        background: #444;\n        cursor: default;\n      }\n    }\n  }\n  > a {\n    padding: 1rem;\n    > svg {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  button {\n    display: flex;\n    align-items: center;\n    border: 1px solid #555;\n    background: #222;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    font-family: inherit;\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: inherit;\n    cursor: pointer;\n    outline: 0;\n    > svg {\n      font-size: 1.5em;\n      margin-right: 0.5rem;\n    }\n  }\n  .or {\n    position: relative;\n    width: 100%;\n    border-top: 1px solid #222;\n    margin: 2rem 0;\n    > span {\n      position: absolute;\n      display: block;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n  .google {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  &.active {\n    display: flex;\n  }\n  > label {\n    width: 100%;\n    padding: 0;\n  }\n  > input {\n    box-sizing: border-box;\n    border: 1px solid #333;\n    width: 100%;\n    background: #222;\n    color: inherit;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 2em;\n    padding: 0.5rem;\n    margin: 0 0 1rem;\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onLoginSubmit = this.onLoginSubmit.bind(this);\n    this.onRegisterSubmit = this.onRegisterSubmit.bind(this);\n    this.state = { tab: 'login' };\n  }\n\n  onLoginSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { login } = this.props;\n    login({\n      email: form.email.value,\n      password: form.password.value,\n    });\n  }\n\n  onRegisterSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { register } = this.props;\n    if (form.password.value !== form.confirmPassword.value) {\n      return;\n    }\n    register({\n      email: form.email.value,\n      name: form.name.value,\n      password: form.password.value,\n    });\n  }\n\n  render() {\n    const {\n      isSigningIn,\n      hide,\n      loginWithGoogle,\n    } = this.props;\n    const { tab } = this.state;\n    if (!isSigningIn) {\n      return null;\n    }\n    return (\n      <Wrapper>\n        <Popup>\n          <Heading>\n            <div className=\"tabs\">\n              <a\n                className={tab === 'login' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'login' })}\n              >\n                <Translate value=\"User.signIn\" />\n              </a>\n              <a\n                className={tab === 'register' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'register' })}\n              >\n                <Translate value=\"User.register\" />\n              </a>\n            </div>\n            <a\n              onClick={hide}\n            >\n              <TiTimes />\n            </a>\n          </Heading>\n          <Content>\n            <Form\n              className={tab === 'login' ? 'active' : null}\n              onSubmit={this.onLoginSubmit}\n            >\n              <label><Translate value=\"User.email\" /></label>\n              <input type=\"email\" name=\"email\" required />\n              <label><Translate value=\"User.password\" /></label>\n              <input type=\"password\" name=\"password\" required />\n              <button\n                type=\"submit\"\n              >\n                <TiKey />\n                <Translate value=\"User.signIn\" />\n              </button>\n            </Form>\n            <Form\n              className={tab === 'register' ? 'active' : null}\n              onSubmit={this.onRegisterSubmit}\n            >\n              <label><Translate value=\"User.name\" /></label>\n              <input type=\"text\" name=\"name\" required />\n              <label><Translate value=\"User.email\" /></label>\n              <input type=\"email\" name=\"email\" required />\n              <label><Translate value=\"User.password\" /></label>\n              <input type=\"password\" name=\"password\" required />\n              <label><Translate value=\"User.confirmPassword\" /></label>\n              <input type=\"password\" name=\"confirmPassword\" required />\n              <button\n                type=\"submit\"\n              >\n                <TiKey />\n                <Translate value=\"User.register\" />\n              </button>\n            </Form>\n            <div className=\"or\">\n              <Translate value=\"User.or\" />\n            </div>\n            <div className=\"google\">\n              <button\n                onClick={loginWithGoogle}\n                type=\"button\"\n              >\n                <TiSocialGooglePlusCircular />\n                <Translate value=\"User.signInWithGoogle\" />\n              </button>\n            </div>\n          </Content>\n        </Popup>\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isSigningIn: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: {\n      isSigningIn,\n    },\n  }) => ({\n    isSigningIn,\n  }),\n  {\n    hide,\n    login,\n    loginWithGoogle,\n    register,\n  }\n)(Session);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Github from '@/components/github';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    const isScreenshot = window.__SCREENSHOT__;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Music />\n        {!isScreenshot ? <Github /> : null}\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function hideSessionPopup() {\n  return {\n    type: types.USER_HIDE_SESSION_POPUP,\n  };\n}\n\nexport function register({ email, name, password }) {\n  return dispatch => dispatch({\n    type: types.USER_REGISTER,\n    payload: API.fetch({\n      body: {\n        email,\n        name,\n        password,\n      },\n      endpoint: 'user',\n      method: 'PUT',\n    }),\n  }).catch(() => {});\n}\n\nexport function refreshSession() {\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function showSessionPopup() {\n  return {\n    type: types.USER_SHOW_SESSION_POPUP,\n  };\n}\n\nexport function login({ email, password }) {\n  return dispatch => dispatch({\n    type: types.USER_LOGIN,\n    payload: API.fetch({\n      body: {\n        email,\n        password,\n      },\n      endpoint: 'user',\n      method: 'POST',\n    }),\n  }).catch(() => {});\n}\n\nexport function loginWithGoogle() {\n  return (dispatch) => {\n    const w = 512;\n    const h = 512;\n    const left = (window.screen.width / 2) - w / 2;\n    const top = (window.screen.height / 2) - h / 2;\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    const watcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(watcher);\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    const onMessage = ({ origin, data: { session } }) => {\n      if (API.baseURL.indexOf(origin) === 0) {\n        window.removeEventListener('message', onMessage);\n        clearInterval(watcher);\n        if (!session) {\n          return;\n        }\n        dispatch({\n          type: types.USER_LOGIN_FULFILLED,\n          payload: session,\n        });\n      }\n    };\n    window.addEventListener('message', onMessage, false);\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport {\n  fetchRealms,\n  setFilter,\n  setPage,\n} from '@/actions/lobby';\nimport {\n  create as createRealm,\n} from '@/actions/realm';\nimport { showSessionPopup as signin, signout } from '@/actions/user';\nimport Ground from '@/components/lobby/ground';\nimport Menu from '@/components/lobby/menu';\nimport Starfield from '@/components/lobby/starfield';\nimport Title from '@/components/lobby/title';\nimport Renderer from '@/components/renderer';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      filter,\n      hasLoaded,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      renderer: { current: renderer },\n      createRealm,\n      fetchRealms,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Ground());\n    scene.add(new Starfield());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      filter,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      createRealm,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    if (!hasLoaded) {\n      // Fetch realms\n      fetchRealms();\n    }\n  }\n\n  componentDidUpdate({\n    filter: previousFilter,\n    isSigningIn: wasSigningIn,\n    pagination: previousPagination,\n    realms: previousRealms,\n    user: previousUser,\n  }) {\n    const {\n      filter,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      fetchRealms,\n      setFilter,\n    } = this.props;\n    const {\n      menu,\n      renderer: { isScreenshot },\n    } = this;\n    const filterHasUpdated = filter !== previousFilter;\n    if (\n      filterHasUpdated\n      || pagination.page !== previousPagination.page\n    ) {\n      // Fetch realms\n      fetchRealms();\n    }\n    if (filterHasUpdated) {\n      // Update filter\n      menu.updateFilter(filter);\n    }\n    if (isSigningIn !== wasSigningIn) {\n      // Update Session\n      menu.updateSession({ isSigningIn });\n    }\n    if (pagination !== previousPagination) {\n      // Update pagination\n      menu.updatePagination(pagination);\n    }\n    if (realms !== previousRealms) {\n      // Update realms\n      menu.updateRealms(realms);\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n    if (user !== previousUser) {\n      // Update Session\n      menu.updateSession({ user });\n      if (!user && filter === 'user') {\n        setFilter('all');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n        point,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      props: {\n        isSigningIn,\n      },\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    if (isSigningIn) {\n      return;\n    }\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n      point: hit.point,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.defaultProps = {\n  user: undefined,\n};\n\nLobby.propTypes = {\n  filter: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  user: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  createRealm: PropTypes.func.isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n  signin: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      filter,\n      hasLoaded,\n      pagination,\n      realms,\n    },\n    user: {\n      isAuth,\n      isSigningIn,\n      profile: user,\n    },\n  }) => ({\n    filter,\n    hasLoaded,\n    isSigningIn,\n    pagination,\n    realms,\n    user: isAuth ? user : undefined,\n  }),\n  {\n    createRealm,\n    fetchRealms,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }\n)(Lobby);\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        defines: shader.defines,\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: UniformsUtils.merge([\n          shader.uniforms,\n          { map: { value: Noise } },\n        ]),\n        fog: true,\n        vertexColors: VertexColors,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        map: Noise,\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n    uv,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.attributes.uv) {\n      geometry.attributes.uv.setArray(uv);\n      geometry.attributes.uv.needsUpdate = true;\n    } else {\n      geometry.addAttribute('uv', new BufferAttribute(uv, 2));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n  defines: { USE_MAP: true },\n};\n\nexport default Voxels;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Ground extends Mesh {\n  constructor() {\n    if (\n      !Ground.geometry\n      || !Ground.material\n    ) {\n      Ground.setup();\n    }\n    super(\n      Ground.geometry,\n      Ground.material\n    );\n  }\n\n  static setup() {\n    if (!Ground.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Ground.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Ground.material) {\n      Ground.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Ground;\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function fetchRealms() {\n  return (dispatch, getState) => {\n    const { lobby: { filter, pagination: { page } } } = getState();\n    return dispatch({\n      type: types.LOBBY_FETCH_REALMS,\n      payload: API.fetch({\n        endpoint: `realms/${filter === 'user' ? 'user/' : ''}${page}`,\n      }),\n    });\n  };\n}\n\nexport function setFilter(value) {\n  return {\n    type: types.LOBBY_SET_FILTER,\n    payload: { value },\n  };\n}\n\nexport function setPage(value) {\n  return {\n    type: types.LOBBY_SET_PAGE,\n    payload: { value },\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Picker extends Panel {\n  constructor({ anisotropy, history }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.menu = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.85,\n      width: renderer.width * 0.25,\n      height: renderer.height * 0.1,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.history = history;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      menu,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    ctx.save();\n    ctx.translate(menu.x, menu.y);\n    ctx.fillStyle = '#222';\n    ctx.strokeStyle = '#333';\n    ctx.beginPath();\n    ctx.rect(0, 0, menu.width, menu.height);\n    ctx.fill();\n    ctx.stroke();\n    ctx.fillStyle = '#fff';\n    ctx.font = '700 24px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('« REALMS', menu.width * 0.5, menu.height * 0.5);\n    ctx.restore();\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.25;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.375, renderer.height * 0.85);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      history,\n      menu,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip, menu].forEach((object) => {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = object;\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      if (object === menu) {\n        history.goBack();\n        return;\n      }\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (object === strip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport API from '@/services/api';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    _id: id,\n    name,\n    creator,\n    onPointer,\n  }) {\n    super({\n      anisotropy,\n    });\n    this.name = name;\n    this.onPointer = onPointer;\n    this.scale.set(0.3, 0.3, 1);\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (creator) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${creator._id}/photo`;\n      image.onload = () => {\n        this.creator = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n    {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}realm/${id}/screenshot`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      creator,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '40px Roboto';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    if (creator) {\n      ctx.drawImage(\n        creator,\n        0, renderer.height * 0.75,\n        renderer.width * 0.25, renderer.height * 0.25\n      );\n    }\n    ctx.fillText(\n      name,\n      renderer.width * 0.05 + (renderer.width * (creator ? 0.25 : 0.05)),\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass ButtonsPanel extends Panel {\n  constructor({\n    anisotropy,\n  }) {\n    super({\n      anisotropy,\n      width: 256,\n      height: 256,\n    });\n    this.scale.set(0.25, 0.25, 1);\n    this.hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        this.hasLoadedFont = true;\n        this.draw();\n      });\n  }\n\n  draw() {\n    const {\n      buttons,\n      context: ctx,\n    } = this;\n    super.draw();\n    ctx.font = '700 30px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n      isActive,\n      isDisabled,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      if (isDisabled) {\n        ctx.fillStyle = '#555';\n      } else if (isActive) {\n        ctx.fillStyle = '#fff';\n      } else {\n        ctx.fillStyle = '#222';\n      }\n      ctx.strokeStyle = '#333';\n      ctx.fill();\n      ctx.stroke();\n      if (isDisabled) {\n        ctx.fillStyle = '#777';\n      } else if (isActive) {\n        ctx.fillStyle = '#222';\n      } else {\n        ctx.fillStyle = '#fff';\n      }\n      ctx.fillText(\n        label,\n        width * 0.5,\n        height * 0.5\n      );\n      ctx.restore();\n    });\n  }\n\n  onPointer({ isDown, point }) {\n    const { buttons, pointer } = this;\n    if (!isDown) return;\n    super.onPointer(point);\n    buttons\n      .filter(({ isDisabled }) => (!isDisabled))\n      .forEach(({\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      }) => {\n        if (\n          pointer.x < x\n          || pointer.x > x + width\n          || pointer.y < y\n          || pointer.y > y + height\n        ) {\n          return;\n        }\n        onPointer();\n      });\n  }\n}\n\nclass CreateRealm extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    history,\n    createRealm,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.3, 0.3, 1);\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: 'Create Realm',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: () => (\n          createRealm()\n            .then(({ value: slug }) => history.push(`/${slug}`))\n        ),\n      },\n    ];\n  }\n}\n\nclass Pagination extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    page,\n    pages,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: '<',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page > 0) update(this.page - 1);\n        },\n      },\n      {\n        label: '>',\n        x: width * 0.6,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page < this.pages - 1) update(this.page + 1);\n        },\n      },\n    ];\n    this.page = page;\n    this.pages = pages;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      page,\n      pages,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      `${page + 1} / ${pages}`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n  }\n}\n\nclass Session extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isSigningIn,\n    user,\n    signin,\n    signout,\n  }) {\n    super({ anisotropy });\n    this.signin = signin;\n    this.signout = signout;\n    this.updateSession({\n      isSigningIn,\n      user,\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { renderer, signin, signout } = this;\n    const { width, height } = renderer;\n    if (isSigningIn) {\n      this.buttons = [];\n    } else if (!user) {\n      this.buttons = [{\n        label: 'Sign-In',\n        x: width * 0.1,\n        y: height * 0.4,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: signin,\n      }];\n    } else {\n      this.buttons = [{\n        label: 'Sign-Out',\n        x: width * 0.1,\n        y: height * 0.7,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: signout,\n      }];\n    }\n    this.isSigningIn = isSigningIn;\n    this.user = user;\n    delete this.userPhoto;\n    if (user) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${user._id}/photo`;\n      image.onload = () => {\n        this.userPhoto = image;\n        if (this.hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isSigningIn,\n      renderer,\n      user,\n      userPhoto,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    if (isSigningIn) {\n      ctx.fillText(\n        'Remove your',\n        renderer.width * 0.5,\n        renderer.height * 0.25\n      );\n      ctx.fillText(\n        'headset',\n        renderer.width * 0.5,\n        renderer.height * 0.4\n      );\n      ctx.fillText(\n        'And Sign-In',\n        renderer.width * 0.5,\n        renderer.height * 0.6\n      );\n      ctx.fillText(\n        'in your browser',\n        renderer.width * 0.5,\n        renderer.height * 0.75\n      );\n    } else {\n      ctx.fillText(\n        user ? user.firstName : 'Guest',\n        renderer.width * 0.5,\n        renderer.height * 0.2\n      );\n    }\n    if (user && userPhoto) {\n      ctx.drawImage(\n        userPhoto,\n        renderer.width * 0.5 - 40, renderer.height * 0.5 - 50,\n        80, 80\n      );\n    }\n  }\n}\n\nclass Filter extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isAuth,\n    filter,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        id: 'all',\n        label: 'All Realms',\n        x: width * 0.1,\n        y: height * 0.2,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: () => update('all'),\n      },\n      {\n        id: 'user',\n        label: 'Your Realms',\n        x: width * 0.1,\n        y: height * 0.6,\n        width: width * 0.8,\n        height: height * 0.2,\n        isDisabled: !isAuth,\n        onPointer: () => update('user'),\n      },\n    ];\n    this.filter = filter;\n    this.update = update;\n  }\n\n  updateSession({ isAuth }) {\n    this.buttons[1].isDisabled = !isAuth;\n  }\n\n  draw() {\n    const { buttons, filter } = this;\n    buttons.forEach((button) => {\n      button.isActive = button.id === filter;\n    });\n    super.draw();\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({\n    anisotropy,\n    filter,\n    history,\n    isSigningIn,\n    pagination,\n    realms,\n    user,\n    createRealm,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n    this.pagination = this.addPanel(\n      Pagination,\n      {\n        ...pagination,\n        update: setPage,\n      },\n      0, -0.3, 0.13\n    );\n    this.session = this.addPanel(\n      Session,\n      {\n        isSigningIn,\n        user,\n        signin,\n        signout,\n      },\n      -0.3, -0.3, 0.13\n    );\n    this.filter = this.addPanel(\n      Filter,\n      {\n        filter,\n        isAuth: !!user,\n        update: setFilter,\n      },\n      0.3, -0.3, 0.13\n    );\n    this.createRealm = createRealm;\n    this.updateRealms(realms);\n  }\n\n  addPanel(Panel, props, x, y, z) {\n    const { anisotropy, intersects } = this;\n    const panel = new Panel({ ...props, anisotropy });\n    panel.position.set(x, y, z);\n    panel.lookAt(0, 0.5, 1);\n    this.add(panel);\n    const pillar = new Pillar();\n    pillar.position.copy(panel.position);\n    this.add(pillar);\n    intersects.push(panel);\n    return panel;\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  updateFilter(value) {\n    const { filter } = this;\n    filter.filter = value;\n    filter.draw();\n  }\n\n  updatePagination({ page, pages }) {\n    const { pagination } = this;\n    pagination.page = page;\n    pagination.pages = pages;\n    pagination.draw();\n  }\n\n  updateRealms(realms) {\n    const {\n      anisotropy,\n      children,\n      createRealm,\n      filter: { filter },\n      history,\n      pagination,\n    } = this;\n    while (children.length > 6) {\n      this.remove(children[children.length - 1]);\n    }\n    this.intersects.length = 3;\n    const showCreateRealm = filter === 'user' && pagination.page === 0;\n    const count = realms.length + (showCreateRealm ? 1 : 0);\n    let offset = 0.25 + count * -0.25;\n    if (showCreateRealm) {\n      this.addPanel(\n        CreateRealm,\n        {\n          history,\n          createRealm,\n        },\n        offset, 0, 0\n      );\n      offset += 0.5;\n    }\n    realms.forEach((realm, i) => {\n      const panel = this.addPanel(\n        Realm,\n        {\n          ...realm,\n          anisotropy,\n          onPointer: ({ hand, isDown }) => {\n            this.setHover({ hand, realm: panel });\n            if (isDown) {\n              history.push(`/${realm.slug}`);\n            }\n          },\n        },\n        offset + (i * 0.5), 0, 0\n      );\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { filter, session } = this;\n    filter.updateSession({ isAuth: !!user });\n    filter.draw();\n    session.updateSession({ isSigningIn, user });\n    session.draw();\n  }\n}\n\nexport default Menu;\n","import {\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  VertexColors,\n  BufferAttribute,\n  Vector3,\n} from 'three';\n\nclass Starfield extends Points {\n  constructor() {\n    if (\n      !Starfield.geometry\n      || !Starfield.material\n    ) {\n      Starfield.setup();\n    }\n    super(\n      Starfield.geometry,\n      Starfield.material\n    );\n  }\n\n  static setup() {\n    if (!Starfield.geometry) {\n      const count = 2048;\n      const radius = 512;\n      const position = new Float32Array(count * 3);\n      const color = new Float32Array(count * 3);\n      const aux = new Vector3();\n      for (let i = 0; i < count * 3; i += 3) {\n        aux\n          .set(\n            Math.random() * 2 - 1,\n            Math.random(),\n            Math.random() * 2 - 1\n          )\n          .normalize()\n          .multiplyScalar(radius);\n        position[i] = aux.x;\n        position[i + 1] = aux.y;\n        position[i + 2] = aux.z;\n        const c = 0.2 + Math.random() * 0.5;\n        color[i] = c - Math.random() * 0.1;\n        color[i + 1] = c - Math.random() * 0.1;\n        color[i + 2] = c - Math.random() * 0.1;\n      }\n      Starfield.geometry = new BufferGeometry();\n      Starfield.geometry.addAttribute('position', new BufferAttribute(position, 3));\n      Starfield.geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (!Starfield.material) {\n      Starfield.material = new PointsMaterial({\n        fog: false,\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Starfield;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      history,\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n      history,\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const {\n      renderer: {\n        isScreenshot,\n        raycaster,\n        room,\n        renderer: { vr },\n      },\n      picker,\n      voxels,\n    } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5 + 0.5,\n        size * 0.5,\n        size * 0.5 + 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n      if (!previousGeometry.index && vr.enabled) {\n        // Pull the player down to the nearest voxel\n        raycaster.ray.origin.copy(room.position);\n        raycaster.ray.direction.set(0, -1, 0);\n        const hit = raycaster.intersectObjects(voxels.intersects)[0];\n        if (hit) {\n          room.position.y = hit.point.y;\n        }\n      }\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        isScreenshot,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!isScreenshot && !vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n    uv: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.a928c356f374818e0f26.js\");\n};","import {\n  BoxGeometry,\n  BufferGeometry,\n  CanvasTexture,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({\n    anisotropy,\n    width = 512,\n    height = 512,\n  }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const geometry = new BoxGeometry(1, 1, 0.06);\n      geometry.faces.splice(8, 2);\n      geometry.faces.forEach((face, i) => (\n        face.color.setHex(\n          Math.floor(i / 2) === 4 ? 0x111111 : 0x222222\n        )\n      ));\n      geometry.translate(0, 0, -0.01);\n      const backplate = new Mesh(\n        (new BufferGeometry()).fromGeometry(geometry),\n        new MeshBasicMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  CanvasTexture,\n  NearestFilter,\n  RepeatWrapping,\n} from 'three';\n\nclass Noise extends CanvasTexture {\n  constructor() {\n    const renderer = document.createElement('canvas');\n    const ctx = renderer.getContext('2d');\n    renderer.width = 16;\n    renderer.height = 16;\n    const pixels = ctx.getImageData(0, 0, renderer.width, renderer.height);\n    for (let i = 0; i < pixels.data.length; i += 4) {\n      const light = Math.floor((0.9 + (Math.random() * 0.05)) * 0xFF);\n      pixels.data[i] = light;\n      pixels.data[i + 1] = light;\n      pixels.data[i + 2] = light;\n      pixels.data[i + 3] = 0xFF;\n    }\n    ctx.putImageData(pixels, 0, 0);\n    super(renderer);\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapS = RepeatWrapping;\n    this.wrapT = RepeatWrapping;\n    this.needsUpdate = true;\n  }\n}\n\nexport default new Noise();\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create() {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n        size,\n        voxels: current,\n      },\n    } = getState();\n    // Normalize & 3D wrap voxel position\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    // Randomize the color just a bit\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    // Update the voxels data\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    // Request a geometry generation\n    dispatch(generateGeometry({ size, voxels }));\n    if (isCreator) {\n      // Send update to server\n      const body = new FormData();\n      body.append('voxels', new Blob([voxels.buffer], { type: 'text/plain' }));\n      API.fetch({\n        body,\n        endpoint: `realm/${id}/voxels`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\nexport const LOBBY_SET_FILTER = 'LOBBY/SET_FILTER';\nexport const LOBBY_SET_PAGE = 'LOBBY/SET_PAGE';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_HIDE_SESSION_POPUP = 'USER/HIDE_SESSION_POPUP';\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SHOW_SESSION_POPUP = 'USER/SHOW_SESSION_POPUP';\nexport const USER_LOGIN = 'USER/LOGIN';\nexport const USER_LOGIN_FULFILLED = 'USER/LOGIN_FULFILLED';\nexport const USER_LOGIN_REJECTED = 'USER/LOGIN_REJECTED';\nexport const USER_REGISTER = 'USER/REGISTER';\nexport const USER_REGISTER_FULFILLED = 'USER/REGISTER_FULFILLED';\nexport const USER_REGISTER_REJECTED = 'USER/REGISTER_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const check = () => {\n              if (document.fonts.check(`1rem ${font}`)) {\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            check();\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0.3)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'REALMS',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n"],"sourceRoot":""}