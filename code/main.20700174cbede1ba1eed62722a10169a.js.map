{"version":3,"sources":["webpack:///./src/scenes/lobby.jsx","webpack:///./src/components/camera.js","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/github.jsx","webpack:///./src/components/music.jsx","webpack:///./src/components/session.jsx","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.jsx","webpack:///./src/components/realm/metadata.jsx","webpack:///./src/components/lobby/ground.js","webpack:///./src/actions/lobby.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/starfield.js","webpack:///./src/services/api.js","webpack:///./src/components/popup.jsx","webpack:///./src/services/mesher.worker.js","webpack:///./src/components/panel.js","webpack:///./src/textures/noise.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/actions/types.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/title.js"],"names":["Lobby","PureComponent","_this$props","this","props","filter","hasLoaded","history","isSigningIn","pagination","realms","user","renderer","current","createRealm","fetchRealms","setFilter","setPage","signin","signout","anisotropy","getMaxAnisotropy","scene","resetScene","add","Ground","Starfield","Title","menu","Menu","onBeforeRender","bind","vr","enabled","touches","Touches","window","filtered","target","canvas","on","onPointerDown","previousFilter","_ref","wasSigningIn","previousPagination","previousRealms","previousUser","_this$props2","isScreenshot","filterHasUpdated","page","updateFilter","updateSession","updatePagination","updateRealms","setImmediate","__SCREENSHOT_READY__","disable","_this$renderer","hands","raycaster","children","forEach","hand","i","buttons","pointer","setupRaycaster","hit","intersectObjects","intersects","visible","setHover","distance","object","point","scale","z","onPointer","isDown","triggerDown","e","_ref3","_slicedToArray","_ref2","x","y","_this$renderer2","camera","width","height","setFromCamera","Math","min","max","defaultProps","undefined","propTypes","PropTypes","string","isRequired","bool","shape","number","pages","arrayOf","name","slug","instanceOf","Renderer","_id","func","connect","_ref4","_ref4$lobby","lobby","_ref4$user","isAuth","profile","Camera","_this","_classCallCheck","_getPrototypeOf","call","rotation","order","aux","direction","Vector3","forward","right","worldUp","input","keyboard","Vector2","onKeyboardDown","_assertThisInitialized","onKeyboardUp","reset","PerspectiveCamera","keyCode","repeat","movements","isLocked","addEventListener","onPointerMovement","onPointerLockClose","_this$input","removeEventListener","set","dx","dy","delta","_ref5","_this$input2","position","PI_2","PI","_this$aux","getWorldDirection","crossVectors","addScaledVector","normalize","updateMatrixWorld","lookAt","canLock","_canLock","value","pointerlock","available","onPointerLockAttain","destroy","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","clone","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerUp","matrixAutoUpdate","Object3D","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","applyMatrix4","geometry","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","map","Noise","Mesh","pointerGeometry","setFromPoints","pointerMaterial","LineBasicMaterial","Line","gamepads","navigator","getGamepads","length","gamepad","id","startsWith","pose","updateHand","standingMatrix","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","renderer_classCallCheck","renderer_getPrototypeOf","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","__SCREENSHOT__","clock","Clock","fog","FogExp2","Raycaster","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setAnimationLoop","room","setupVR","stats","begin","animation","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","setHex","setClearColor","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","then","session","setSession","frameOfReferenceType","xr","requestDevice","setDevice","requestPresent","source","domElement","getVRDisplays","displays","getStandingMatrix","child","dispose","setFog","Scene","react_default","a","createElement","ref","ShaderChunk","fog_vertex","replace","locales","en","Realm","editMetadata","save","User","confirmPassword","email","signIn","signInWithGoogle","signOut","password","register","es","availableLocales","Object","keys","translations","locale","merge","lobbyReducer","combineReducers","state","arguments","action","type","types","payload","_objectSpread","realmReducer","isCreator","isEditingMetadata","size","voxels","Uint32Array","storedSession","JSON","parse","localStorage","getItem","API","setAuthorization","token","userReducer","user_objectSpread","firstName","split","setItem","stringify","removeItem","rootReducer","i18n","loadingBar","realm","Link","styled","withConfig","displayName","componentId","GitHub","href","rel","xmlns","viewBox","fill","d","className","Wrapper","div","Progress","Controls","Music","next","toggle","tracks","music_toConsumableArray","iteration","Date","now","index","random","floor","temp","player","document","ontimeupdate","onTimeUpdate","onended","volume","isPlaying","playhead","track","waitForFirstInteraction","setState","currentTime","duration","_this2","first","play","paused","pause","src","_this3","clientId","fetch","concat","res","json","Error","stream_url","_this$state","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","alt","style","onClick","ti","Tabs","Content","Form","form","Session","session_classCallCheck","session_getPrototypeOf","onLoginSubmit","session_assertThisInitialized","onRegisterSubmit","tab","preventDefault","login","hide","loginWithGoogle","tabs","react_redux_i18n_build","popup","heading","isShowing","onSubmit","required","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","layout_Wrapper","components_renderer","scenes","music","github","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","dispatch","loadTranslations","load","setLocale","getState","refreshSession","createBrowserHistory","basename","__BASENAME__","location","hash","mount","getElementById","react_redux_es","layout","__webpack_require__","__webpack_exports__","hideSessionPopup","showSessionPopup","_types__WEBPACK_IMPORTED_MODULE_1__","_services_api__WEBPACK_IMPORTED_MODULE_2__","body","endpoint","method","left","screen","w","top","h","win","open","baseURL","watcher","setInterval","postMessage","clearInterval","onMessage","data","Voxels","_ref$instanced","instanced","_possibleConstructorReturn","shader","InstancedBufferGeometry","ShaderMaterial","defines","vertexShader","vertex","fragmentShader","fragment","uniforms","UniformsUtils","vertexColors","VertexColors","frustum","Frustum","remove","instances","distanceTo","round","instance","chunk","updateMatrix","push","sort","_instance$chunk","frustumCulled","offset","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","array","needsUpdate","_ref6","normal","uv","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","join","USE_MAP","match","params","updateFog","picker","Picker","extensions","get","head","previousGeometry","previousFog","previousSize","resize","_toConsumableArray","copy","_this$props3","updateVoxels","updateFrustum","_map2","axis","colors","fg","_renderer$animation","sin","rotateY","rotateX","translateZ","react__WEBPACK_IMPORTED_MODULE_1___default","_components_realm_metadata__WEBPACK_IMPORTED_MODULE_5__","_ref2$realm","Toggle","Metadata","show","react_icons_ti__WEBPACK_IMPORTED_MODULE_2__","_components_popup__WEBPACK_IMPORTED_MODULE_6__","react_redux_i18n__WEBPACK_IMPORTED_MODULE_4__","defaultValue","_ref$realm","PlaneGeometry","vertices","p","v","b","c","avg","factor","setRGB","_types__WEBPACK_IMPORTED_MODULE_0__","_services_api__WEBPACK_IMPORTED_MODULE_1__","_getState$lobby","block","strip","modeButton","label","setMode","mode","draw","bg","Color","setHSL","Fonts","waitUntilLoaded","Panel","ctx","context","_get","prototype","fillStyle","getHexString","fillRect","grdWhite","createLinearGradient","addColorStop","grdBlack","restore","grd","strokeStyle","beginPath","rect","stroke","font","textAlign","textBaseline","fillText","imageData","getImageData","getHex","Pillar","CylinderGeometry","creator","vignette","createRadialGradient","hasLoadedFont","image","Image","crossOrigin","onload","screenshot","isHover","drawImage","ButtonsPanel","isActive","isDisabled","CreateRealm","_ref7","_this3$renderer","_ref8","Pagination","_ref9","_this4","_this4$renderer","_ref10","_this5","_this6","_ref11","userPhoto","Filter","_ref12","_this7","_this7$renderer","_ref13","button","_ref14","_this8","hover","addPanel","panel","pillar","_ref15","_ref16","_this9","showCreateRealm","_ref17","_ref18","Points","count","multiplyScalar","PointsMaterial","__API__","_ref$headers","headers","_ref$method","authorization","Authorization","FormData","status","arrayBuffer","prop_types__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_3__","Overlay","Heading","Popup","node","module","exports","Worker","_ref$width","_ref$height","backplate","texture","CanvasTexture","getContext","splice","side","DoubleSide","PlaneBufferGeometry","worldToLocal","pixels","light","putImageData","magFilter","NearestFilter","minFilter","wrapS","RepeatWrapping","wrapT","mesher","Mesher","promiseId","promises","worker","onmessage","Promise","resolve","_ref2$data","create","generateGeometry","generate","hideMetadataPopup","showMetadataPopup","_getState$realm","updateMetadata","_getState3$realm","randomized","r","g","append","Blob","buffer","LOBBY_FETCH_REALMS","LOBBY_FETCH_REALMS_FULFILLED","LOBBY_SET_FILTER","LOBBY_SET_PAGE","REALM_CREATE","REALM_CREATE_FULFILLED","REALM_FETCH","REALM_FETCH_FULFILLED","REALM_HIDE_METADATA_POPUP","REALM_RESET","REALM_SHOW_METADATA_POPUP","REALM_UPDATE_FOG","REALM_UPDATE_GEOMETRY","REALM_UPDATE_GEOMETRY_FULFILLED","REALM_UPDATE_METADATA","REALM_UPDATE_METADATA_FULFILLED","REALM_UPDATE_VOXELS","USER_HIDE_SESSION_POPUP","USER_REFRESH_SESSION","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SHOW_SESSION_POPUP","USER_LOGIN","USER_LOGIN_FULFILLED","USER_REGISTER","USER_REGISTER_FULFILLED","USER_SIGNOUT","loaded","fonts","Array","isArray","all","check","setTimeout","transparent","shadowColor","shadowBlur","__VERSION__"],"mappings":"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","file":"code/main.b43151d945d5c339da08.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport {\n  fetchRealms,\n  setFilter,\n  setPage,\n} from '@/actions/lobby';\nimport {\n  create as createRealm,\n} from '@/actions/realm';\nimport { showSessionPopup as signin, signout } from '@/actions/user';\nimport Ground from '@/components/lobby/ground';\nimport Menu from '@/components/lobby/menu';\nimport Starfield from '@/components/lobby/starfield';\nimport Title from '@/components/lobby/title';\nimport Renderer from '@/components/renderer';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      filter,\n      hasLoaded,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      renderer: { current: renderer },\n      createRealm,\n      fetchRealms,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Ground());\n    scene.add(new Starfield());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      filter,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      createRealm,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(window, {\n        filtered: true,\n        target: renderer.canvas.current,\n      })\n        .on('start', this.onPointerDown.bind(this));\n    }\n    if (!hasLoaded) {\n      // Fetch realms\n      fetchRealms();\n    }\n  }\n\n  componentDidUpdate({\n    filter: previousFilter,\n    isSigningIn: wasSigningIn,\n    pagination: previousPagination,\n    realms: previousRealms,\n    user: previousUser,\n  }) {\n    const {\n      filter,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      fetchRealms,\n      setFilter,\n    } = this.props;\n    const {\n      menu,\n      renderer: { isScreenshot },\n    } = this;\n    const filterHasUpdated = filter !== previousFilter;\n    if (\n      filterHasUpdated\n      || pagination.page !== previousPagination.page\n    ) {\n      // Fetch realms\n      fetchRealms();\n    }\n    if (filterHasUpdated) {\n      // Update filter\n      menu.updateFilter(filter);\n    }\n    if (isSigningIn !== wasSigningIn) {\n      // Update Session\n      menu.updateSession({ isSigningIn });\n    }\n    if (pagination !== previousPagination) {\n      // Update pagination\n      menu.updatePagination(pagination);\n    }\n    if (realms !== previousRealms) {\n      // Update realms\n      menu.updateRealms(realms);\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n    if (user !== previousUser) {\n      // Update Session\n      menu.updateSession({ user });\n      if (!user && filter === 'user') {\n        setFilter('all');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n        point,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      props: {\n        isSigningIn,\n      },\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    if (isSigningIn) {\n      return;\n    }\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n      point: hit.point,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.defaultProps = {\n  user: undefined,\n};\n\nLobby.propTypes = {\n  filter: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  user: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  createRealm: PropTypes.func.isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n  signin: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      filter,\n      hasLoaded,\n      pagination,\n      realms,\n    },\n    user: {\n      isAuth,\n      isSigningIn,\n      profile: user,\n    },\n  }) => ({\n    filter,\n    hasLoaded,\n    isSigningIn,\n    pagination,\n    realms,\n    user: isAuth ? user : undefined,\n  }),\n  {\n    createRealm,\n    fetchRealms,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }\n)(Lobby);\n","import pointerlock from 'pointer-lock';\nimport {\n  PerspectiveCamera,\n  Vector2,\n  Vector3,\n} from 'three';\n\nclass Camera extends PerspectiveCamera {\n  constructor({ canvas }) {\n    super(80, 1, 0.1, 1024);\n    this.canvas = canvas;\n    this.rotation.order = 'YXZ';\n    this.aux = {\n      direction: new Vector3(),\n      forward: new Vector3(),\n      right: new Vector3(),\n      worldUp: new Vector3(0, 1, 0),\n    };\n    this.input = {\n      keyboard: new Vector2(0, 0),\n      pointer: new Vector2(0, 0),\n    };\n    this.onKeyboardDown = this.onKeyboardDown.bind(this);\n    this.onKeyboardUp = this.onKeyboardUp.bind(this);\n    this.reset();\n  }\n\n  get canLock() {\n    return this._canLock;\n  }\n\n  set canLock(value) {\n    if (value && !this.pointerlock && pointerlock.available()) {\n      this.pointerlock = pointerlock(this.canvas);\n      this.pointerlock.on('attain', this.onPointerLockAttain.bind(this));\n    }\n    if (!value && this.pointerlock) {\n      this.pointerlock.destroy();\n      delete this.pointerlock;\n    }\n    this._canLock = value;\n  }\n\n  onKeyboardDown({ keyCode, repeat }) {\n    const { input: { keyboard } } = this;\n    if (repeat) return;\n    switch (keyCode) {\n      case 87:\n        keyboard.y = 1;\n        break;\n      case 83:\n        keyboard.y = -1;\n        break;\n      case 65:\n        keyboard.x = -1;\n        break;\n      case 68:\n        keyboard.x = 1;\n        break;\n      default:\n        break;\n    }\n  }\n\n  onKeyboardUp({ keyCode, repeat }) {\n    const { input: { keyboard } } = this;\n    if (repeat) return;\n    switch (keyCode) {\n      case 87:\n      case 83:\n        keyboard.y = 0;\n        break;\n      case 65:\n      case 68:\n        keyboard.x = 0;\n        break;\n      default:\n        break;\n    }\n  }\n\n  onPointerLockAttain(movements) {\n    this.isLocked = true;\n    this.rotation.z = 0;\n    window.addEventListener('keydown', this.onKeyboardDown, false);\n    window.addEventListener('keyup', this.onKeyboardUp, false);\n    movements.on('data', this.onPointerMovement.bind(this));\n    movements.on('close', this.onPointerLockClose.bind(this));\n  }\n\n  onPointerLockClose() {\n    const { input: { keyboard, pointer } } = this;\n    window.removeEventListener('keydown', this.onKeyboardDown);\n    window.removeEventListener('keyup', this.onKeyboardUp);\n    this.isLocked = false;\n    keyboard.set(0, 0);\n    pointer.set(0, 0);\n  }\n\n  onPointerMovement({ dx, dy }) {\n    const { input: { pointer } } = this;\n    pointer.set(dx, dy);\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      isLocked,\n      input: { keyboard, pointer },\n      rotation,\n      position,\n    } = this;\n    if (!isLocked) {\n      return;\n    }\n    if (pointer.x !== 0 || pointer.y !== 0) {\n      const sensitivity = 0.003;\n      rotation.y -= pointer.x * sensitivity;\n      rotation.x -= pointer.y * sensitivity;\n      const PI_2 = Math.PI / 2;\n      rotation.x = Math.max(-PI_2, Math.min(PI_2, rotation.x));\n      pointer.set(0, 0);\n    }\n    if (keyboard.x !== 0 || keyboard.y !== 0) {\n      const {\n        direction,\n        forward,\n        right,\n        worldUp,\n      } = this.aux;\n      this.getWorldDirection(forward);\n      right.crossVectors(forward, worldUp);\n      direction\n        .set(0, 0, 0)\n        .addScaledVector(right, keyboard.x)\n        .addScaledVector(forward, keyboard.y)\n        .normalize();\n      position.addScaledVector(direction, 6 * delta);\n      this.updateMatrixWorld();\n    }\n  }\n\n  reset() {\n    const { position, rotation } = this;\n    position.set(0, 1.25, 0);\n    rotation.set(0, 0, 0);\n    this.lookAt(0, 1.25, -1);\n    this.canLock = false;\n  }\n}\n\nexport default Camera;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n        map: Noise,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Camera from './camera';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.isScreenshot = window.__SCREENSHOT__;\n    this.camera = new Camera({ canvas });\n    this.clock = new Clock();\n    this.fog = new FogExp2(0, 0.0125);\n    this.raycaster = new Raycaster();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetScene();\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__ && !this.isScreenshot) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    camera.onAnimationTick(renderer.animation);\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setFog(color) {\n    const { fog, renderer } = this;\n    fog.color.setHex(color);\n    renderer.setClearColor(fog.color);\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.camera.reset();\n    this.setFog(0x020214);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = this.fog;\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Tweak ThreeJS Fog\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = length(mvPosition);'\n);\n\nexport default Renderer;\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  Realm: {\n    editMetadata: 'Edit metadata',\n    name: 'Name',\n    save: 'Save',\n  },\n  User: {\n    confirmPassword: 'Confirm password',\n    email: 'Email',\n    name: 'Name',\n    signIn: 'Sign-In',\n    signInWithGoogle: 'Sign-In with Google',\n    signOut: 'Sign-Out',\n    password: 'Password',\n    register: 'Create an account',\n  },\n};\n","export default {\n  Realm: {\n    editMetadata: 'Editar metadatos',\n    name: 'Nombre',\n    save: 'Guardar',\n  },\n  User: {\n    confirmPassword: 'Confirmar contraseña',\n    email: 'Email',\n    name: 'Nombre',\n    signIn: 'Iniciar sesión',\n    signInWithGoogle: 'Iniciar sesión con Google',\n    signOut: 'Cerrar sesión',\n    password: 'Contraseña',\n    register: 'Crear una cuenta',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst filter = (\n  state = 'all',\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_SET_FILTER:\n      return action.payload.value;\n    default:\n      return state;\n  }\n};\n\nconst hasLoaded = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return true;\n    case types.REALM_CREATE_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst pagination = (\n  state = {\n    page: 0,\n    pages: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return {\n        ...state,\n        pages: action.payload.pages,\n      };\n    case types.LOBBY_SET_FILTER:\n      return {\n        ...state,\n        page: 0,\n      };\n    case types.LOBBY_SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload.realms;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  filter,\n  hasLoaded,\n  pagination,\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst fog = (\n  state = 0x020214,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_FOG:\n      return action.payload.fog;\n    case types.REALM_RESET:\n      return 0x020214;\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst isCreator = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return !!action.payload.isCreator;\n    case types.REALM_RESET:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isEditingMetadata = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_SHOW_METADATA_POPUP:\n      return true;\n    case types.REALM_HIDE_METADATA_POPUP:\n    case types.REALM_RESET:\n    case types.REALM_UPDATE_METADATA_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  fog,\n  id,\n  isCreator,\n  isEditingMetadata,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isSigningIn = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_SHOW_SESSION_POPUP:\n      return true;\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_HIDE_SESSION_POPUP:\n    case types.USER_REGISTER_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED: {\n      const { profile } = action.payload;\n      const { name } = profile;\n      return {\n        ...profile,\n        firstName: name.split(' ')[0],\n      };\n    }\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  isSigningIn,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Link = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  &:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  @keyframes octocat-wave {\n    0% {\n      transform: rotate(0deg);\n    }\n    20% {\n      transform: rotate(-25deg);\n    }\n    40% {\n      transform: rotate(10deg);\n    }\n    60% {\n      transform: rotate(-25deg);\n    }\n    80% {\n      transform: rotate(10deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst GitHub = () => (\n  <Link\n    href=\"https://github.com/danielesteban/RealmsVR#readme\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      fill=\"#fff\"\n    >\n      <path\n        d=\"M0 0l115 115h15l12 27 108 108V0z\"\n        fill=\"#000\"\n      />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n      />\n    </svg>\n  </Link>\n);\n\nexport default GitHub;\n","import React, { PureComponent } from 'react';\nimport {\n  TiMediaFastForward,\n  TiMediaPause,\n  TiMediaPlay,\n} from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  box-shadow: 0 0 8px rgba(0, 0, 0, .4);\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    box-sizing: border-box;\n    width: 250px;\n    height: 100px;\n    background: rgba(0, 0, 0, .5);\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      font-size: 1.25em;\n      line-height: 1.5em;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nconst Progress = styled.div`\n  height: 3px;\n  margin: 0.5rem 0;\n  background-color: #333;\n  border-radius: 2px;\n  overflow: hidden;\n  > div {\n    height: 100%;\n    background-color: #393;\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #333;\n    border: 1px solid #111;\n    color: #fff;\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    padding: 0.25rem 0;\n    width: 2.5rem;\n    border-radius: 2px;\n    margin-right: 0.125rem;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.next = this.next.bind(this);\n    this.toggle = this.toggle.bind(this);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let iteration = 0; iteration < ((Date.now() % 10) + 1); iteration += 1) {\n      for (let index = tracks.length - 1; index >= 0; index -= 1) {\n        const random = Math.floor(Math.random() * tracks.length);\n        const temp = tracks[index];\n        tracks[index] = tracks[random];\n        tracks[random] = temp;\n      }\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.ontimeupdate = this.onTimeUpdate.bind(this);\n    this.player.onended = this.next;\n    this.player.volume = 0.5;\n    this.state = {\n      isPlaying: false,\n      playhead: 0,\n      track: undefined,\n    };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  onTimeUpdate() {\n    const { player } = this;\n    this.setState({\n      playhead: player.currentTime / player.duration,\n    });\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player, tracks } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({\n          isPlaying: true,\n          playhead: 0,\n          track,\n        });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  toggle() {\n    const { player } = this;\n    if (player.paused) {\n      player.play();\n    } else {\n      player.pause();\n    }\n    this.setState({ isPlaying: !player.paused });\n  }\n\n  render() {\n    const {\n      isPlaying,\n      playhead,\n      track,\n    } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n          <Progress>\n            <div style={{ width: `${playhead * 100}%` }} />\n          </Progress>\n          <Controls>\n            <button\n              type=\"button\"\n              onClick={this.toggle}\n            >\n              {isPlaying ? <TiMediaPause /> : <TiMediaPlay />}\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.next}\n            >\n              <TiMediaFastForward />\n            </button>\n          </Controls>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  TiKey,\n  TiSocialGooglePlusCircular,\n} from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport Popup from '@/components/popup';\nimport {\n  hideSessionPopup as hide,\n  login,\n  loginWithGoogle,\n  register,\n} from '@/actions/user';\n\nconst Tabs = styled.div`\n  display: flex;\n  height: 100%;\n  > a {\n    display: flex;\n    align-items: center;\n    background: #222;\n    padding: 0 1rem;\n    border-left: 1px solid #333;\n    cursor: pointer;\n    &:first-child {\n      border-left: none;\n    }\n    &.active {\n      background: #444;\n      cursor: default;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  .google {\n    display: flex;\n    justify-content: center;\n  }\n  .or {\n    position: relative;\n    width: 100%;\n    border-top: 1px solid #222;\n    margin: 2rem 0;\n    > span {\n      position: absolute;\n      display: block;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n  button {\n    display: flex;\n    align-items: center;\n    border: 1px solid #555;\n    background: #222;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    font-family: inherit;\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: inherit;\n    cursor: pointer;\n    outline: 0;\n    > svg {\n      font-size: 1.5em;\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nconst Form = styled.form`\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  &.active {\n    display: flex;\n  }\n  > label {\n    width: 100%;\n    padding: 0;\n  }\n  > input {\n    box-sizing: border-box;\n    border: 1px solid #333;\n    width: 100%;\n    background: #222;\n    color: inherit;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 2em;\n    padding: 0.5rem;\n    margin: 0 0 1rem;\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onLoginSubmit = this.onLoginSubmit.bind(this);\n    this.onRegisterSubmit = this.onRegisterSubmit.bind(this);\n    this.state = { tab: 'login' };\n  }\n\n  componentWillReceiveProps({ isSigningIn }) {\n    const { isSigningIn: wasSigningIn } = this.props;\n    if (isSigningIn && !wasSigningIn) {\n      this.setState({ tab: 'login' });\n    }\n  }\n\n  onLoginSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { login } = this.props;\n    login({\n      email: form.email.value,\n      password: form.password.value,\n    });\n  }\n\n  onRegisterSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { register } = this.props;\n    if (form.password.value !== form.confirmPassword.value) {\n      return;\n    }\n    register({\n      email: form.email.value,\n      name: form.name.value,\n      password: form.password.value,\n    });\n  }\n\n  render() {\n    const {\n      isSigningIn,\n      hide,\n      loginWithGoogle,\n    } = this.props;\n    const { tab } = this.state;\n    const tabs = (\n      <Tabs>\n        <a\n          className={tab === 'login' ? 'active' : null}\n          onClick={() => this.setState({ tab: 'login' })}\n        >\n          <Translate value=\"User.signIn\" />\n        </a>\n        <a\n          className={tab === 'register' ? 'active' : null}\n          onClick={() => this.setState({ tab: 'register' })}\n        >\n          <Translate value=\"User.register\" />\n        </a>\n      </Tabs>\n    );\n    return (\n      <Popup\n        heading={tabs}\n        isShowing={isSigningIn}\n        hide={hide}\n      >\n        <Content>\n          <Form\n            className={tab === 'login' ? 'active' : null}\n            onSubmit={this.onLoginSubmit}\n          >\n            <label><Translate value=\"User.email\" /></label>\n            <input type=\"email\" name=\"email\" required />\n            <label><Translate value=\"User.password\" /></label>\n            <input type=\"password\" name=\"password\" required />\n            <button\n              type=\"submit\"\n            >\n              <TiKey />\n              <Translate value=\"User.signIn\" />\n            </button>\n          </Form>\n          <Form\n            className={tab === 'register' ? 'active' : null}\n            onSubmit={this.onRegisterSubmit}\n          >\n            <label><Translate value=\"User.name\" /></label>\n            <input type=\"text\" name=\"name\" required />\n            <label><Translate value=\"User.email\" /></label>\n            <input type=\"email\" name=\"email\" required />\n            <label><Translate value=\"User.password\" /></label>\n            <input type=\"password\" name=\"password\" required />\n            <label><Translate value=\"User.confirmPassword\" /></label>\n            <input type=\"password\" name=\"confirmPassword\" required />\n            <button\n              type=\"submit\"\n            >\n              <TiKey />\n              <Translate value=\"User.register\" />\n            </button>\n          </Form>\n          <div className=\"or\">\n            <Translate value=\"User.or\" />\n          </div>\n          <div className=\"google\">\n            <button\n              onClick={loginWithGoogle}\n              type=\"button\"\n            >\n              <TiSocialGooglePlusCircular />\n              <Translate value=\"User.signInWithGoogle\" />\n            </button>\n          </div>\n        </Content>\n      </Popup>\n    );\n  }\n}\n\nSession.propTypes = {\n  isSigningIn: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: {\n      isSigningIn,\n    },\n  }) => ({\n    isSigningIn,\n  }),\n  {\n    hide,\n    login,\n    loginWithGoogle,\n    register,\n  }\n)(Session);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Github from '@/components/github';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    const isScreenshot = window.__SCREENSHOT__;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Music />\n        {!isScreenshot ? <Github /> : null}\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function hideSessionPopup() {\n  return {\n    type: types.USER_HIDE_SESSION_POPUP,\n  };\n}\n\nexport function register({ email, name, password }) {\n  return dispatch => dispatch({\n    type: types.USER_REGISTER,\n    payload: API.fetch({\n      body: {\n        email,\n        name,\n        password,\n      },\n      endpoint: 'user',\n      method: 'PUT',\n    }),\n  }).catch(() => {});\n}\n\nexport function refreshSession() {\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function showSessionPopup() {\n  return {\n    type: types.USER_SHOW_SESSION_POPUP,\n  };\n}\n\nexport function login({ email, password }) {\n  return dispatch => dispatch({\n    type: types.USER_LOGIN,\n    payload: API.fetch({\n      body: {\n        email,\n        password,\n      },\n      endpoint: 'user',\n      method: 'POST',\n    }),\n  }).catch(() => {});\n}\n\nexport function loginWithGoogle() {\n  return (dispatch) => {\n    const w = 512;\n    const h = 512;\n    const left = (window.screen.width / 2) - w / 2;\n    const top = (window.screen.height / 2) - h / 2;\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    const watcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(watcher);\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    const onMessage = ({ origin, data: { session } }) => {\n      if (API.baseURL.indexOf(origin) === 0) {\n        window.removeEventListener('message', onMessage);\n        clearInterval(watcher);\n        if (!session) {\n          return;\n        }\n        dispatch({\n          type: types.USER_LOGIN_FULFILLED,\n          payload: session,\n        });\n      }\n    };\n    window.addEventListener('message', onMessage, false);\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        defines: shader.defines,\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: UniformsUtils.merge([\n          shader.uniforms,\n          { map: { value: Noise } },\n        ]),\n        fog: true,\n        vertexColors: VertexColors,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        map: Noise,\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n    uv,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.attributes.uv) {\n      geometry.attributes.uv.setArray(uv);\n      geometry.attributes.uv.needsUpdate = true;\n    } else {\n      geometry.addAttribute('uv', new BufferAttribute(uv, 2));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n  defines: { USE_MAP: true },\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport {\n  fetch,\n  reset,\n  updateFog,\n  updateVoxels,\n} from '@/actions/realm';\nimport Metadata from '@/components/realm/metadata';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\nimport Renderer from '@/components/renderer';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      fog,\n      history,\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n      updateFog,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    renderer.camera.canLock = !renderer.renderer.vr.enabled;\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n      fog,\n      history,\n      updateFog,\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({\n    geometry: previousGeometry,\n    fog: previousFog,\n    size: previousSize,\n  }) {\n    const { geometry, fog, size } = this.props;\n    const { picker, renderer, voxels } = this;\n    const {\n      isScreenshot,\n      raycaster,\n      room,\n      renderer: { vr },\n    } = renderer;\n    if (fog !== previousFog) {\n      // Update fog\n      renderer.setFog(fog);\n    }\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5 + 0.5,\n        size * 0.5,\n        size * 0.5 + 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n      if (!previousGeometry.index && vr.enabled) {\n        // Pull the player down to the nearest voxel\n        raycaster.ray.origin.copy(room.position);\n        raycaster.ray.direction.set(0, -1, 0);\n        const hit = raycaster.intersectObjects(voxels.intersects)[0];\n        if (hit) {\n          room.position.y = hit.point.y;\n        }\n      }\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        isScreenshot,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.colors.fg,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    if (!isScreenshot && size && camera.canLock) {\n      if (!camera.isLocked) {\n        const { animation: { delta, time } } = renderer;\n        const rotation = Math.sin(time * 0.1) * 0.001;\n        camera.rotateY(rotation);\n        camera.rotateX(-rotation);\n        camera.translateZ(delta * 0.5);\n        camera.updateMatrixWorld();\n      }\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    const { isCreator } = this.props;\n    return isCreator ? (\n      <Metadata />\n    ) : null;\n  }\n}\n\nRealm.propTypes = {\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n    uv: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  fog: PropTypes.number.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isCreator: PropTypes.bool.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateFog: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      fog,\n      isCreator,\n      size,\n    },\n  }) => ({\n    geometry,\n    fog,\n    isCreator,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateFog,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { TiEdit } from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport Popup from '@/components/popup';\nimport {\n  hideMetadataPopup as hide,\n  showMetadataPopup as show,\n  updateMetadata as update,\n} from '@/actions/realm';\n\nconst Toggle = styled.form`\n  position: absolute;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n  .icon {\n    position: absolute;\n    font-size: 2.5rem;\n    top: ${100 / 3}%;\n    left: ${100 / 3}%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nconst Content = styled.div`\n  button {\n    display: flex;\n    align-items: center;\n    border: 1px solid #555;\n    background: #222;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    font-family: inherit;\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: inherit;\n    cursor: pointer;\n    outline: 0;\n    > svg {\n      font-size: 1.5em;\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  > label {\n    width: 100%;\n    padding: 0;\n  }\n  > input {\n    box-sizing: border-box;\n    border: 1px solid #333;\n    width: 100%;\n    background: #222;\n    color: inherit;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 2em;\n    padding: 0.5rem;\n    margin: 0 0 1rem;\n  }\n`;\n\nclass Metadata extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { update } = this.props;\n    update({\n      name: form.name.value,\n    });\n  }\n\n  render() {\n    const {\n      isEditingMetadata,\n      name,\n      hide,\n      show,\n    } = this.props;\n    return (\n      <div>\n        <Toggle\n          onClick={show}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"80\"\n            height=\"80\"\n            viewBox=\"0 0 250 250\"\n            fill=\"#fff\"\n          >\n            <path\n              d=\"M0,250 L250,0 L0,0 Z\"\n              fill=\"#000\"\n            />\n          </svg>\n          <TiEdit className=\"icon\" />\n        </Toggle>\n        <Popup\n          heading={<Translate value=\"Realm.editMetadata\" />}\n          isShowing={isEditingMetadata}\n          hide={hide}\n        >\n          <Content>\n            <Form\n              onSubmit={this.onSubmit}\n            >\n              <label><Translate value=\"Realm.name\" /></label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                defaultValue={name}\n                required\n              />\n              <button\n                type=\"submit\"\n              >\n                <TiEdit />\n                <Translate value=\"Realm.save\" />\n              </button>\n            </Form>\n          </Content>\n        </Popup>\n      </div>\n    );\n  }\n}\n\nMetadata.propTypes = {\n  isEditingMetadata: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  hide: PropTypes.func.isRequired,\n  show: PropTypes.func.isRequired,\n  update: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      isEditingMetadata,\n      name,\n    },\n  }) => ({\n    isEditingMetadata,\n    name,\n  }),\n  {\n    hide,\n    show,\n    update,\n  }\n)(Metadata);\n","import {\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\n\nclass Ground extends Mesh {\n  constructor() {\n    if (\n      !Ground.geometry\n      || !Ground.material\n    ) {\n      Ground.setup();\n    }\n    super(\n      Ground.geometry,\n      Ground.material\n    );\n  }\n\n  static setup() {\n    if (!Ground.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const origin = new Vector3();\n      geometry.vertices.forEach((vertex) => {\n        const distance = Math.floor(vertex.distanceTo(origin)) / 4;\n        const height = Math.floor(distance * distance / 3) / 6;\n        vertex.y = (\n          height * (Math.random() * 0.4 + 0.6)\n          + Math.max(Math.min(-(distance - 1.25), 0), -2)\n        );\n      });\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          const p = geometry.faces[i - 1];\n          const v = [\n            face.a, face.b, face.c,\n            p.a, p.b, p.c,\n          ].map(v => geometry.vertices[v]);\n          const height = v.reduce((avg, v) => (\n            avg + v.y\n          ), 0) / v.length;\n          v.forEach((v) => { v.y = height; });\n          const factor = Math.min(height / 40 + 0.25, 1);\n          face.color.setRGB(factor * 0.5, factor, factor * 0.75);\n          face.color.offsetHSL(\n            Math.random() * 0.03 - 0.01,\n            Math.random() * 0.2,\n            Math.random() * -0.05\n          );\n          p.color.copy(face.color);\n        }\n      });\n      Ground.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Ground.material) {\n      Ground.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Ground;\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function fetchRealms() {\n  return (dispatch, getState) => {\n    const { lobby: { filter, pagination: { page } } } = getState();\n    return dispatch({\n      type: types.LOBBY_FETCH_REALMS,\n      payload: API.fetch({\n        endpoint: `realms/${filter === 'user' ? 'user/' : ''}${page}`,\n      }),\n    });\n  };\n}\n\nexport function setFilter(value) {\n  return {\n    type: types.LOBBY_SET_FILTER,\n    payload: { value },\n  };\n}\n\nexport function setPage(value) {\n  return {\n    type: types.LOBBY_SET_PAGE,\n    payload: { value },\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Picker extends Panel {\n  constructor({\n    anisotropy,\n    fog,\n    history,\n    updateFog,\n  }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.modeButton = {\n      label: 'MODE',\n      x: renderer.width * 0.7,\n      y: renderer.height * 0.85,\n      width: renderer.width * 0.25,\n      height: renderer.height * 0.1,\n      onPointer: () => {\n        this.setMode(\n          this.mode === 'fg' ? 'bg' : 'fg'\n        );\n        this.draw();\n      },\n    };\n    this.buttons = [\n      {\n        label: '« REALMS',\n        x: renderer.width * 0.05,\n        y: renderer.height * 0.85,\n        width: renderer.width * 0.25,\n        height: renderer.height * 0.1,\n        onPointer: () => history.push('/'),\n      },\n      this.modeButton,\n    ];\n    this.colors = {\n      bg: (new Color()).setHex(fog),\n      fg: (new Color()).setHSL(Math.random(), 0.6, 0.8),\n      block: new Color(),\n    };\n    this.setMode('fg');\n    this.updateFog = updateFog;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  draw() {\n    const {\n      block,\n      buttons,\n      colors,\n      context: ctx,\n      mode,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${colors.block.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.25;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.375, renderer.height * 0.85);\n      ctx.fillStyle = `#${colors[mode].getHexString()}`;\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = '#222';\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.fillStyle = '#fff';\n      ctx.font = '700 24px Roboto';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(label, width * 0.5, height * 0.5);\n      ctx.restore();\n    });\n  }\n\n  setMode(mode) {\n    const { colors, modeButton } = this;\n    colors.block.copy(colors[mode]);\n    modeButton.label = mode === 'fg' ? 'FG color' : 'BG color';\n    this.mode = mode;\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      buttons,\n      colors,\n      context: ctx,\n      mode,\n      pointer,\n      strip,\n      updateFog,\n    } = this;\n    super.onPointer(point);\n    [block, strip, ...buttons].forEach((object) => {\n      const {\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      } = object;\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      if (onPointer) {\n        onPointer();\n        return;\n      }\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (object === strip) {\n        colors.block.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      colors[mode].setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      if (mode === 'bg') {\n        updateFog(colors[mode].getHex());\n      }\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport API from '@/services/api';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    _id: id,\n    name,\n    creator,\n    onPointer,\n  }) {\n    super({\n      anisotropy,\n    });\n    this.name = name;\n    this.onPointer = onPointer;\n    this.scale.set(0.3, 0.3, 1);\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (creator) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${creator._id}/photo`;\n      image.onload = () => {\n        this.creator = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n    {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}realm/${id}/screenshot`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      creator,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '40px Roboto';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    if (creator) {\n      ctx.drawImage(\n        creator,\n        0, renderer.height * 0.75,\n        renderer.width * 0.25, renderer.height * 0.25\n      );\n    }\n    ctx.fillText(\n      name,\n      renderer.width * 0.05 + (renderer.width * (creator ? 0.25 : 0.05)),\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass ButtonsPanel extends Panel {\n  constructor({\n    anisotropy,\n  }) {\n    super({\n      anisotropy,\n      width: 256,\n      height: 256,\n    });\n    this.scale.set(0.25, 0.25, 1);\n    this.hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        this.hasLoadedFont = true;\n        this.draw();\n      });\n  }\n\n  draw() {\n    const {\n      buttons,\n      context: ctx,\n    } = this;\n    super.draw();\n    ctx.font = '700 30px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n      isActive,\n      isDisabled,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      if (isDisabled) {\n        ctx.fillStyle = '#555';\n      } else if (isActive) {\n        ctx.fillStyle = '#fff';\n      } else {\n        ctx.fillStyle = '#222';\n      }\n      ctx.strokeStyle = '#333';\n      ctx.fill();\n      ctx.stroke();\n      if (isDisabled) {\n        ctx.fillStyle = '#777';\n      } else if (isActive) {\n        ctx.fillStyle = '#222';\n      } else {\n        ctx.fillStyle = '#fff';\n      }\n      ctx.fillText(\n        label,\n        width * 0.5,\n        height * 0.5\n      );\n      ctx.restore();\n    });\n  }\n\n  onPointer({ isDown, point }) {\n    const { buttons, pointer } = this;\n    if (!isDown) return;\n    super.onPointer(point);\n    buttons\n      .filter(({ isDisabled }) => (!isDisabled))\n      .forEach(({\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      }) => {\n        if (\n          pointer.x < x\n          || pointer.x > x + width\n          || pointer.y < y\n          || pointer.y > y + height\n        ) {\n          return;\n        }\n        onPointer();\n      });\n  }\n}\n\nclass CreateRealm extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    history,\n    createRealm,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.3, 0.3, 1);\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: 'Create Realm',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: () => (\n          createRealm()\n            .then(({ value: slug }) => history.push(`/${slug}`))\n        ),\n      },\n    ];\n  }\n}\n\nclass Pagination extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    page,\n    pages,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: '<',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page > 0) update(this.page - 1);\n        },\n      },\n      {\n        label: '>',\n        x: width * 0.6,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page < this.pages - 1) update(this.page + 1);\n        },\n      },\n    ];\n    this.page = page;\n    this.pages = pages;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      page,\n      pages,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      `${page + 1} / ${pages}`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n  }\n}\n\nclass Session extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isSigningIn,\n    user,\n    signin,\n    signout,\n  }) {\n    super({ anisotropy });\n    this.signin = signin;\n    this.signout = signout;\n    this.updateSession({\n      isSigningIn,\n      user,\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { renderer, signin, signout } = this;\n    const { width, height } = renderer;\n    if (isSigningIn) {\n      this.buttons = [];\n    } else if (!user) {\n      this.buttons = [{\n        label: 'Sign-In',\n        x: width * 0.1,\n        y: height * 0.4,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: signin,\n      }];\n    } else {\n      this.buttons = [{\n        label: 'Sign-Out',\n        x: width * 0.1,\n        y: height * 0.7,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: signout,\n      }];\n    }\n    this.isSigningIn = isSigningIn;\n    this.user = user;\n    delete this.userPhoto;\n    if (user) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${user._id}/photo`;\n      image.onload = () => {\n        this.userPhoto = image;\n        if (this.hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isSigningIn,\n      renderer,\n      user,\n      userPhoto,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    if (isSigningIn) {\n      ctx.fillText(\n        'Remove your',\n        renderer.width * 0.5,\n        renderer.height * 0.25\n      );\n      ctx.fillText(\n        'headset',\n        renderer.width * 0.5,\n        renderer.height * 0.4\n      );\n      ctx.fillText(\n        'And Sign-In',\n        renderer.width * 0.5,\n        renderer.height * 0.6\n      );\n      ctx.fillText(\n        'in your browser',\n        renderer.width * 0.5,\n        renderer.height * 0.75\n      );\n    } else {\n      ctx.fillText(\n        user ? user.firstName : 'Guest',\n        renderer.width * 0.5,\n        renderer.height * 0.2\n      );\n    }\n    if (user && userPhoto) {\n      ctx.drawImage(\n        userPhoto,\n        renderer.width * 0.5 - 40, renderer.height * 0.5 - 50,\n        80, 80\n      );\n    }\n  }\n}\n\nclass Filter extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isAuth,\n    filter,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        id: 'all',\n        label: 'All Realms',\n        x: width * 0.1,\n        y: height * 0.2,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: () => update('all'),\n      },\n      {\n        id: 'user',\n        label: 'Your Realms',\n        x: width * 0.1,\n        y: height * 0.6,\n        width: width * 0.8,\n        height: height * 0.2,\n        isDisabled: !isAuth,\n        onPointer: () => update('user'),\n      },\n    ];\n    this.filter = filter;\n    this.update = update;\n  }\n\n  updateSession({ isAuth }) {\n    this.buttons[1].isDisabled = !isAuth;\n  }\n\n  draw() {\n    const { buttons, filter } = this;\n    buttons.forEach((button) => {\n      button.isActive = button.id === filter;\n    });\n    super.draw();\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({\n    anisotropy,\n    filter,\n    history,\n    isSigningIn,\n    pagination,\n    realms,\n    user,\n    createRealm,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n    this.pagination = this.addPanel(\n      Pagination,\n      {\n        ...pagination,\n        update: setPage,\n      },\n      0, -0.3, 0.13\n    );\n    this.session = this.addPanel(\n      Session,\n      {\n        isSigningIn,\n        user,\n        signin,\n        signout,\n      },\n      -0.3, -0.3, 0.13\n    );\n    this.filter = this.addPanel(\n      Filter,\n      {\n        filter,\n        isAuth: !!user,\n        update: setFilter,\n      },\n      0.3, -0.3, 0.13\n    );\n    this.createRealm = createRealm;\n    this.updateRealms(realms);\n  }\n\n  addPanel(Panel, props, x, y, z) {\n    const { anisotropy, intersects } = this;\n    const panel = new Panel({ ...props, anisotropy });\n    panel.position.set(x, y, z);\n    panel.lookAt(0, 0.5, 1);\n    this.add(panel);\n    const pillar = new Pillar();\n    pillar.position.copy(panel.position);\n    this.add(pillar);\n    intersects.push(panel);\n    return panel;\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  updateFilter(value) {\n    const { filter } = this;\n    filter.filter = value;\n    filter.draw();\n  }\n\n  updatePagination({ page, pages }) {\n    const { pagination } = this;\n    pagination.page = page;\n    pagination.pages = pages;\n    pagination.draw();\n  }\n\n  updateRealms(realms) {\n    const {\n      anisotropy,\n      children,\n      createRealm,\n      filter: { filter },\n      history,\n      pagination,\n    } = this;\n    while (children.length > 6) {\n      const child = children[children.length - 1];\n      if (child.dispose) child.dispose();\n      this.remove(child);\n    }\n    this.intersects.length = 3;\n    const showCreateRealm = filter === 'user' && pagination.page === 0;\n    const count = realms.length + (showCreateRealm ? 1 : 0);\n    let offset = 0.25 + count * -0.25;\n    if (showCreateRealm) {\n      this.addPanel(\n        CreateRealm,\n        {\n          history,\n          createRealm,\n        },\n        offset, 0, 0\n      );\n      offset += 0.5;\n    }\n    realms.forEach((realm, i) => {\n      const panel = this.addPanel(\n        Realm,\n        {\n          ...realm,\n          anisotropy,\n          onPointer: ({ hand, isDown }) => {\n            this.setHover({ hand, realm: panel });\n            if (isDown) {\n              history.push(`/${realm.slug}`);\n            }\n          },\n        },\n        offset + (i * 0.5), 0, 0\n      );\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { filter, session } = this;\n    filter.updateSession({ isAuth: !!user });\n    filter.draw();\n    session.updateSession({ isSigningIn, user });\n    session.draw();\n  }\n}\n\nexport default Menu;\n","import {\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  VertexColors,\n  BufferAttribute,\n  Vector3,\n} from 'three';\n\nclass Starfield extends Points {\n  constructor() {\n    if (\n      !Starfield.geometry\n      || !Starfield.material\n    ) {\n      Starfield.setup();\n    }\n    super(\n      Starfield.geometry,\n      Starfield.material\n    );\n  }\n\n  onBeforeRender({ animation: { time } }) {\n    this.rotation.x = Math.sin(time * 0.01) * 1 / 3;\n  }\n\n  static setup() {\n    if (!Starfield.geometry) {\n      const count = 2048;\n      const radius = 512;\n      const position = new Float32Array(count * 3);\n      const color = new Float32Array(count * 3);\n      const aux = new Vector3();\n      for (let i = 0; i < count * 3; i += 3) {\n        aux\n          .set(\n            Math.random() * 2 - 1,\n            Math.random(),\n            Math.random() * 2 - 1\n          )\n          .normalize()\n          .multiplyScalar(radius);\n        position[i] = aux.x;\n        position[i + 1] = aux.y;\n        position[i + 2] = aux.z;\n        const c = 0.2 + Math.random() * 0.5;\n        color[i] = c - Math.random() * 0.1;\n        color[i + 1] = c - Math.random() * 0.1;\n        color[i + 2] = c - Math.random() * 0.1;\n      }\n      Starfield.geometry = new BufferGeometry();\n      Starfield.geometry.addAttribute('position', new BufferAttribute(position, 3));\n      Starfield.geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (!Starfield.material) {\n      Starfield.material = new PointsMaterial({\n        fog: false,\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Starfield;\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { TiTimes } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, .5);\n`;\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  background: #444;\n  box-shadow: 0 0 32px rgba(0, 0, 0, .5);\n`;\n\nconst Heading = styled.div`\n  background: #111;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 56px;\n  > span {\n    padding: 0 1.5em;\n  }\n  > a {\n    padding: 1rem;\n    cursor: pointer;\n    > svg {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem 0;\n  }\n`;\n\nconst Popup = ({\n  children,\n  heading,\n  isShowing,\n  hide,\n}) => {\n  if (!isShowing) {\n    return null;\n  }\n  return (\n    <Overlay>\n      <Wrapper>\n        <Heading>\n          {heading}\n          <a\n            onClick={hide}\n          >\n            <TiTimes />\n          </a>\n        </Heading>\n        <Content>\n          {children}\n        </Content>\n      </Wrapper>\n    </Overlay>\n  );\n};\n\nPopup.propTypes = {\n  children: PropTypes.node.isRequired,\n  heading: PropTypes.node.isRequired,\n  isShowing: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n};\n\nexport default Popup;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.360be4fe5c7a7121f34a.js\");\n};","import {\n  BoxGeometry,\n  BufferGeometry,\n  CanvasTexture,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({\n    anisotropy,\n    width = 512,\n    height = 512,\n  }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const geometry = new BoxGeometry(1, 1, 0.06);\n      geometry.faces.splice(8, 2);\n      geometry.faces.forEach((face, i) => (\n        face.color.setHex(\n          Math.floor(i / 2) === 4 ? 0x111111 : 0x222222\n        )\n      ));\n      geometry.translate(0, 0, -0.01);\n      const backplate = new Mesh(\n        (new BufferGeometry()).fromGeometry(geometry),\n        new MeshBasicMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  CanvasTexture,\n  NearestFilter,\n  RepeatWrapping,\n} from 'three';\n\nclass Noise extends CanvasTexture {\n  constructor() {\n    const renderer = document.createElement('canvas');\n    const ctx = renderer.getContext('2d');\n    renderer.width = 16;\n    renderer.height = 16;\n    const pixels = ctx.getImageData(0, 0, renderer.width, renderer.height);\n    for (let i = 0; i < pixels.data.length; i += 4) {\n      const light = Math.floor((0.9 + (Math.random() * 0.05)) * 0xFF);\n      pixels.data[i] = light;\n      pixels.data[i + 1] = light;\n      pixels.data[i + 2] = light;\n      pixels.data[i + 3] = 0xFF;\n    }\n    ctx.putImageData(pixels, 0, 0);\n    super(renderer);\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapS = RepeatWrapping;\n    this.wrapT = RepeatWrapping;\n    this.needsUpdate = true;\n  }\n}\n\nexport default new Noise();\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create() {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function hideMetadataPopup() {\n  return {\n    type: types.REALM_HIDE_METADATA_POPUP,\n  };\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function showMetadataPopup() {\n  return {\n    type: types.REALM_SHOW_METADATA_POPUP,\n  };\n}\n\nexport function updateFog(fog) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n      },\n    } = getState();\n    if (isCreator) {\n      // Send update to server\n      API.fetch({\n        body: { fog },\n        endpoint: `realm/${id}/metadata`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_FOG,\n      payload: { fog },\n    });\n  };\n}\n\nexport function updateMetadata({ name }) {\n  return (dispatch, getState) => {\n    const { realm: { id } } = getState();\n    return dispatch({\n      type: types.REALM_UPDATE_METADATA,\n      payload: API.fetch({\n        body: { name },\n        endpoint: `realm/${id}/metadata`,\n        method: 'PUT',\n      }),\n    });\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n        size,\n        voxels: current,\n      },\n    } = getState();\n    // Normalize & 3D wrap voxel position\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    // Randomize the color just a bit\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    // Update the voxels data\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    // Request a geometry generation\n    dispatch(generateGeometry({ size, voxels }));\n    if (isCreator) {\n      // Send update to server\n      const body = new FormData();\n      body.append('voxels', new Blob([voxels.buffer], { type: 'text/plain' }));\n      API.fetch({\n        body,\n        endpoint: `realm/${id}/voxels`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\nexport const LOBBY_SET_FILTER = 'LOBBY/SET_FILTER';\nexport const LOBBY_SET_PAGE = 'LOBBY/SET_PAGE';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_HIDE_METADATA_POPUP = 'REALM/HIDE_METADATA_POPUP';\nexport const REALM_RESET = 'REALM/RESET';\nexport const REALM_SHOW_METADATA_POPUP = 'REALM/SHOW_METADATA_POPUP';\nexport const REALM_UPDATE_FOG = 'REALM/UPDATE_FOG';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_METADATA = 'REALM/UPDATE_METADATA';\nexport const REALM_UPDATE_METADATA_FULFILLED = 'REALM/UPDATE_METADATA_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\n\n// USER\nexport const USER_HIDE_SESSION_POPUP = 'USER/HIDE_SESSION_POPUP';\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SHOW_SESSION_POPUP = 'USER/SHOW_SESSION_POPUP';\nexport const USER_LOGIN = 'USER/LOGIN';\nexport const USER_LOGIN_FULFILLED = 'USER/LOGIN_FULFILLED';\nexport const USER_LOGIN_REJECTED = 'USER/LOGIN_REJECTED';\nexport const USER_REGISTER = 'USER/REGISTER';\nexport const USER_REGISTER_FULFILLED = 'USER/REGISTER_FULFILLED';\nexport const USER_REGISTER_REJECTED = 'USER/REGISTER_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const check = () => {\n              if (document.fonts.check(`1rem ${font}`)) {\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            check();\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0.3)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'REALMS',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n"],"sourceRoot":""}