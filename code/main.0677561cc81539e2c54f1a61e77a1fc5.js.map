{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/actions/user.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/session.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","refreshSession","session","type","types","payload","dispatch","catch","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","realmReducer","geometry","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Hands","_this","hands_classCallCheck","mesh","pointerMesh","setup","_possibleConstructorReturn","_getPrototypeOf","call","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","scale","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","premultiply","matrixWorldNeedsUpdate","pressed","Renderer","props","renderer_classCallCheck","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","bind","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","far","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","window","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","addEventListener","setupVR","animation","delta","getDelta","time","oldTime","update","render","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","react_default","a","createElement","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Wrapper","styled","div","withConfig","displayName","componentId","Session","session_classCallCheck","session_getPrototypeOf","loginWithGoogle","session_assertThisInitialized","onMessage","PureComponent","popupWatcher","removeEventListener","clearInterval","data","indexOf","_this2","screenX","screenY","left","screen","top","win","open","setInterval","postMessage","_this$props","signout","onClick","ti","react_redux_i18n_build","value","propTypes","PropTypes","bool","isRequired","func","connect","_ref3","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","Math","PI","Color","copy","setHex","random","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","document","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","PlaneBufferGeometry","rotateY","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","Realm","onPointer","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","draw","isHover","_get","prototype","font","textAlign","textBaseline","fillText","Menu","history","hover","_this3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","setTimeout","grd","createLinearGradient","addColorStop","Lobby","fetchRealms","onBeforeRender","touches","Touches","filtered","target","on","onPointerDown","page","previousRealms","disable","_this$renderer","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","arrayOf","shape","string","instanceOf","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","Promise","resolve","_ref2$data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","instance","updateMatrix","index","normal","attributes","setArray","addAttribute","BufferAttribute","setIndex","computeBoundingSphere","match","params","picker","head","intersects","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","updateMatrixWorld","Float32Array","number","_ref2$realm","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","floor","randomized","round","r","g","b","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","components_session","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.8081dbd5bfb46ca19461.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.raycaster.far = 32;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n    } = this;\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.6, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport { TiEject, TiSocialGooglePlus } from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport { refreshSession, signout } from '@/actions/user';\nimport API from '@/services/api';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  > button {\n    display: flex;\n    align-items: center;\n    outline: 0;\n    font-family: inherit;\n    font-size: 1.2rem;\n    font-weight: 700;\n    width: 150px;\n    padding: 0.5rem 1rem;\n    > svg {\n      margin-right: 0.5rem;\n    }\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.loginWithGoogle = this.loginWithGoogle.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { popupWatcher } = this;\n    if (popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n    }\n  }\n\n  onMessage({ origin, data: { session } }) {\n    const { popupWatcher } = this;\n    const { refreshSession } = this.props;\n    if (API.baseURL.indexOf(origin) === 0) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(popupWatcher);\n      delete this.popupWatcher;\n      if (session) {\n        refreshSession(session);\n      }\n    }\n  }\n\n  loginWithGoogle({ screenX, screenY }) {\n    const w = 512;\n    const h = 512;\n    const left = (screenX || (window.screen.width / 2)) - w;\n    const top = (screenY || (window.screen.height / 2));\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    if (this.popupWatcher) {\n      window.removeEventListener('message', this.onMessage);\n      clearInterval(this.popupWatcher);\n    }\n    this.popupWatcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(this.popupWatcher);\n        delete this.popupWatcher;\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    window.addEventListener('message', this.onMessage, false);\n  }\n\n  render() {\n    const { isAuth, signout } = this.props;\n    return (\n      <Wrapper>\n        {isAuth ? (\n          <button\n            type=\"button\"\n            onClick={signout}\n          >\n            <TiEject />\n            <Translate value=\"User.signOut\" />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.loginWithGoogle}\n          >\n            <TiSocialGooglePlus />\n            <Translate value=\"User.signIn\" />\n          </button>\n        )}\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  refreshSession: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: { isAuth },\n  }) => ({\n    isAuth,\n  }),\n  {\n    refreshSession,\n    signout,\n  }\n)(Session);\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x555555);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  Object3D,\n} from 'three';\nimport Panel from '@/components/panel';\n\nclass Realm extends Panel {\n  constructor({ anisotropy, name, onPointer }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    this.draw();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = isHover ? '#333' : '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '80px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.position.set(0, 1.25, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.25, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    setTimeout(() => this.draw(), 250);\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '60px Roboto';\n    ctx.fillStyle = '#bbb';\n    ctx.fillText(\n      'dani@gatunes © 2019',\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.children)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.children)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor() {\n    super();\n    this.geometry = new BufferGeometry();\n    this.material = new MeshBasicMaterial({\n      vertexColors: VertexColors,\n    });\n    this.visible = false;\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const { children, geometry, material } = this;\n    const radius = 8;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    // TODO:\n    // This should really use an InstancedBufferGeometry\n    // But I need to figure out how to keep the raycasting\n    // and fustrum culling functionality\n    // Maybe I'll use an hybrid approach... Like:\n    // The closest chunks as full meshes and the further chunks instanced\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const instance = new Mesh(\n            geometry,\n            material\n          );\n          instance.matrixAutoUpdate = false;\n          instance.position.set(x * size, y * size, z * size);\n          instance.updateMatrix();\n          this.add(instance);\n        }\n      }\n    }\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    this.visible = true;\n  }\n}\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels();\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.children,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.cdf4d0fc1592aac67598.js\");\n};"],"sourceRoot":""}