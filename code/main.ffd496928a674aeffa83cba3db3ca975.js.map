{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/session.jsx","webpack:///./src/actions/user.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/lobby/ground.js","webpack:///./src/components/panel.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/starfield.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["LOBBY_FETCH_REALMS_FULFILLED","LOBBY_SET_FILTER","LOBBY_SET_PAGE","REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_HIDE_SESSION_POPUP","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SHOW_SESSION_POPUP","USER_LOGIN_FULFILLED","USER_REGISTER_FULFILLED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","User","signIn","signInWithGoogle","signOut","es","availableLocales","Object","keys","translations","forEach","locale","merge","lobbyReducer","combineReducers","filter","state","arguments","length","undefined","action","type","types","payload","value","hasLoaded","pagination","page","pages","_objectSpread","realms","realmReducer","geometry","id","_id","isCreator","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","isSigningIn","profile","user_objectSpread","firstName","substr","indexOf","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Wrapper","styled","div","withConfig","displayName","componentId","Music","props","_this","music_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","player","document","createElement","onended","next","bind","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","window","removeEventListener","play","addEventListener","paused","pause","src","_this3","clientId","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","react_default","a","href","rel","target","alt","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","scale","premultiply","matrixWorldNeedsUpdate","pressed","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","Renderer","renderer_classCallCheck","renderer_possibleConstructorReturn","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Popup","Heading","Content","Session","hide","loginWithGoogle","session_Wrapper","react_redux_i18n_build","onClick","ti","className","propTypes","PropTypes","bool","isRequired","func","connect","dispatch","left","screen","w","top","h","win","open","watcher","setInterval","postMessage","clearInterval","onMessage","data","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","Promise","resolve","_ref2$data","generateGeometry","generate","Ground","ground_classCallCheck","ground_possibleConstructorReturn","ground_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","_ref$width","_ref$height","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","splice","side","DoubleSide","PlaneBufferGeometry","fonts","Fonts","fonts_classCallCheck","loaded","Array","isArray","all","font","check","setTimeout","Pillar","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","CylinderGeometry","Realm","onPointer","screenshot","_this$renderer","vignette","createRadialGradient","addColorStop","hasLoadedFont","waitUntilLoaded","draw","image","Image","onload","isHover","_get","prototype","drawImage","textAlign","textBaseline","fillText","ButtonsPanel","_ref3","label","isActive","isDisabled","save","beginPath","rect","strokeStyle","fill","stroke","restore","isDown","_ref4","_ref5","_ref6","CreateRealm","_ref7","history","createRealm","_this3$renderer","_ref8","slug","push","Pagination","_ref9","_this4","_this4$renderer","_ref10","_this5","signin","signout","updateSession","_this6","_ref11","userPhoto","crossOrigin","Filter","_ref12","_this7","_this7$renderer","_ref13","button","Menu","_ref14","_this8","setFilter","setPage","hover","intersects","addPanel","menu_objectSpread","updateRealms","z","panel","lookAt","pillar","_ref15","_ref16","_this9","remove","showCreateRealm","offset","_ref17","setHover","_ref18","Starfield","starfield_classCallCheck","starfield_possibleConstructorReturn","starfield_getPrototypeOf","Points","Float32Array","count","aux","normalize","multiplyScalar","c","addAttribute","BufferAttribute","PointsMaterial","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","shadowColor","shadowBlur","__VERSION__","Lobby","_this$props","fetchRealms","onBeforeRender","touches","Touches","filtered","on","onPointerDown","previousFilter","wasSigningIn","previousPagination","previousRealms","previousUser","_this$props2","filterHasUpdated","updateFilter","updatePagination","disable","hit","intersectObjects","distance","object","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","defaultProps","string","shape","number","arrayOf","instanceOf","_ref4$lobby","_ref4$user","getState","_getState$lobby","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_possibleConstructorReturn","picker_getPrototypeOf","block","strip","blockColor","picker_get","getHexString","grdWhite","grdBlack","imageData","getImageData","goBack","Voxels","_ref$instanced","instanced","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","shader","InstancedBufferGeometry","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","uniforms","frustum","Frustum","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","sort","_instance$chunk","frustumCulled","attributes","setArray","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","array","normal","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","UniformsUtils","match","params","picker","extensions","head","previousGeometry","previousSize","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","scenes_realm_slicedToArray","axis","sin","rotateY","translateZ","_ref2$realm","realm_objectSpread","_getState$realm","realm_slicedToArray","randomized","r","g","b","append","Blob","buffer","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","music","components_session","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.23319d9feb30152e6396.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\nexport const LOBBY_SET_FILTER = 'LOBBY/SET_FILTER';\nexport const LOBBY_SET_PAGE = 'LOBBY/SET_PAGE';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_HIDE_SESSION_POPUP = 'USER/HIDE_SESSION_POPUP';\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SHOW_SESSION_POPUP = 'USER/SHOW_SESSION_POPUP';\nexport const USER_LOGIN = 'USER/LOGIN';\nexport const USER_LOGIN_FULFILLED = 'USER/LOGIN_FULFILLED';\nexport const USER_LOGIN_REJECTED = 'USER/LOGIN_REJECTED';\nexport const USER_REGISTER = 'USER/REGISTER';\nexport const USER_REGISTER_FULFILLED = 'USER/REGISTER_FULFILLED';\nexport const USER_REGISTER_REJECTED = 'USER/REGISTER_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  User: {\n    signIn: 'Sign-In',\n    signInWithGoogle: 'Sign-In with Google',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  User: {\n    signIn: 'Iniciar sesión',\n    signInWithGoogle: 'Iniciar sesión con Google',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst filter = (\n  state = 'all',\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_SET_FILTER:\n      return action.payload.value;\n    default:\n      return state;\n  }\n};\n\nconst hasLoaded = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return true;\n    case types.REALM_CREATE_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst pagination = (\n  state = {\n    page: 0,\n    pages: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return {\n        ...state,\n        pages: action.payload.pages,\n      };\n    case types.LOBBY_SET_FILTER:\n      return {\n        ...state,\n        page: 0,\n      };\n    case types.LOBBY_SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload.realms;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  filter,\n  hasLoaded,\n  pagination,\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst isCreator = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return !!action.payload.isCreator;\n    case types.REALM_RESET:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  isCreator,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isSigningIn = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_SHOW_SESSION_POPUP:\n      return true;\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_HIDE_SESSION_POPUP:\n    case types.USER_REGISTER_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED: {\n      const { profile } = action.payload;\n      const { name } = profile;\n      return {\n        ...profile,\n        firstName: name.substr(0, name.indexOf(' ')),\n      };\n    }\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  isSigningIn,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(80, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.25, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.0125);\n    this.scene.fog.color.setRGB(0.01, 0.01, 0.08);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  TiSocialGooglePlusCircular,\n  TiTimes,\n} from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\n\nimport styled from 'styled-components';\nimport {\n  hideSessionPopup as hide,\n  loginWithGoogle,\n} from '@/actions/user';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, .5);\n`;\n\nconst Popup = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  height: 512px;\n  background: #444;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Heading = styled.div`\n  background: #111;\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  > a > svg {\n    font-size: 1.5em;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  .google {\n    display: flex;\n    justify-content: center;\n    padding: 1rem 0;\n    > button {\n      display: flex;\n      align-items: center;\n      border: 1px solid #555;\n      background: #222;\n      padding: 1rem;\n      font-family: inherit;\n      font-weight: 700;\n      font-size: 1.5rem;\n      color: inherit;\n      cursor: pointer;\n      outline: 0;\n      > svg {\n        font-size: 1.5em;\n        margin-right: 0.5rem;\n      }\n    }\n  }\n`;\n\nconst Session = ({\n  isSigningIn,\n  hide,\n  loginWithGoogle,\n}) => {\n  if (!isSigningIn) {\n    return null;\n  }\n  return (\n    <Wrapper>\n      <Popup>\n        <Heading>\n          <Translate value=\"User.signIn\" />\n          <a\n            onClick={hide}\n          >\n            <TiTimes />\n          </a>\n        </Heading>\n        <Content>\n          <div className=\"google\">\n            <button\n              onClick={loginWithGoogle}\n              type=\"button\"\n            >\n              <TiSocialGooglePlusCircular />\n              <Translate value=\"User.signInWithGoogle\" />\n            </button>\n          </div>\n        </Content>\n      </Popup>\n    </Wrapper>\n  );\n};\n\nSession.propTypes = {\n  isSigningIn: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: {\n      isSigningIn,\n    },\n  }) => ({\n    isSigningIn,\n  }),\n  {\n    hide,\n    loginWithGoogle,\n  }\n)(Session);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function hideSessionPopup() {\n  return {\n    type: types.USER_HIDE_SESSION_POPUP,\n  };\n}\n\nexport function refreshSession() {\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function showSessionPopup() {\n  return {\n    type: types.USER_SHOW_SESSION_POPUP,\n  };\n}\n\nexport function login({ user, password }) {\n  return dispatch => dispatch({\n    type: types.USER_LOGIN,\n    payload: API.fetch({\n      body: {\n        user,\n        password,\n      },\n      endpoint: 'user',\n      method: 'POST',\n    }),\n  }).catch(() => {});\n}\n\nexport function loginWithGoogle() {\n  return (dispatch) => {\n    const w = 512;\n    const h = 512;\n    const left = (window.screen.width / 2) - w / 2;\n    const top = (window.screen.height / 2) - h / 2;\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    const watcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(watcher);\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    const onMessage = ({ origin, data: { session } }) => {\n      if (API.baseURL.indexOf(origin) === 0) {\n        window.removeEventListener('message', onMessage);\n        clearInterval(watcher);\n        if (!session) {\n          return;\n        }\n        dispatch({\n          type: types.USER_LOGIN_FULFILLED,\n          payload: session,\n        });\n      }\n    };\n    window.addEventListener('message', onMessage, false);\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create() {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n        size,\n        voxels: current,\n      },\n    } = getState();\n    // Normalize & 3D wrap voxel position\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    // Randomize the color just a bit\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    // Update the voxels data\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    // Request a geometry generation\n    dispatch(generateGeometry({ size, voxels }));\n    if (isCreator) {\n      // Send update to server\n      const body = new FormData();\n      body.append('voxels', new Blob([voxels.buffer], { type: 'text/plain' }));\n      API.fetch({\n        body,\n        endpoint: `realm/${id}/voxels`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Ground extends Mesh {\n  constructor() {\n    if (\n      !Ground.geometry\n      || !Ground.material\n    ) {\n      Ground.setup();\n    }\n    super(\n      Ground.geometry,\n      Ground.material\n    );\n  }\n\n  static setup() {\n    if (!Ground.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Ground.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Ground.material) {\n      Ground.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Ground;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  CanvasTexture,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({\n    anisotropy,\n    width = 512,\n    height = 512,\n  }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const geometry = new BoxGeometry(1, 1, 0.06);\n      geometry.faces.splice(8, 2);\n      geometry.faces.forEach((face, i) => (\n        face.color.setHex(\n          Math.floor(i / 2) === 4 ? 0x111111 : 0x222222\n        )\n      ));\n      geometry.translate(0, 0, -0.01);\n      const backplate = new Mesh(\n        (new BufferGeometry()).fromGeometry(geometry),\n        new MeshBasicMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const check = () => {\n              if (document.fonts.check(`1rem ${font}`)) {\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            check();\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport API from '@/services/api';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    name,\n    onPointer,\n    screenshot,\n  }) {\n    super({\n      anisotropy,\n    });\n    this.name = name;\n    this.onPointer = onPointer;\n    this.scale.set(0.3, 0.3, 1);\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (screenshot) {\n      const image = new Image();\n      image.src = `data:image/jpeg;base64,${screenshot}`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '700 60px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass ButtonsPanel extends Panel {\n  constructor({\n    anisotropy,\n  }) {\n    super({\n      anisotropy,\n      width: 256,\n      height: 256,\n    });\n    this.scale.set(0.25, 0.25, 1);\n    this.hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        this.hasLoadedFont = true;\n        this.draw();\n      });\n  }\n\n  draw() {\n    const {\n      buttons,\n      context: ctx,\n    } = this;\n    super.draw();\n    ctx.font = '700 30px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n      isActive,\n      isDisabled,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      if (isDisabled) {\n        ctx.fillStyle = '#555';\n      } else if (isActive) {\n        ctx.fillStyle = '#fff';\n      } else {\n        ctx.fillStyle = '#222';\n      }\n      ctx.strokeStyle = '#333';\n      ctx.fill();\n      ctx.stroke();\n      if (isDisabled) {\n        ctx.fillStyle = '#777';\n      } else if (isActive) {\n        ctx.fillStyle = '#222';\n      } else {\n        ctx.fillStyle = '#fff';\n      }\n      ctx.fillText(\n        label,\n        width * 0.5,\n        height * 0.5\n      );\n      ctx.restore();\n    });\n  }\n\n  onPointer({ isDown, point }) {\n    const { buttons, pointer } = this;\n    if (!isDown) return;\n    super.onPointer(point);\n    buttons\n      .filter(({ isDisabled }) => (!isDisabled))\n      .forEach(({\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      }) => {\n        if (\n          pointer.x < x\n          || pointer.x > x + width\n          || pointer.y < y\n          || pointer.y > y + height\n        ) {\n          return;\n        }\n        onPointer();\n      });\n  }\n}\n\nclass CreateRealm extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    history,\n    createRealm,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.3, 0.3, 1);\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: 'Create Realm',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: () => (\n          createRealm()\n            .then(({ value: slug }) => history.push(`/${slug}`))\n        ),\n      },\n    ];\n  }\n}\n\nclass Pagination extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    page,\n    pages,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: '<',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page > 0) update(this.page - 1);\n        },\n      },\n      {\n        label: '>',\n        x: width * 0.6,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page < this.pages - 1) update(this.page + 1);\n        },\n      },\n    ];\n    this.page = page;\n    this.pages = pages;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      page,\n      pages,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      `${page + 1} / ${pages}`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n  }\n}\n\nclass Session extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isSigningIn,\n    user,\n    signin,\n    signout,\n  }) {\n    super({ anisotropy });\n    this.signin = signin;\n    this.signout = signout;\n    this.updateSession({\n      isSigningIn,\n      user,\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { renderer, signin, signout } = this;\n    const { width, height } = renderer;\n    if (isSigningIn) {\n      this.buttons = [];\n    } else if (!user) {\n      this.buttons = [{\n        label: 'Sign-In',\n        x: width * 0.1,\n        y: height * 0.4,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: signin,\n      }];\n    } else {\n      this.buttons = [{\n        label: 'Sign-Out',\n        x: width * 0.1,\n        y: height * 0.7,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: signout,\n      }];\n    }\n    this.isSigningIn = isSigningIn;\n    this.user = user;\n    delete this.userPhoto;\n    if (user) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${user._id}/photo`;\n      image.onload = () => {\n        this.userPhoto = image;\n        if (this.hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isSigningIn,\n      renderer,\n      user,\n      userPhoto,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    if (isSigningIn) {\n      ctx.fillText(\n        'Remove your',\n        renderer.width * 0.5,\n        renderer.height * 0.25\n      );\n      ctx.fillText(\n        'headset',\n        renderer.width * 0.5,\n        renderer.height * 0.4\n      );\n      ctx.fillText(\n        'And Sign-In',\n        renderer.width * 0.5,\n        renderer.height * 0.6\n      );\n      ctx.fillText(\n        'in your browser',\n        renderer.width * 0.5,\n        renderer.height * 0.75\n      );\n    } else {\n      ctx.fillText(\n        user ? user.firstName : 'Guest',\n        renderer.width * 0.5,\n        renderer.height * 0.2\n      );\n    }\n    if (user && userPhoto) {\n      ctx.drawImage(\n        userPhoto,\n        renderer.width * 0.5 - 40, renderer.height * 0.5 - 50,\n        80, 80\n      );\n    }\n  }\n}\n\nclass Filter extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isAuth,\n    filter,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        id: 'all',\n        label: 'All Realms',\n        x: width * 0.1,\n        y: height * 0.2,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: () => update('all'),\n      },\n      {\n        id: 'user',\n        label: 'Your Realms',\n        x: width * 0.1,\n        y: height * 0.6,\n        width: width * 0.8,\n        height: height * 0.2,\n        isDisabled: !isAuth,\n        onPointer: () => update('user'),\n      },\n    ];\n    this.filter = filter;\n    this.update = update;\n  }\n\n  updateSession({ isAuth }) {\n    this.buttons[1].isDisabled = !isAuth;\n  }\n\n  draw() {\n    const { buttons, filter } = this;\n    buttons.forEach((button) => {\n      button.isActive = button.id === filter;\n    });\n    super.draw();\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({\n    anisotropy,\n    filter,\n    history,\n    isSigningIn,\n    pagination,\n    realms,\n    user,\n    createRealm,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n    this.pagination = this.addPanel(\n      Pagination,\n      {\n        ...pagination,\n        update: setPage,\n      },\n      0, -0.3, 0.13\n    );\n    this.session = this.addPanel(\n      Session,\n      {\n        isSigningIn,\n        user,\n        signin,\n        signout,\n      },\n      -0.3, -0.3, 0.13\n    );\n    this.filter = this.addPanel(\n      Filter,\n      {\n        filter,\n        isAuth: !!user,\n        update: setFilter,\n      },\n      0.3, -0.3, 0.13\n    );\n    this.createRealm = createRealm;\n    this.updateRealms(realms);\n  }\n\n  addPanel(Panel, props, x, y, z) {\n    const { anisotropy, intersects } = this;\n    const panel = new Panel({ ...props, anisotropy });\n    panel.position.set(x, y, z);\n    panel.lookAt(0, 0.5, 1);\n    this.add(panel);\n    const pillar = new Pillar();\n    pillar.position.copy(panel.position);\n    this.add(pillar);\n    intersects.push(panel);\n    return panel;\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  updateFilter(value) {\n    const { filter } = this;\n    filter.filter = value;\n    filter.draw();\n  }\n\n  updatePagination({ page, pages }) {\n    const { pagination } = this;\n    pagination.page = page;\n    pagination.pages = pages;\n    pagination.draw();\n  }\n\n  updateRealms(realms) {\n    const {\n      anisotropy,\n      children,\n      createRealm,\n      filter: { filter },\n      history,\n      pagination,\n    } = this;\n    while (children.length > 6) {\n      this.remove(children[children.length - 1]);\n    }\n    this.intersects.length = 3;\n    const showCreateRealm = filter === 'user' && pagination.page === 0;\n    const count = realms.length + (showCreateRealm ? 1 : 0);\n    let offset = 0.25 + count * -0.25;\n    if (showCreateRealm) {\n      this.addPanel(\n        CreateRealm,\n        {\n          history,\n          createRealm,\n        },\n        offset, 0, 0\n      );\n      offset += 0.5;\n    }\n    realms.forEach((realm, i) => {\n      const panel = this.addPanel(\n        Realm,\n        {\n          ...realm,\n          anisotropy,\n          onPointer: ({ hand, isDown }) => {\n            this.setHover({ hand, realm: panel });\n            if (isDown) {\n              history.push(`/${realm.slug}`);\n            }\n          },\n        },\n        offset + (i * 0.5), 0, 0\n      );\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { filter, session } = this;\n    filter.updateSession({ isAuth: !!user });\n    filter.draw();\n    session.updateSession({ isSigningIn, user });\n    session.draw();\n  }\n}\n\nexport default Menu;\n","import {\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  VertexColors,\n  BufferAttribute,\n  Vector3,\n} from 'three';\n\nclass Starfield extends Points {\n  constructor() {\n    if (\n      !Starfield.geometry\n      || !Starfield.material\n    ) {\n      Starfield.setup();\n    }\n    super(\n      Starfield.geometry,\n      Starfield.material\n    );\n  }\n\n  static setup() {\n    if (!Starfield.geometry) {\n      const count = 2048;\n      const radius = 512;\n      const position = new Float32Array(count * 3);\n      const color = new Float32Array(count * 3);\n      const aux = new Vector3();\n      for (let i = 0; i < count * 3; i += 3) {\n        aux\n          .set(\n            Math.random() * 2 - 1,\n            Math.random(),\n            Math.random() * 2 - 1\n          )\n          .normalize()\n          .multiplyScalar(radius);\n        position[i] = aux.x;\n        position[i + 1] = aux.y;\n        position[i + 2] = aux.z;\n        const c = 0.2 + Math.random() * 0.5;\n        color[i] = c - Math.random() * 0.1;\n        color[i + 1] = c - Math.random() * 0.1;\n        color[i + 2] = c - Math.random() * 0.1;\n      }\n      Starfield.geometry = new BufferGeometry();\n      Starfield.geometry.addAttribute('position', new BufferAttribute(position, 3));\n      Starfield.geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (!Starfield.material) {\n      Starfield.material = new PointsMaterial({\n        fog: false,\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Starfield;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0.3)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'REALMS',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport {\n  fetchRealms,\n  setFilter,\n  setPage,\n} from '@/actions/lobby';\nimport {\n  create as createRealm,\n} from '@/actions/realm';\nimport { showSessionPopup as signin, signout } from '@/actions/user';\nimport Ground from '@/components/lobby/ground';\nimport Menu from '@/components/lobby/menu';\nimport Starfield from '@/components/lobby/starfield';\nimport Title from '@/components/lobby/title';\nimport Renderer from '@/components/renderer';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      filter,\n      hasLoaded,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      renderer: { current: renderer },\n      createRealm,\n      fetchRealms,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Ground());\n    scene.add(new Starfield());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      filter,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      createRealm,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    if (!hasLoaded) {\n      // Fetch realms\n      fetchRealms();\n    }\n  }\n\n  componentDidUpdate({\n    filter: previousFilter,\n    isSigningIn: wasSigningIn,\n    pagination: previousPagination,\n    realms: previousRealms,\n    user: previousUser,\n  }) {\n    const {\n      filter,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      fetchRealms,\n      setFilter,\n    } = this.props;\n    const { menu } = this;\n    const filterHasUpdated = filter !== previousFilter;\n    if (\n      filterHasUpdated\n      || pagination.page !== previousPagination.page\n    ) {\n      // Fetch realms\n      fetchRealms();\n    }\n    if (filterHasUpdated) {\n      // Update filter\n      menu.updateFilter(filter);\n    }\n    if (isSigningIn !== wasSigningIn) {\n      // Update Session\n      menu.updateSession({ isSigningIn });\n    }\n    if (pagination !== previousPagination) {\n      // Update pagination\n      menu.updatePagination(pagination);\n    }\n    if (realms !== previousRealms) {\n      // Update realms\n      menu.updateRealms(realms);\n    }\n    if (user !== previousUser) {\n      // Update Session\n      menu.updateSession({ user });\n      if (!user && filter === 'user') {\n        setFilter('all');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n        point,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      props: {\n        isSigningIn,\n      },\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    if (isSigningIn) {\n      return;\n    }\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n      point: hit.point,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.defaultProps = {\n  user: undefined,\n};\n\nLobby.propTypes = {\n  filter: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  user: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  createRealm: PropTypes.func.isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n  signin: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      filter,\n      hasLoaded,\n      pagination,\n      realms,\n    },\n    user: {\n      isAuth,\n      isSigningIn,\n      profile: user,\n    },\n  }) => ({\n    filter,\n    hasLoaded,\n    isSigningIn,\n    pagination,\n    realms,\n    user: isAuth ? user : undefined,\n  }),\n  {\n    createRealm,\n    fetchRealms,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function fetchRealms() {\n  return (dispatch, getState) => {\n    const { lobby: { filter, pagination: { page } } } = getState();\n    return dispatch({\n      type: types.LOBBY_FETCH_REALMS,\n      payload: API.fetch({\n        endpoint: `realms/${filter === 'user' ? 'user/' : ''}${page}`,\n      }),\n    });\n  };\n}\n\nexport function setFilter(value) {\n  return {\n    type: types.LOBBY_SET_FILTER,\n    payload: { value },\n  };\n}\n\nexport function setPage(value) {\n  return {\n    type: types.LOBBY_SET_PAGE,\n    payload: { value },\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Picker extends Panel {\n  constructor({ anisotropy, history }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.menu = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.85,\n      width: renderer.width * 0.25,\n      height: renderer.height * 0.1,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.history = history;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      menu,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    ctx.save();\n    ctx.translate(menu.x, menu.y);\n    ctx.fillStyle = '#222';\n    ctx.strokeStyle = '#333';\n    ctx.beginPath();\n    ctx.rect(0, 0, menu.width, menu.height);\n    ctx.fill();\n    ctx.stroke();\n    ctx.fillStyle = '#fff';\n    ctx.font = '700 24px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('« REALMS', menu.width * 0.5, menu.height * 0.5);\n    ctx.restore();\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.25;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.375, renderer.height * 0.85);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      history,\n      menu,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip, menu].forEach((object) => {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = object;\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      if (object === menu) {\n        history.goBack();\n        return;\n      }\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (object === strip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: shader.uniforms,\n        vertexColors: VertexColors,\n        fog: true,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      history,\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n      history,\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const {\n      renderer: { raycaster, room, renderer: { vr } },\n      picker,\n      voxels,\n    } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n      if (!previousGeometry.index && vr.enabled) {\n        // Pull the player down to the nearest voxel\n        raycaster.ray.origin.copy(room.position);\n        raycaster.ray.direction.set(0, -1, 0);\n        const hit = raycaster.intersectObjects(voxels.intersects)[0];\n        if (hit) {\n          room.position.y = hit.point.y;\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size && animation.time > 1) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Music />\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.1c22d4f82f07e694ad4e.js\");\n};"],"sourceRoot":""}