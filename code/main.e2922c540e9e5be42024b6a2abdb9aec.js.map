{"version":3,"sources":["webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/github.jsx","webpack:///./src/components/music.jsx","webpack:///./src/components/session.jsx","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/scenes/lobby.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/components/lobby/ground.js","webpack:///./src/actions/lobby.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/starfield.js","webpack:///./src/scenes/realm.js","webpack:///./src/services/api.js","webpack:///./src/services/mesher.worker.js","webpack:///./src/components/panel.js","webpack:///./src/textures/noise.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/actions/types.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/title.js"],"names":["Hands","_this","_classCallCheck","this","mesh","pointerMesh","setup","_possibleConstructorReturn","_getPrototypeOf","call","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","children","gamepads","navigator","getGamepads","forEach","length","gamepad","id","startsWith","pose","updateHand","_ref","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","scale","premultiply","matrixWorldNeedsUpdate","pressed","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","geometry","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","map","Noise","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","Renderer","props","renderer_classCallCheck","renderer_possibleConstructorReturn","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","bind","renderer_assertThisInitialized","onResize","Component","current","isScreenshot","window","__SCREENSHOT__","camera","PerspectiveCamera","clock","Clock","fog","FogExp2","Raycaster","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setAnimationLoop","addEventListener","room","hands","resetCamera","resetScene","setupVR","scene","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","setHex","setClearColor","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","then","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","setFog","Scene","react_default","a","createElement","ref","ShaderChunk","fog_vertex","replace","locales","en","User","confirmPassword","email","name","signIn","signInWithGoogle","signOut","password","register","es","availableLocales","Object","keys","translations","locale","merge","lobbyReducer","combineReducers","filter","state","arguments","undefined","action","type","types","payload","value","hasLoaded","pagination","page","pages","_objectSpread","realms","realmReducer","_id","isCreator","size","voxels","Uint32Array","sessionKey","storedSession","JSON","parse","localStorage","getItem","API","setAuthorization","token","userReducer","isAuth","isSigningIn","profile","user_objectSpread","firstName","split","setItem","stringify","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Link","styled","withConfig","displayName","componentId","GitHub","href","rel","target","xmlns","viewBox","fill","d","className","Wrapper","div","Music","tracks","music_toConsumableArray","iteration","Date","now","index","random","Math","floor","temp","player","document","onended","next","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","removeEventListener","play","paused","pause","src","_this3","clientId","fetch","concat","res","json","Error","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","alt","Popup","Heading","Content","Form","form","Session","session_classCallCheck","session_possibleConstructorReturn","session_getPrototypeOf","onLoginSubmit","session_assertThisInitialized","onRegisterSubmit","tab","e","preventDefault","login","_this$props","hide","loginWithGoogle","session_Wrapper","onClick","react_redux_i18n_build","ti","onSubmit","required","propTypes","PropTypes","bool","isRequired","func","connect","Scenes","react_router","path","Lobby","Realm","exact","key","_extends","to","shape","instanceOf","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","music","github","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","dispatch","loadTranslations","setLocale","getState","refreshSession","history","createBrowserHistory","basename","__BASENAME__","location","hash","mount","getElementById","react_redux_es","layout","__webpack_require__","__webpack_exports__","hideSessionPopup","showSessionPopup","signout","_types__WEBPACK_IMPORTED_MODULE_1__","_services_api__WEBPACK_IMPORTED_MODULE_2__","body","endpoint","method","left","screen","w","top","h","win","open","baseURL","watcher","setInterval","postMessage","clearInterval","onMessage","_ref3","data","createRealm","fetchRealms","setFilter","setPage","signin","anisotropy","Ground","Starfield","Title","Menu","onBeforeRender","touches","Touches","filtered","on","onPointerDown","previousFilter","wasSigningIn","previousPagination","previousRealms","previousUser","_this$props2","filterHasUpdated","updateFilter","updateSession","updatePagination","updateRealms","setImmediate","__SCREENSHOT_READY__","disable","_this$renderer","hit","intersectObjects","intersects","setHover","distance","object","point","z","onPointer","isDown","x","y","_this$renderer2","setFromCamera","min","max","defaultProps","string","number","arrayOf","slug","_ref4","_ref4$lobby","_ref4$user","Voxels","_ref$instanced","instanced","shader","InstancedBufferGeometry","ShaderMaterial","defines","vertexShader","vertex","fragmentShader","fragment","uniforms","UniformsUtils","vertexColors","VertexColors","aux","frustum","Frustum","remove","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","push","sort","_instance$chunk","frustumCulled","offset","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","_ref5","array","needsUpdate","_ref6","normal","uv","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","join","USE_MAP","PlaneGeometry","rotateX","PI","Color","copy","_types__WEBPACK_IMPORTED_MODULE_0__","_services_api__WEBPACK_IMPORTED_MODULE_1__","_getState$lobby","Picker","updateFog","block","strip","modeButton","label","setMode","mode","draw","colors","bg","fg","setHSL","Fonts","waitUntilLoaded","Panel","ctx","context","_get","prototype","save","fillStyle","getHexString","fillRect","grdWhite","createLinearGradient","addColorStop","grdBlack","restore","grd","strokeStyle","beginPath","rect","stroke","font","textAlign","textBaseline","fillText","_toConsumableArray","imageData","getImageData","setRGB","getHex","Pillar","CylinderGeometry","creator","vignette","createRadialGradient","hasLoadedFont","image","Image","crossOrigin","onload","screenshot","isHover","drawImage","ButtonsPanel","isActive","isDisabled","CreateRealm","_ref7","_this3$renderer","_ref8","Pagination","_ref9","_this4","_this4$renderer","_ref10","_this5","_this6","_ref11","userPhoto","Filter","_ref12","_this7","_this7$renderer","_ref13","button","_ref14","_this8","hover","addPanel","panel","lookAt","pillar","_ref15","_ref16","_this9","showCreateRealm","_ref17","_ref18","Points","count","normalize","multiplyScalar","c","PointsMaterial","match","params","picker","extensions","get","head","previousGeometry","previousFog","previousSize","resize","reset","_this$props3","updateVoxels","updateFrustum","_map2","axis","sin","rotateY","translateZ","_ref2$realm","__API__","_ref$headers","headers","_ref$method","authorization","Authorization","FormData","status","arrayBuffer","module","exports","Worker","p","_ref$width","_ref$height","backplate","texture","CanvasTexture","getContext","worldToLocal","splice","side","DoubleSide","PlaneBufferGeometry","pixels","light","putImageData","magFilter","NearestFilter","minFilter","wrapS","RepeatWrapping","wrapT","mesher","Mesher","promiseId","promises","worker","onmessage","Promise","resolve","_ref2$data","create","generateGeometry","generate","_getState$realm","_getState2$realm","randomized","r","g","b","append","Blob","buffer","LOBBY_FETCH_REALMS","LOBBY_FETCH_REALMS_FULFILLED","LOBBY_SET_FILTER","LOBBY_SET_PAGE","REALM_CREATE","REALM_CREATE_FULFILLED","REALM_FETCH","REALM_FETCH_FULFILLED","REALM_UPDATE_FOG","REALM_UPDATE_GEOMETRY","REALM_UPDATE_GEOMETRY_FULFILLED","REALM_UPDATE_VOXELS","REALM_RESET","USER_HIDE_SESSION_POPUP","USER_REFRESH_SESSION","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SHOW_SESSION_POPUP","USER_LOGIN","USER_LOGIN_FULFILLED","USER_REGISTER","USER_REGISTER_FULFILLED","USER_SIGNOUT","loaded","fonts","Array","isArray","all","check","setTimeout","transparent","shadowColor","shadowBlur","__VERSION__"],"mappings":"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","file":"code/main.0537227ca5a6f6bc3abd.js","sourcesContent":["import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n        map: Noise,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.isScreenshot = window.__SCREENSHOT__;\n    this.camera = new PerspectiveCamera(80, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.fog = new FogExp2(0, 0.0125);\n    this.raycaster = new Raycaster();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__ && !this.isScreenshot) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setFog(color) {\n    const { fog, renderer } = this;\n    fog.color.setHex(color);\n    renderer.setClearColor(fog.color);\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.25, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.setFog(0x020214);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = this.fog;\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Tweak ThreeJS Fog\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = length(mvPosition);'\n);\n\nexport default Renderer;\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirm password',\n    email: 'Email',\n    name: 'Name',\n    signIn: 'Sign-In',\n    signInWithGoogle: 'Sign-In with Google',\n    signOut: 'Sign-Out',\n    password: 'Password',\n    register: 'Create an account',\n  },\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirmar contraseña',\n    email: 'Email',\n    name: 'Nombre',\n    signIn: 'Iniciar sesión',\n    signInWithGoogle: 'Iniciar sesión con Google',\n    signOut: 'Cerrar sesión',\n    password: 'Contraseña',\n    register: 'Crear una cuenta',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst filter = (\n  state = 'all',\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_SET_FILTER:\n      return action.payload.value;\n    default:\n      return state;\n  }\n};\n\nconst hasLoaded = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return true;\n    case types.REALM_CREATE_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst pagination = (\n  state = {\n    page: 0,\n    pages: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return {\n        ...state,\n        pages: action.payload.pages,\n      };\n    case types.LOBBY_SET_FILTER:\n      return {\n        ...state,\n        page: 0,\n      };\n    case types.LOBBY_SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload.realms;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  filter,\n  hasLoaded,\n  pagination,\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst fog = (\n  state = 0x020214,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_FOG:\n      return action.payload.fog;\n    case types.REALM_RESET:\n      return 0x020214;\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst isCreator = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return !!action.payload.isCreator;\n    case types.REALM_RESET:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  fog,\n  id,\n  isCreator,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isSigningIn = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_SHOW_SESSION_POPUP:\n      return true;\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_HIDE_SESSION_POPUP:\n    case types.USER_REGISTER_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED: {\n      const { profile } = action.payload;\n      const { name } = profile;\n      return {\n        ...profile,\n        firstName: name.split(' ')[0],\n      };\n    }\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  isSigningIn,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Link = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  &:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  @keyframes octocat-wave {\n    0% {\n      transform: rotate(0deg);\n    }\n    20% {\n      transform: rotate(-25deg);\n    }\n    40% {\n      transform: rotate(10deg);\n    }\n    60% {\n      transform: rotate(-25deg);\n    }\n    80% {\n      transform: rotate(10deg);\n    }\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n`;\n\nconst GitHub = () => (\n  <Link\n    href=\"https://github.com/danielesteban/RealmsVR#readme\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      fill=\"#fff\"\n    >\n      <path\n        d=\"M0 0l115 115h15l12 27 108 108V0z\"\n        fill=\"#000\"\n      />\n      <path\n        className=\"octo-arm\"\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n      />\n      <path\n        className=\"octo-body\"\n        d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\"\n      />\n    </svg>\n  </Link>\n);\n\nexport default GitHub;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let iteration = 0; iteration < ((Date.now() % 10) + 1); iteration += 1) {\n      for (let index = tracks.length - 1; index >= 0; index -= 1) {\n        const random = Math.floor(Math.random() * tracks.length);\n        const temp = tracks[index];\n        tracks[index] = tracks[random];\n        tracks[random] = temp;\n      }\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  TiKey,\n  TiSocialGooglePlusCircular,\n  TiTimes,\n} from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\nimport styled from 'styled-components';\nimport {\n  hideSessionPopup as hide,\n  login,\n  loginWithGoogle,\n  register,\n} from '@/actions/user';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, .5);\n`;\n\nconst Popup = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  background: #444;\n  box-shadow: 0 0 32px rgba(0, 0, 0, .5);\n`;\n\nconst Heading = styled.div`\n  background: #111;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 56px;\n  .tabs {\n    display: flex;\n    height: 100%;\n    > a {\n      display: flex;\n      align-items: center;\n      background: #222;\n      padding: 0 1rem;\n      border-left: 1px solid #333;\n      cursor: pointer;\n      &:first-child {\n        border-left: none;\n      }\n      &.active {\n        background: #444;\n        cursor: default;\n      }\n    }\n  }\n  > a {\n    padding: 1rem;\n    > svg {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  button {\n    display: flex;\n    align-items: center;\n    border: 1px solid #555;\n    background: #222;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    font-family: inherit;\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: inherit;\n    cursor: pointer;\n    outline: 0;\n    > svg {\n      font-size: 1.5em;\n      margin-right: 0.5rem;\n    }\n  }\n  .or {\n    position: relative;\n    width: 100%;\n    border-top: 1px solid #222;\n    margin: 2rem 0;\n    > span {\n      position: absolute;\n      display: block;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n  .google {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: none;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  &.active {\n    display: flex;\n  }\n  > label {\n    width: 100%;\n    padding: 0;\n  }\n  > input {\n    box-sizing: border-box;\n    border: 1px solid #333;\n    width: 100%;\n    background: #222;\n    color: inherit;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 2em;\n    padding: 0.5rem;\n    margin: 0 0 1rem;\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onLoginSubmit = this.onLoginSubmit.bind(this);\n    this.onRegisterSubmit = this.onRegisterSubmit.bind(this);\n    this.state = { tab: 'login' };\n  }\n\n  onLoginSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { login } = this.props;\n    login({\n      email: form.email.value,\n      password: form.password.value,\n    });\n  }\n\n  onRegisterSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { register } = this.props;\n    if (form.password.value !== form.confirmPassword.value) {\n      return;\n    }\n    register({\n      email: form.email.value,\n      name: form.name.value,\n      password: form.password.value,\n    });\n  }\n\n  render() {\n    const {\n      isSigningIn,\n      hide,\n      loginWithGoogle,\n    } = this.props;\n    const { tab } = this.state;\n    if (!isSigningIn) {\n      return null;\n    }\n    return (\n      <Wrapper>\n        <Popup>\n          <Heading>\n            <div className=\"tabs\">\n              <a\n                className={tab === 'login' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'login' })}\n              >\n                <Translate value=\"User.signIn\" />\n              </a>\n              <a\n                className={tab === 'register' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'register' })}\n              >\n                <Translate value=\"User.register\" />\n              </a>\n            </div>\n            <a\n              onClick={hide}\n            >\n              <TiTimes />\n            </a>\n          </Heading>\n          <Content>\n            <Form\n              className={tab === 'login' ? 'active' : null}\n              onSubmit={this.onLoginSubmit}\n            >\n              <label><Translate value=\"User.email\" /></label>\n              <input type=\"email\" name=\"email\" required />\n              <label><Translate value=\"User.password\" /></label>\n              <input type=\"password\" name=\"password\" required />\n              <button\n                type=\"submit\"\n              >\n                <TiKey />\n                <Translate value=\"User.signIn\" />\n              </button>\n            </Form>\n            <Form\n              className={tab === 'register' ? 'active' : null}\n              onSubmit={this.onRegisterSubmit}\n            >\n              <label><Translate value=\"User.name\" /></label>\n              <input type=\"text\" name=\"name\" required />\n              <label><Translate value=\"User.email\" /></label>\n              <input type=\"email\" name=\"email\" required />\n              <label><Translate value=\"User.password\" /></label>\n              <input type=\"password\" name=\"password\" required />\n              <label><Translate value=\"User.confirmPassword\" /></label>\n              <input type=\"password\" name=\"confirmPassword\" required />\n              <button\n                type=\"submit\"\n              >\n                <TiKey />\n                <Translate value=\"User.register\" />\n              </button>\n            </Form>\n            <div className=\"or\">\n              <Translate value=\"User.or\" />\n            </div>\n            <div className=\"google\">\n              <button\n                onClick={loginWithGoogle}\n                type=\"button\"\n              >\n                <TiSocialGooglePlusCircular />\n                <Translate value=\"User.signInWithGoogle\" />\n              </button>\n            </div>\n          </Content>\n        </Popup>\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isSigningIn: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: {\n      isSigningIn,\n    },\n  }) => ({\n    isSigningIn,\n  }),\n  {\n    hide,\n    login,\n    loginWithGoogle,\n    register,\n  }\n)(Session);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Github from '@/components/github';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    const isScreenshot = window.__SCREENSHOT__;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Music />\n        {!isScreenshot ? <Github /> : null}\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function hideSessionPopup() {\n  return {\n    type: types.USER_HIDE_SESSION_POPUP,\n  };\n}\n\nexport function register({ email, name, password }) {\n  return dispatch => dispatch({\n    type: types.USER_REGISTER,\n    payload: API.fetch({\n      body: {\n        email,\n        name,\n        password,\n      },\n      endpoint: 'user',\n      method: 'PUT',\n    }),\n  }).catch(() => {});\n}\n\nexport function refreshSession() {\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function showSessionPopup() {\n  return {\n    type: types.USER_SHOW_SESSION_POPUP,\n  };\n}\n\nexport function login({ email, password }) {\n  return dispatch => dispatch({\n    type: types.USER_LOGIN,\n    payload: API.fetch({\n      body: {\n        email,\n        password,\n      },\n      endpoint: 'user',\n      method: 'POST',\n    }),\n  }).catch(() => {});\n}\n\nexport function loginWithGoogle() {\n  return (dispatch) => {\n    const w = 512;\n    const h = 512;\n    const left = (window.screen.width / 2) - w / 2;\n    const top = (window.screen.height / 2) - h / 2;\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    const watcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(watcher);\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    const onMessage = ({ origin, data: { session } }) => {\n      if (API.baseURL.indexOf(origin) === 0) {\n        window.removeEventListener('message', onMessage);\n        clearInterval(watcher);\n        if (!session) {\n          return;\n        }\n        dispatch({\n          type: types.USER_LOGIN_FULFILLED,\n          payload: session,\n        });\n      }\n    };\n    window.addEventListener('message', onMessage, false);\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport {\n  fetchRealms,\n  setFilter,\n  setPage,\n} from '@/actions/lobby';\nimport {\n  create as createRealm,\n} from '@/actions/realm';\nimport { showSessionPopup as signin, signout } from '@/actions/user';\nimport Ground from '@/components/lobby/ground';\nimport Menu from '@/components/lobby/menu';\nimport Starfield from '@/components/lobby/starfield';\nimport Title from '@/components/lobby/title';\nimport Renderer from '@/components/renderer';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      filter,\n      hasLoaded,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      renderer: { current: renderer },\n      createRealm,\n      fetchRealms,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Ground());\n    scene.add(new Starfield());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      filter,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      createRealm,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    if (!hasLoaded) {\n      // Fetch realms\n      fetchRealms();\n    }\n  }\n\n  componentDidUpdate({\n    filter: previousFilter,\n    isSigningIn: wasSigningIn,\n    pagination: previousPagination,\n    realms: previousRealms,\n    user: previousUser,\n  }) {\n    const {\n      filter,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      fetchRealms,\n      setFilter,\n    } = this.props;\n    const {\n      menu,\n      renderer: { isScreenshot },\n    } = this;\n    const filterHasUpdated = filter !== previousFilter;\n    if (\n      filterHasUpdated\n      || pagination.page !== previousPagination.page\n    ) {\n      // Fetch realms\n      fetchRealms();\n    }\n    if (filterHasUpdated) {\n      // Update filter\n      menu.updateFilter(filter);\n    }\n    if (isSigningIn !== wasSigningIn) {\n      // Update Session\n      menu.updateSession({ isSigningIn });\n    }\n    if (pagination !== previousPagination) {\n      // Update pagination\n      menu.updatePagination(pagination);\n    }\n    if (realms !== previousRealms) {\n      // Update realms\n      menu.updateRealms(realms);\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n    if (user !== previousUser) {\n      // Update Session\n      menu.updateSession({ user });\n      if (!user && filter === 'user') {\n        setFilter('all');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n        point,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      props: {\n        isSigningIn,\n      },\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    if (isSigningIn) {\n      return;\n    }\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n      point: hit.point,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.defaultProps = {\n  user: undefined,\n};\n\nLobby.propTypes = {\n  filter: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  user: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  createRealm: PropTypes.func.isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n  signin: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      filter,\n      hasLoaded,\n      pagination,\n      realms,\n    },\n    user: {\n      isAuth,\n      isSigningIn,\n      profile: user,\n    },\n  }) => ({\n    filter,\n    hasLoaded,\n    isSigningIn,\n    pagination,\n    realms,\n    user: isAuth ? user : undefined,\n  }),\n  {\n    createRealm,\n    fetchRealms,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }\n)(Lobby);\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Noise from '@/textures/noise';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        defines: shader.defines,\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: UniformsUtils.merge([\n          shader.uniforms,\n          { map: { value: Noise } },\n        ]),\n        fog: true,\n        vertexColors: VertexColors,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        map: Noise,\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n    uv,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.attributes.uv) {\n      geometry.attributes.uv.setArray(uv);\n      geometry.attributes.uv.needsUpdate = true;\n    } else {\n      geometry.addAttribute('uv', new BufferAttribute(uv, 2));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n  defines: { USE_MAP: true },\n};\n\nexport default Voxels;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Ground extends Mesh {\n  constructor() {\n    if (\n      !Ground.geometry\n      || !Ground.material\n    ) {\n      Ground.setup();\n    }\n    super(\n      Ground.geometry,\n      Ground.material\n    );\n  }\n\n  static setup() {\n    if (!Ground.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Ground.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Ground.material) {\n      Ground.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Ground;\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function fetchRealms() {\n  return (dispatch, getState) => {\n    const { lobby: { filter, pagination: { page } } } = getState();\n    return dispatch({\n      type: types.LOBBY_FETCH_REALMS,\n      payload: API.fetch({\n        endpoint: `realms/${filter === 'user' ? 'user/' : ''}${page}`,\n      }),\n    });\n  };\n}\n\nexport function setFilter(value) {\n  return {\n    type: types.LOBBY_SET_FILTER,\n    payload: { value },\n  };\n}\n\nexport function setPage(value) {\n  return {\n    type: types.LOBBY_SET_PAGE,\n    payload: { value },\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Picker extends Panel {\n  constructor({\n    anisotropy,\n    fog,\n    history,\n    updateFog,\n  }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.modeButton = {\n      label: 'MODE',\n      x: renderer.width * 0.7,\n      y: renderer.height * 0.85,\n      width: renderer.width * 0.25,\n      height: renderer.height * 0.1,\n      onPointer: () => {\n        this.setMode(\n          this.mode === 'fg' ? 'bg' : 'fg'\n        );\n        this.draw();\n      },\n    };\n    this.buttons = [\n      {\n        label: '« REALMS',\n        x: renderer.width * 0.05,\n        y: renderer.height * 0.85,\n        width: renderer.width * 0.25,\n        height: renderer.height * 0.1,\n        onPointer: () => history.push('/'),\n      },\n      this.modeButton,\n    ];\n    this.colors = {\n      bg: (new Color()).setHex(fog),\n      fg: (new Color()).setHSL(Math.random(), 0.6, 0.8),\n      block: new Color(),\n    };\n    this.setMode('fg');\n    this.updateFog = updateFog;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  draw() {\n    const {\n      block,\n      buttons,\n      colors,\n      context: ctx,\n      mode,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${colors.block.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.25;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.375, renderer.height * 0.85);\n      ctx.fillStyle = `#${colors[mode].getHexString()}`;\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = '#222';\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.fillStyle = '#fff';\n      ctx.font = '700 24px Roboto';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(label, width * 0.5, height * 0.5);\n      ctx.restore();\n    });\n  }\n\n  setMode(mode) {\n    const { colors, modeButton } = this;\n    colors.block.copy(colors[mode]);\n    modeButton.label = mode === 'fg' ? 'FG color' : 'BG color';\n    this.mode = mode;\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      buttons,\n      colors,\n      context: ctx,\n      mode,\n      pointer,\n      strip,\n      updateFog,\n    } = this;\n    super.onPointer(point);\n    [block, strip, ...buttons].forEach((object) => {\n      const {\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      } = object;\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      if (onPointer) {\n        onPointer();\n        return;\n      }\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (object === strip) {\n        colors.block.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      colors[mode].setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      if (mode === 'bg') {\n        updateFog(colors[mode].getHex());\n      }\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport API from '@/services/api';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    _id: id,\n    name,\n    creator,\n    onPointer,\n  }) {\n    super({\n      anisotropy,\n    });\n    this.name = name;\n    this.onPointer = onPointer;\n    this.scale.set(0.3, 0.3, 1);\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (creator) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${creator._id}/photo`;\n      image.onload = () => {\n        this.creator = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n    {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}realm/${id}/screenshot`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      creator,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '40px Roboto';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    if (creator) {\n      ctx.drawImage(\n        creator,\n        0, renderer.height * 0.75,\n        renderer.width * 0.25, renderer.height * 0.25\n      );\n    }\n    ctx.fillText(\n      name,\n      renderer.width * 0.05 + (renderer.width * (creator ? 0.25 : 0.05)),\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass ButtonsPanel extends Panel {\n  constructor({\n    anisotropy,\n  }) {\n    super({\n      anisotropy,\n      width: 256,\n      height: 256,\n    });\n    this.scale.set(0.25, 0.25, 1);\n    this.hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        this.hasLoadedFont = true;\n        this.draw();\n      });\n  }\n\n  draw() {\n    const {\n      buttons,\n      context: ctx,\n    } = this;\n    super.draw();\n    ctx.font = '700 30px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n      isActive,\n      isDisabled,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      if (isDisabled) {\n        ctx.fillStyle = '#555';\n      } else if (isActive) {\n        ctx.fillStyle = '#fff';\n      } else {\n        ctx.fillStyle = '#222';\n      }\n      ctx.strokeStyle = '#333';\n      ctx.fill();\n      ctx.stroke();\n      if (isDisabled) {\n        ctx.fillStyle = '#777';\n      } else if (isActive) {\n        ctx.fillStyle = '#222';\n      } else {\n        ctx.fillStyle = '#fff';\n      }\n      ctx.fillText(\n        label,\n        width * 0.5,\n        height * 0.5\n      );\n      ctx.restore();\n    });\n  }\n\n  onPointer({ isDown, point }) {\n    const { buttons, pointer } = this;\n    if (!isDown) return;\n    super.onPointer(point);\n    buttons\n      .filter(({ isDisabled }) => (!isDisabled))\n      .forEach(({\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      }) => {\n        if (\n          pointer.x < x\n          || pointer.x > x + width\n          || pointer.y < y\n          || pointer.y > y + height\n        ) {\n          return;\n        }\n        onPointer();\n      });\n  }\n}\n\nclass CreateRealm extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    history,\n    createRealm,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.3, 0.3, 1);\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: 'Create Realm',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: () => (\n          createRealm()\n            .then(({ value: slug }) => history.push(`/${slug}`))\n        ),\n      },\n    ];\n  }\n}\n\nclass Pagination extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    page,\n    pages,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: '<',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page > 0) update(this.page - 1);\n        },\n      },\n      {\n        label: '>',\n        x: width * 0.6,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page < this.pages - 1) update(this.page + 1);\n        },\n      },\n    ];\n    this.page = page;\n    this.pages = pages;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      page,\n      pages,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      `${page + 1} / ${pages}`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n  }\n}\n\nclass Session extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isSigningIn,\n    user,\n    signin,\n    signout,\n  }) {\n    super({ anisotropy });\n    this.signin = signin;\n    this.signout = signout;\n    this.updateSession({\n      isSigningIn,\n      user,\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { renderer, signin, signout } = this;\n    const { width, height } = renderer;\n    if (isSigningIn) {\n      this.buttons = [];\n    } else if (!user) {\n      this.buttons = [{\n        label: 'Sign-In',\n        x: width * 0.1,\n        y: height * 0.4,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: signin,\n      }];\n    } else {\n      this.buttons = [{\n        label: 'Sign-Out',\n        x: width * 0.1,\n        y: height * 0.7,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: signout,\n      }];\n    }\n    this.isSigningIn = isSigningIn;\n    this.user = user;\n    delete this.userPhoto;\n    if (user) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${user._id}/photo`;\n      image.onload = () => {\n        this.userPhoto = image;\n        if (this.hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isSigningIn,\n      renderer,\n      user,\n      userPhoto,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    if (isSigningIn) {\n      ctx.fillText(\n        'Remove your',\n        renderer.width * 0.5,\n        renderer.height * 0.25\n      );\n      ctx.fillText(\n        'headset',\n        renderer.width * 0.5,\n        renderer.height * 0.4\n      );\n      ctx.fillText(\n        'And Sign-In',\n        renderer.width * 0.5,\n        renderer.height * 0.6\n      );\n      ctx.fillText(\n        'in your browser',\n        renderer.width * 0.5,\n        renderer.height * 0.75\n      );\n    } else {\n      ctx.fillText(\n        user ? user.firstName : 'Guest',\n        renderer.width * 0.5,\n        renderer.height * 0.2\n      );\n    }\n    if (user && userPhoto) {\n      ctx.drawImage(\n        userPhoto,\n        renderer.width * 0.5 - 40, renderer.height * 0.5 - 50,\n        80, 80\n      );\n    }\n  }\n}\n\nclass Filter extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isAuth,\n    filter,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        id: 'all',\n        label: 'All Realms',\n        x: width * 0.1,\n        y: height * 0.2,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: () => update('all'),\n      },\n      {\n        id: 'user',\n        label: 'Your Realms',\n        x: width * 0.1,\n        y: height * 0.6,\n        width: width * 0.8,\n        height: height * 0.2,\n        isDisabled: !isAuth,\n        onPointer: () => update('user'),\n      },\n    ];\n    this.filter = filter;\n    this.update = update;\n  }\n\n  updateSession({ isAuth }) {\n    this.buttons[1].isDisabled = !isAuth;\n  }\n\n  draw() {\n    const { buttons, filter } = this;\n    buttons.forEach((button) => {\n      button.isActive = button.id === filter;\n    });\n    super.draw();\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({\n    anisotropy,\n    filter,\n    history,\n    isSigningIn,\n    pagination,\n    realms,\n    user,\n    createRealm,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n    this.pagination = this.addPanel(\n      Pagination,\n      {\n        ...pagination,\n        update: setPage,\n      },\n      0, -0.3, 0.13\n    );\n    this.session = this.addPanel(\n      Session,\n      {\n        isSigningIn,\n        user,\n        signin,\n        signout,\n      },\n      -0.3, -0.3, 0.13\n    );\n    this.filter = this.addPanel(\n      Filter,\n      {\n        filter,\n        isAuth: !!user,\n        update: setFilter,\n      },\n      0.3, -0.3, 0.13\n    );\n    this.createRealm = createRealm;\n    this.updateRealms(realms);\n  }\n\n  addPanel(Panel, props, x, y, z) {\n    const { anisotropy, intersects } = this;\n    const panel = new Panel({ ...props, anisotropy });\n    panel.position.set(x, y, z);\n    panel.lookAt(0, 0.5, 1);\n    this.add(panel);\n    const pillar = new Pillar();\n    pillar.position.copy(panel.position);\n    this.add(pillar);\n    intersects.push(panel);\n    return panel;\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  updateFilter(value) {\n    const { filter } = this;\n    filter.filter = value;\n    filter.draw();\n  }\n\n  updatePagination({ page, pages }) {\n    const { pagination } = this;\n    pagination.page = page;\n    pagination.pages = pages;\n    pagination.draw();\n  }\n\n  updateRealms(realms) {\n    const {\n      anisotropy,\n      children,\n      createRealm,\n      filter: { filter },\n      history,\n      pagination,\n    } = this;\n    while (children.length > 6) {\n      this.remove(children[children.length - 1]);\n    }\n    this.intersects.length = 3;\n    const showCreateRealm = filter === 'user' && pagination.page === 0;\n    const count = realms.length + (showCreateRealm ? 1 : 0);\n    let offset = 0.25 + count * -0.25;\n    if (showCreateRealm) {\n      this.addPanel(\n        CreateRealm,\n        {\n          history,\n          createRealm,\n        },\n        offset, 0, 0\n      );\n      offset += 0.5;\n    }\n    realms.forEach((realm, i) => {\n      const panel = this.addPanel(\n        Realm,\n        {\n          ...realm,\n          anisotropy,\n          onPointer: ({ hand, isDown }) => {\n            this.setHover({ hand, realm: panel });\n            if (isDown) {\n              history.push(`/${realm.slug}`);\n            }\n          },\n        },\n        offset + (i * 0.5), 0, 0\n      );\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { filter, session } = this;\n    filter.updateSession({ isAuth: !!user });\n    filter.draw();\n    session.updateSession({ isSigningIn, user });\n    session.draw();\n  }\n}\n\nexport default Menu;\n","import {\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  VertexColors,\n  BufferAttribute,\n  Vector3,\n} from 'three';\n\nclass Starfield extends Points {\n  constructor() {\n    if (\n      !Starfield.geometry\n      || !Starfield.material\n    ) {\n      Starfield.setup();\n    }\n    super(\n      Starfield.geometry,\n      Starfield.material\n    );\n  }\n\n  static setup() {\n    if (!Starfield.geometry) {\n      const count = 2048;\n      const radius = 512;\n      const position = new Float32Array(count * 3);\n      const color = new Float32Array(count * 3);\n      const aux = new Vector3();\n      for (let i = 0; i < count * 3; i += 3) {\n        aux\n          .set(\n            Math.random() * 2 - 1,\n            Math.random(),\n            Math.random() * 2 - 1\n          )\n          .normalize()\n          .multiplyScalar(radius);\n        position[i] = aux.x;\n        position[i + 1] = aux.y;\n        position[i + 2] = aux.z;\n        const c = 0.2 + Math.random() * 0.5;\n        color[i] = c - Math.random() * 0.1;\n        color[i + 1] = c - Math.random() * 0.1;\n        color[i + 2] = c - Math.random() * 0.1;\n      }\n      Starfield.geometry = new BufferGeometry();\n      Starfield.geometry.addAttribute('position', new BufferAttribute(position, 3));\n      Starfield.geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (!Starfield.material) {\n      Starfield.material = new PointsMaterial({\n        fog: false,\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Starfield;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport {\n  fetch,\n  reset,\n  updateFog,\n  updateVoxels,\n} from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      fog,\n      history,\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n      updateFog,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n      fog,\n      history,\n      updateFog,\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({\n    geometry: previousGeometry,\n    fog: previousFog,\n    size: previousSize,\n  }) {\n    const { geometry, fog, size } = this.props;\n    const { picker, renderer, voxels } = this;\n    const {\n      isScreenshot,\n      raycaster,\n      room,\n      renderer: { vr },\n    } = renderer;\n    if (fog !== previousFog) {\n      // Update fog\n      renderer.setFog(fog);\n    }\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5 + 0.5,\n        size * 0.5,\n        size * 0.5 + 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n      if (!previousGeometry.index && vr.enabled) {\n        // Pull the player down to the nearest voxel\n        raycaster.ray.origin.copy(room.position);\n        raycaster.ray.direction.set(0, -1, 0);\n        const hit = raycaster.intersectObjects(voxels.intersects)[0];\n        if (hit) {\n          room.position.y = hit.point.y;\n        }\n      }\n      if (isScreenshot) {\n        setImmediate(() => {\n          window.__SCREENSHOT_READY__ = true;\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        isScreenshot,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.colors.fg,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!isScreenshot && !vr.enabled && size) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n    uv: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  fog: PropTypes.number.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateFog: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      fog,\n      size,\n    },\n  }) => ({\n    geometry,\n    fog,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateFog,\n    updateVoxels,\n  }\n)(Realm);\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.a928c356f374818e0f26.js\");\n};","import {\n  BoxGeometry,\n  BufferGeometry,\n  CanvasTexture,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({\n    anisotropy,\n    width = 512,\n    height = 512,\n  }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const geometry = new BoxGeometry(1, 1, 0.06);\n      geometry.faces.splice(8, 2);\n      geometry.faces.forEach((face, i) => (\n        face.color.setHex(\n          Math.floor(i / 2) === 4 ? 0x111111 : 0x222222\n        )\n      ));\n      geometry.translate(0, 0, -0.01);\n      const backplate = new Mesh(\n        (new BufferGeometry()).fromGeometry(geometry),\n        new MeshBasicMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","import {\n  CanvasTexture,\n  NearestFilter,\n  RepeatWrapping,\n} from 'three';\n\nclass Noise extends CanvasTexture {\n  constructor() {\n    const renderer = document.createElement('canvas');\n    const ctx = renderer.getContext('2d');\n    renderer.width = 16;\n    renderer.height = 16;\n    const pixels = ctx.getImageData(0, 0, renderer.width, renderer.height);\n    for (let i = 0; i < pixels.data.length; i += 4) {\n      const light = Math.floor((0.9 + (Math.random() * 0.05)) * 0xFF);\n      pixels.data[i] = light;\n      pixels.data[i + 1] = light;\n      pixels.data[i + 2] = light;\n      pixels.data[i + 3] = 0xFF;\n    }\n    ctx.putImageData(pixels, 0, 0);\n    super(renderer);\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapS = RepeatWrapping;\n    this.wrapT = RepeatWrapping;\n    this.needsUpdate = true;\n  }\n}\n\nexport default new Noise();\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create() {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateFog(color) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n      },\n    } = getState();\n    if (isCreator) {\n      // Send update to server\n      API.fetch({\n        body: { color },\n        endpoint: `realm/${id}/fog`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_FOG,\n      payload: { fog: color },\n    });\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n        size,\n        voxels: current,\n      },\n    } = getState();\n    // Normalize & 3D wrap voxel position\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    // Randomize the color just a bit\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    // Update the voxels data\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    // Request a geometry generation\n    dispatch(generateGeometry({ size, voxels }));\n    if (isCreator) {\n      // Send update to server\n      const body = new FormData();\n      body.append('voxels', new Blob([voxels.buffer], { type: 'text/plain' }));\n      API.fetch({\n        body,\n        endpoint: `realm/${id}/voxels`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\nexport const LOBBY_SET_FILTER = 'LOBBY/SET_FILTER';\nexport const LOBBY_SET_PAGE = 'LOBBY/SET_PAGE';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_FOG = 'REALM/UPDATE_FOG';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_HIDE_SESSION_POPUP = 'USER/HIDE_SESSION_POPUP';\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SHOW_SESSION_POPUP = 'USER/SHOW_SESSION_POPUP';\nexport const USER_LOGIN = 'USER/LOGIN';\nexport const USER_LOGIN_FULFILLED = 'USER/LOGIN_FULFILLED';\nexport const USER_LOGIN_REJECTED = 'USER/LOGIN_REJECTED';\nexport const USER_REGISTER = 'USER/REGISTER';\nexport const USER_REGISTER_FULFILLED = 'USER/REGISTER_FULFILLED';\nexport const USER_REGISTER_REJECTED = 'USER/REGISTER_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const check = () => {\n              if (document.fonts.check(`1rem ${font}`)) {\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            check();\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0.3)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'REALMS',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n"],"sourceRoot":""}