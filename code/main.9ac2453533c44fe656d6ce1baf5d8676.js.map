{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/lobby/floor.js","webpack:///./src/components/panel.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/actions/user.js","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","NotFound","description","goBack","User","signIn","signOut","es","availableLocales","Object","keys","defaultLocale","translations","forEach","locale","merge","lobbyReducer","combineReducers","realms","state","arguments","length","undefined","action","type","payload","realmReducer","geometry","types","id","_id","name","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","profile","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Wrapper","styled","div","withConfig","displayName","componentId","Music","props","_this","music_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","player","document","createElement","onended","next","bind","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","window","removeEventListener","play","addEventListener","paused","pause","src","_this3","clientId","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","react_default","a","href","rel","target","alt","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","scale","premultiply","matrixWorldNeedsUpdate","pressed","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","Renderer","renderer_classCallCheck","renderer_possibleConstructorReturn","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Floor","floor_classCallCheck","floor_possibleConstructorReturn","floor_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","PlaneBufferGeometry","rotateY","fonts","Fonts","fonts_classCallCheck","loaded","Array","isArray","Promise","all","font","resolve","tester","innerText","style","fontFamily","top","appendChild","initialWidth","setTimeout","check","abs","removeChild","Pillar","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","CylinderGeometry","Realm","onPointer","screenshot","_this$renderer","vignette","createRadialGradient","addColorStop","hasLoadedFont","waitUntilLoaded","draw","image","Image","onload","isHover","_get","prototype","drawImage","textAlign","textBaseline","fillText","Menu","history","hover","intersects","_ref3","remove","offset","panel","_objectSpread","_ref4","isDown","setHover","push","slug","lookAt","pillar","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","shadowColor","shadowBlur","__VERSION__","Lobby","_this$props","fetchRealms","onBeforeRender","touches","Touches","filtered","on","onPointerDown","page","previousRealms","disable","hit","intersectObjects","distance","object","z","e","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","propTypes","PropTypes","isRequired","arrayOf","shape","string","instanceOf","func","connect","_ref$page","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","onMessage","postMessage","_ref2$data","data","generateGeometry","generate","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_possibleConstructorReturn","picker_getPrototypeOf","block","strip","blockColor","picker_get","save","getHexString","grdWhite","grdBlack","restore","rect","isStrip","imageData","getImageData","Voxels","_ref$instanced","instanced","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","shader","InstancedBufferGeometry","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","uniforms","aux","frustum","Frustum","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","sort","filter","_instance$chunk","frustumCulled","Float32Array","attributes","setArray","addAttribute","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","_ref5","array","_ref6","normal","BufferAttribute","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","UniformsUtils","match","params","picker","extensions","head","previousGeometry","previousSize","_this$props2","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","scenes_realm_slicedToArray","axis","sin","translateZ","number","_ref2$realm","dispatch","realm_objectSpread","getState","_getState$realm","realm_slicedToArray","randomized","r","g","b","value","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","layout_Wrapper","components_renderer","scenes","music","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","substr","toLowerCase","indexOf","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","preventDefault","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.9e5e30bdf504ca336fa6.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  NotFound: {\n    description: 'This is not the web page you\\'re looking for.',\n    goBack: 'Take me back home',\n  },\n  User: {\n    signIn: 'Sign-In',\n    signOut: 'Sign-Out',\n  },\n};\n","export default {\n  NotFound: {\n    description: 'Esta no es la página que estás buscando.',\n    goBack: 'Volver al inicio',\n  },\n  User: {\n    signIn: 'Iniciar sesión',\n    signOut: 'Cerrar sesión',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      return action.payload.profile;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(90, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.25, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.015);\n    this.scene.fog.color.setRGB(0, 0, 0.1);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Floor extends Mesh {\n  constructor() {\n    if (\n      !Floor.geometry\n      || !Floor.material\n    ) {\n      Floor.setup();\n    }\n    super(\n      Floor.geometry,\n      Floor.material\n    );\n  }\n\n  static setup() {\n    if (!Floor.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Floor.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Floor.material) {\n      Floor.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Floor;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({ anisotropy }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = 512;\n    renderer.height = 512;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const backplate = new Mesh(\n        new PlaneBufferGeometry(1, 1),\n        new MeshBasicMaterial({\n          color: 0x111111,\n        })\n      );\n      backplate.geometry.rotateY(Math.PI);\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const tester = document.createElement('div');\n            tester.innerText = 'QW@HhsXJ\\ue900';\n            tester.style.position = 'absolute';\n            tester.style.fontFamily = 'sans-serif';\n            tester.style.top = '-999999px';\n            document.body.appendChild(tester);\n            const { width: initialWidth } = tester.getBoundingClientRect();\n            const check = () => {\n              const { width } = tester.getBoundingClientRect();\n              if (Math.abs(width - initialWidth) > 1) {\n                document.body.removeChild(tester);\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            tester.style.fontFamily = font;\n            setTimeout(check, 10);\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    name,\n    onPointer,\n    screenshot,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.25, 0.25, 1);\n    this.name = name;\n    this.onPointer = onPointer;\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (screenshot) {\n      const image = new Image();\n      image.src = `data:image/jpeg;base64,${screenshot}`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '700 60px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({ anisotropy, history }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  update(realms) {\n    const {\n      anisotropy,\n      children,\n      history,\n      intersects,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n    intersects.length = 0;\n    const offset = 0.25 + realms.length * -0.25;\n    realms.forEach((realm, i) => {\n      const panel = new Realm({\n        ...realm,\n        anisotropy,\n        onPointer: ({ hand, isDown }) => {\n          this.setHover({ hand, realm: panel });\n          if (isDown) {\n            history.push(`/${realm.slug}`);\n          }\n        },\n      });\n      panel.position.set(\n        offset + (i * 0.5),\n        0,\n        0\n      );\n      panel.lookAt(0, 0.5, 1);\n      this.add(panel);\n      intersects.push(panel);\n      const pillar = new Pillar();\n      pillar.position.copy(panel.position);\n      this.add(pillar);\n    });\n  }\n}\n\nexport default Menu;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0,0,0,0.25)');\n    grd.addColorStop(1, 'rgba(0,0,0,0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'RealmsVR',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport { fetchRealms } from '@/actions/lobby';\nimport Renderer from '@/components/renderer';\nimport Floor from '@/components/lobby/floor';\nimport Menu from '@/components/lobby/menu';\nimport Title from '@/components/lobby/title';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      history,\n      renderer: { current: renderer },\n      fetchRealms,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Floor());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      history,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    // Fetch realms list\n    fetchRealms({ page: 0 });\n  }\n\n  componentDidUpdate({ realms: previousRealms }) {\n    const { realms } = this.props;\n    if (realms !== previousRealms) {\n      // Update realms\n      this.menu.update(realms);\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      realms,\n    },\n  }) => ({\n    realms,\n  }),\n  {\n    fetchRealms,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\n// eslint-disable-next-line import/prefer-default-export\nexport function fetchRealms({\n  page = 0,\n}) {\n  return {\n    type: types.LOBBY_FETCH_REALMS,\n    payload: API.fetch({\n      endpoint: `realms/${page}`,\n    }),\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create({\n  name,\n}) {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      body: {\n        name,\n      },\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const { realm: { size, voxels: current } } = getState();\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    dispatch(generateGeometry({ size, voxels }));\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\n\nclass Picker extends Panel {\n  constructor({ anisotropy }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.draw();\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.3;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.35, renderer.height * 0.85);\n      ctx.rect(0, 0, width, height);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip].forEach(({\n      x,\n      y,\n      width,\n      height,\n    }, i) => {\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      const isStrip = i === 1;\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (isStrip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: shader.uniforms,\n        vertexColors: VertexColors,\n        fog: true,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const { renderer: { room }, picker, voxels } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size && animation.time > 1) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\n// import Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        {/* <Session /> */}\n        <Music />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function refreshSession(session) {\n  if (session) {\n    return {\n      type: types.USER_REFRESH_SESSION_FULFILLED,\n      payload: session,\n    };\n  }\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.90665064f7956383769c.js\");\n};"],"sourceRoot":""}