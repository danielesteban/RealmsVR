{"version":3,"sources":["webpack:///./src/actions/types.js","webpack:///./src/services/api.js","webpack:///./src/locales/index.js","webpack:///./src/locales/en.js","webpack:///./src/locales/es.js","webpack:///./src/reducers/lobby.js","webpack:///./src/reducers/realm.js","webpack:///./src/reducers/user.js","webpack:///./src/reducers/index.js","webpack:///./src/components/music.jsx","webpack:///./src/components/hands.js","webpack:///./src/components/renderer.jsx","webpack:///./src/components/session.jsx","webpack:///./src/actions/user.js","webpack:///./src/services/mesher.js","webpack:///./src/actions/realm.js","webpack:///./src/components/lobby/ground.js","webpack:///./src/components/panel.js","webpack:///./src/services/fonts.js","webpack:///./src/components/lobby/menu.js","webpack:///./src/components/lobby/starfield.js","webpack:///./src/components/lobby/title.js","webpack:///./src/scenes/lobby.js","webpack:///./src/actions/lobby.js","webpack:///./src/components/realm/picker.js","webpack:///./src/components/realm/voxels.js","webpack:///./src/scenes/realm.js","webpack:///./src/scenes/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/index.jsx","webpack:///./src/services/mesher.worker.js"],"names":["LOBBY_FETCH_REALMS_FULFILLED","LOBBY_SET_FILTER","LOBBY_SET_PAGE","REALM_FETCH_FULFILLED","REALM_UPDATE_GEOMETRY","REALM_UPDATE_VOXELS","REALM_RESET","USER_HIDE_SESSION_POPUP","USER_REFRESH_SESSION_FULFILLED","USER_REFRESH_SESSION_REJECTED","USER_SHOW_SESSION_POPUP","USER_LOGIN_FULFILLED","USER_REGISTER_FULFILLED","USER_SIGNOUT","api","API","_classCallCheck","this","baseURL","__API__","body","_ref","endpoint","_ref$headers","headers","_ref$method","method","authorization","Authorization","FormData","JSON","stringify","fetch","concat","then","res","status","Error","get","split","arrayBuffer","json","token","locales","en","User","confirmPassword","email","name","signIn","signInWithGoogle","signOut","password","register","es","availableLocales","Object","keys","translations","forEach","locale","merge","lobbyReducer","combineReducers","filter","state","arguments","length","undefined","action","type","types","payload","value","hasLoaded","pagination","page","pages","_objectSpread","realms","realmReducer","geometry","id","_id","isCreator","size","voxels","Uint32Array","sessionKey","storedSession","parse","localStorage","getItem","setAuthorization","userReducer","isAuth","isSigningIn","profile","user_objectSpread","firstName","substr","indexOf","setItem","removeItem","rootReducer","i18n","loadingBar","lobby","realm","user","Wrapper","styled","div","withConfig","displayName","componentId","Music","props","_this","music_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","tracks","music_toConsumableArray","index","random","Math","floor","temp","player","document","createElement","onended","next","bind","_assertThisInitialized","volume","track","PureComponent","waitForFirstInteraction","_this2","first","window","removeEventListener","play","addEventListener","paused","pause","src","_this3","clientId","stream_url","setState","catch","title","artwork","artwork_url","link","permalink_url","_track$user","username","userlink","waveform","waveform_url","react_default","a","href","rel","target","alt","Hands","hands_classCallCheck","mesh","pointerMesh","setup","hands_possibleConstructorReturn","hands_getPrototypeOf","_loop","i","hand","clone","buttons","menu","menuDown","menuUp","grip","gripDown","gripUp","pad","padDown","padUp","trigger","triggerDown","triggerUp","pointer","visible","add","matrixAutoUpdate","setupRaycaster","raycaster","Object3D","children","gamepads","navigator","getGamepads","gamepad","startsWith","pose","updateHand","standingMatrix","position","fromArray","orientation","quaternion","matrix","compose","scale","premultiply","matrixWorldNeedsUpdate","pressed","_ref2","auxMatrix","Matrix4","matrixWorld","identity","extractRotation","ray","origin","setFromMatrixPosition","direction","set","applyMatrix4","addScaledVector","BoxGeometry","translate","faces","face","color","offsetHSL","BufferGeometry","fromGeometry","material","MeshBasicMaterial","Mesh","pointerGeometry","setFromPoints","Vector3","pointerMaterial","LineBasicMaterial","Line","Renderer","renderer_classCallCheck","renderer_possibleConstructorReturn","renderer_getPrototypeOf","canvas","React","createRef","onAnimationTick","renderer_assertThisInitialized","onResize","Component","current","camera","PerspectiveCamera","clock","Clock","Raycaster","room","hands","resetCamera","resetScene","renderer","WebGLRenderer","antialias","powerPreference","stencil","setPixelRatio","devicePixelRatio","setClearColor","scene","fog","setAnimationLoop","setupVR","stats","begin","animation","delta","getDelta","time","oldTime","update","render","end","_canvas$parentNode$ge","parentNode","getBoundingClientRect","width","height","vr","isPresenting","setSize","aspect","updateProjectionMatrix","capabilities","getMaxAnisotropy","hasWebXR","hasWebVR","enterVR","display","getDevice","requestSession","immersive","exclusive","session","setSession","frameOfReferenceType","xr","requestDevice","enabled","setDevice","requestPresent","source","domElement","getVRDisplays","displays","_slicedToArray","getStandingMatrix","rotation","child","dispose","Scene","FogExp2","setRGB","ref","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","Popup","Heading","Content","Form","form","Session","session_classCallCheck","session_possibleConstructorReturn","session_getPrototypeOf","onLoginSubmit","session_assertThisInitialized","onRegisterSubmit","tab","e","preventDefault","login","FormComponent","_this$props","hide","loginWithGoogle","onSubmit","react_redux_i18n_build","required","ti","session_Wrapper","className","onClick","propTypes","PropTypes","bool","isRequired","func","connect","dispatch","left","screen","w","top","h","win","open","watcher","setInterval","postMessage","clearInterval","onMessage","_ref3","data","mesher","Mesher","mesher_classCallCheck","promiseId","promises","worker","Worker","onmessage","Promise","resolve","_ref2$data","generateGeometry","generate","Ground","ground_classCallCheck","ground_possibleConstructorReturn","ground_getPrototypeOf","PlaneGeometry","rotateX","PI","Color","copy","setHex","vertexColors","VertexColors","Panel","anisotropy","_ref$width","_ref$height","panel_classCallCheck","backplate","texture","CanvasTexture","panel_possibleConstructorReturn","panel_getPrototypeOf","map","context","getContext","ctx","fillStyle","fillRect","needsUpdate","point","worldToLocal","x","y","splice","side","DoubleSide","PlaneBufferGeometry","fonts","Fonts","fonts_classCallCheck","loaded","Array","isArray","all","font","check","setTimeout","Pillar","menu_classCallCheck","menu_possibleConstructorReturn","menu_getPrototypeOf","CylinderGeometry","Realm","onPointer","screenshot","_this$renderer","vignette","createRadialGradient","addColorStop","hasLoadedFont","waitUntilLoaded","draw","image","Image","onload","isHover","_get","prototype","drawImage","textAlign","textBaseline","fillText","ButtonsPanel","label","isActive","isDisabled","save","beginPath","rect","strokeStyle","fill","stroke","restore","isDown","_ref4","_ref5","_ref6","CreateRealm","_ref7","history","createRealm","_this3$renderer","_ref8","slug","push","Pagination","_ref9","_this4","_this4$renderer","_ref10","_this5","signin","signout","updateSession","_this6","_ref11","userPhoto","crossOrigin","Filter","_ref12","_this7","_this7$renderer","_ref13","button","Menu","_ref14","_this8","setFilter","setPage","hover","intersects","addPanel","menu_objectSpread","updateRealms","z","panel","lookAt","pillar","_ref15","_ref16","_this9","remove","showCreateRealm","offset","_ref17","setHover","_ref18","Starfield","starfield_classCallCheck","starfield_possibleConstructorReturn","starfield_getPrototypeOf","Points","Float32Array","count","aux","normalize","multiplyScalar","c","addAttribute","BufferAttribute","PointsMaterial","Title","title_classCallCheck","title_possibleConstructorReturn","title_getPrototypeOf","transparent","grd","createLinearGradient","shadowColor","shadowBlur","__VERSION__","Lobby","fetchRealms","onBeforeRender","touches","Touches","filtered","on","onPointerDown","previousFilter","wasSigningIn","previousPagination","previousRealms","previousUser","_this$props2","filterHasUpdated","updateFilter","updatePagination","disable","hit","intersectObjects","distance","object","lobby_slicedToArray","_this$renderer2","setFromCamera","min","max","defaultProps","string","shape","number","arrayOf","instanceOf","_ref4$lobby","_ref4$user","getState","_getState$lobby","Picker","picker_classCallCheck","picker_assertThisInitialized","picker_possibleConstructorReturn","picker_getPrototypeOf","block","strip","blockColor","picker_get","getHexString","grdWhite","grdBlack","imageData","getImageData","goBack","Voxels","_ref$instanced","instanced","voxels_classCallCheck","voxels_possibleConstructorReturn","voxels_getPrototypeOf","shader","InstancedBufferGeometry","ShaderMaterial","vertexShader","vertex","fragmentShader","fragment","uniforms","frustum","Frustum","instances","distanceTo","round","instance","chunk","updateMatrix","updateMatrixWorld","sort","_instance$chunk","frustumCulled","attributes","setArray","InstancedBufferAttribute","setDynamic","maxInstancedCount","_this$aux","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromMatrix","offsets","worldSphere","intersectsSphere","reduce","array","normal","setIndex","computeBoundingSphere","boundingSphere","ShaderLib","basic","UniformsUtils","match","params","picker","extensions","head","previousGeometry","previousSize","resize","realm_toConsumableArray","reset","_this$props3","updateVoxels","updateFrustum","_map2","scenes_realm_slicedToArray","axis","sin","rotateY","translateZ","_ref2$realm","realm_objectSpread","_getState$realm","realm_slicedToArray","randomized","r","g","b","append","Blob","buffer","Scenes","react_router","path","exact","key","_extends","to","store","storedLocale","browserLocale","loadingBarStyle","backgroundColor","zIndex","Layout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","build_default","style","layout_Wrapper","components_renderer","scenes","music","components_session","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","productionCompose","createStore","applyMiddleware","thunkMiddleware","promiseMiddleware","loadingBarMiddleware","languages","language","browserLanguage","userLanguage","toLowerCase","syncTranslationWithStore","loadTranslations","setLocale","createBrowserHistory","basename","__BASENAME__","location","hash","mount","getElementById","react_redux_es","layout","module","exports","__webpack_require__","p"],"mappings":"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","file":"code/main.24ccd4c30ce5f3362695.js","sourcesContent":["// LOBBY\nexport const LOBBY_FETCH_REALMS = 'LOBBY/FETCH_REALMS';\nexport const LOBBY_FETCH_REALMS_FULFILLED = 'LOBBY/FETCH_REALMS_FULFILLED';\nexport const LOBBY_SET_FILTER = 'LOBBY/SET_FILTER';\nexport const LOBBY_SET_PAGE = 'LOBBY/SET_PAGE';\n\n// REALM\nexport const REALM_CREATE = 'REALM/CREATE';\nexport const REALM_CREATE_FULFILLED = 'REALM/CREATE_FULFILLED';\nexport const REALM_FETCH = 'REALM/FETCH';\nexport const REALM_FETCH_FULFILLED = 'REALM/FETCH_FULFILLED';\nexport const REALM_UPDATE_GEOMETRY = 'REALM/UPDATE_GEOMETRY';\nexport const REALM_UPDATE_GEOMETRY_FULFILLED = 'REALM/UPDATE_GEOMETRY_FULFILLED';\nexport const REALM_UPDATE_VOXELS = 'REALM/UPDATE_VOXELS';\nexport const REALM_RESET = 'REALM/RESET';\n\n// USER\nexport const USER_HIDE_SESSION_POPUP = 'USER/HIDE_SESSION_POPUP';\nexport const USER_REFRESH_SESSION = 'USER/REFRESH_SESSION';\nexport const USER_REFRESH_SESSION_FULFILLED = 'USER/REFRESH_SESSION_FULFILLED';\nexport const USER_REFRESH_SESSION_REJECTED = 'USER/REFRESH_SESSION_REJECTED';\nexport const USER_SHOW_SESSION_POPUP = 'USER/SHOW_SESSION_POPUP';\nexport const USER_LOGIN = 'USER/LOGIN';\nexport const USER_LOGIN_FULFILLED = 'USER/LOGIN_FULFILLED';\nexport const USER_LOGIN_REJECTED = 'USER/LOGIN_REJECTED';\nexport const USER_REGISTER = 'USER/REGISTER';\nexport const USER_REGISTER_FULFILLED = 'USER/REGISTER_FULFILLED';\nexport const USER_REGISTER_REJECTED = 'USER/REGISTER_REJECTED';\nexport const USER_SIGNOUT = 'USER/SIGNOUT';\n","class API {\n  constructor() {\n    this.baseURL = __API__;\n  }\n\n  fetch({\n    body,\n    endpoint,\n    headers = {},\n    method = 'GET',\n  }) {\n    const {\n      authorization,\n      baseURL,\n    } = this;\n    if (authorization) {\n      headers.Authorization = authorization;\n    }\n    if (body && !(body instanceof FormData)) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    return fetch(\n      `${baseURL}${endpoint}`,\n      {\n        body,\n        headers,\n        method,\n      }\n    )\n      .then((res) => {\n        const { headers, status } = res;\n        if (status < 200 || status >= 400) {\n          throw new Error(status);\n        }\n        const type = (headers.get('Content-Type') || '').split(';')[0];\n        switch (type) {\n          case 'text/plain':\n            return res.arrayBuffer();\n          case 'application/json':\n            return res.json();\n          default:\n            return res;\n        }\n      });\n  }\n\n  setAuthorization(token) {\n    if (token) {\n      this.authorization = `Bearer ${token}`;\n    } else {\n      delete this.authorization;\n    }\n    this.token = token;\n  }\n}\n\nexport default new API();\n","import diff from 'deep-diff';\nimport { recursive as merge } from 'merge';\nimport { loadTranslations, setLocale, syncTranslationWithStore } from 'react-redux-i18n';\nimport en from './en';\nimport es from './es';\n\nconst locales = {\n  en,\n  es,\n};\nconst availableLocales = Object.keys(locales);\nconst defaultLocale = 'en';\n\n// Populate locales with default literals\nconst translations = {};\navailableLocales.forEach((locale) => {\n  translations[locale] = merge(true, locales[defaultLocale], locales[locale]);\n});\n\n// Translations loader handler (for hot-reloading)\nexport const load = (store) => {\n  store.dispatch(loadTranslations(translations));\n};\n\nexport default (store) => {\n  // Locale Autodetection\n  const storedLocale = localStorage.getItem('REALMSVR::LOCALE');\n  const browserLocale = (\n    (window.navigator.languages ? window.navigator.languages[0] : null)\n    || window.navigator.language\n    || window.navigator.browserLanguage\n    || window.navigator.userLanguage\n    || defaultLocale\n  ).substr(0, 2).toLowerCase();\n\n  let locale = defaultLocale;\n  if (~availableLocales.indexOf(storedLocale)) locale = storedLocale;\n  else if (~availableLocales.indexOf(browserLocale)) locale = browserLocale;\n\n  // Setup react-i18nify\n  syncTranslationWithStore(store);\n  load(store);\n  store.dispatch(setLocale(locale));\n\n  if (!__PRODUCTION__) {\n    // Warn about missing translations\n    const missing = availableLocales\n      .reduce((missing, locale) => {\n        if (locale === defaultLocale) {\n          return missing;\n        }\n        const keys = diff(locales[defaultLocale], locales[locale])\n          .reduce((missing, { kind, path }) => {\n            if (kind === 'E') {\n              return missing;\n            }\n            return [\n              ...missing,\n              path.join('.'),\n            ];\n          }, []);\n        if (!keys.length) {\n          return missing;\n        }\n        return [\n          ...missing,\n          `\\nMissing translations for \"${locale.toUpperCase()}\" locale:`,\n          ...keys,\n        ];\n      }, []);\n    if (missing.length) {\n      console.warn(missing.join('\\n'));\n    }\n  }\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirm password',\n    email: 'Email',\n    name: 'Name',\n    signIn: 'Sign-In',\n    signInWithGoogle: 'Sign-In with Google',\n    signOut: 'Sign-Out',\n    password: 'Password',\n    register: 'Create an account',\n  },\n};\n","export default {\n  User: {\n    confirmPassword: 'Confirmar contraseña',\n    email: 'Email',\n    name: 'Nombre',\n    signIn: 'Iniciar sesión',\n    signInWithGoogle: 'Iniciar sesión con Google',\n    signOut: 'Cerrar sesión',\n    password: 'Contraseña',\n    register: 'Crear una cuenta',\n  },\n};\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst filter = (\n  state = 'all',\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_SET_FILTER:\n      return action.payload.value;\n    default:\n      return state;\n  }\n};\n\nconst hasLoaded = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return true;\n    case types.REALM_CREATE_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst pagination = (\n  state = {\n    page: 0,\n    pages: 0,\n  },\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return {\n        ...state,\n        pages: action.payload.pages,\n      };\n    case types.LOBBY_SET_FILTER:\n      return {\n        ...state,\n        page: 0,\n      };\n    case types.LOBBY_SET_PAGE:\n      return {\n        ...state,\n        page: action.payload.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst realms = (\n  state = [],\n  action\n) => {\n  switch (action.type) {\n    case types.LOBBY_FETCH_REALMS_FULFILLED:\n      return action.payload.realms;\n    default:\n      return state;\n  }\n};\n\nconst lobbyReducer = combineReducers({\n  filter,\n  hasLoaded,\n  pagination,\n  realms,\n});\n\nexport default lobbyReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\n\nconst geometry = (\n  state = {},\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_UPDATE_GEOMETRY_FULFILLED:\n      return action.payload;\n    case types.REALM_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst id = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload._id;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst isCreator = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return !!action.payload.isCreator;\n    case types.REALM_RESET:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst name = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.name;\n    case types.REALM_RESET:\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst size = (\n  state = 0,\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n      return action.payload.size;\n    case types.REALM_RESET:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nconst voxels = (\n  state = new Uint32Array(),\n  action\n) => {\n  switch (action.type) {\n    case types.REALM_FETCH_FULFILLED:\n    case types.REALM_UPDATE_VOXELS:\n      return action.payload.voxels;\n    case types.REALM_RESET:\n      return new Uint32Array();\n    default:\n      return state;\n  }\n};\n\nconst realmReducer = combineReducers({\n  geometry,\n  id,\n  isCreator,\n  name,\n  size,\n  voxels,\n});\n\nexport default realmReducer;\n","import { combineReducers } from 'redux';\nimport * as types from '@/actions/types';\nimport API from '@/services/api';\n\nconst sessionKey = 'REALMSVR::SESSION';\nconst storedSession = JSON.parse(\n  localStorage.getItem(sessionKey) || 'false'\n);\nif (storedSession) {\n  API.setAuthorization(storedSession.token);\n}\n\nconst isAuth = (\n  state = !!storedSession,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      return true;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst isSigningIn = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.USER_SHOW_SESSION_POPUP:\n      return true;\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_HIDE_SESSION_POPUP:\n    case types.USER_REGISTER_FULFILLED:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst profile = (\n  state = storedSession ? storedSession.profile : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED: {\n      const { profile } = action.payload;\n      const { name } = profile;\n      return {\n        ...profile,\n        firstName: name.substr(0, name.indexOf(' ')),\n      };\n    }\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst token = (\n  state = storedSession ? storedSession.token : {},\n  action\n) => {\n  switch (action.type) {\n    case types.USER_REFRESH_SESSION_FULFILLED:\n    case types.USER_LOGIN_FULFILLED:\n    case types.USER_REGISTER_FULFILLED:\n      API.setAuthorization(action.payload.token);\n      localStorage.setItem(sessionKey, JSON.stringify(action.payload));\n      return action.payload.token;\n    case types.USER_REFRESH_SESSION_REJECTED:\n    case types.USER_SIGNOUT:\n      API.setAuthorization(false);\n      localStorage.removeItem(sessionKey);\n      return '';\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isAuth,\n  isSigningIn,\n  profile,\n  token,\n});\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport { i18nReducer as i18n } from 'react-redux-i18n';\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport lobby from './lobby';\nimport realm from './realm';\nimport user from './user';\n\nconst rootReducer = combineReducers({\n  i18n,\n  loadingBar,\n  lobby,\n  realm,\n  user,\n});\n\nexport default rootReducer;\n","import React, { PureComponent } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: flex-end;\n  > a > img {\n    width: 100px;\n    height: 100px;\n    background: #000;\n    border: 0;\n    outline: none;\n    vertical-align: middle;\n  }\n  > div {\n    background: rgba(0, 0, 0, .5);\n    font-size: 1.4em;\n    line-height: 1.5em;\n    padding: 0.5rem 1rem;\n    border-radius: 0 4px 0 0;\n    > a {\n      display: block;\n      text-decoration: none;\n      outline: none;\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n    > a:nth-child(1) {\n      color: #eee;\n    }\n    > a:nth-child(2) {\n      color: #aaa;\n    }\n  }\n`;\n\nclass Music extends PureComponent {\n  constructor(props) {\n    super(props);\n    // Shuffle tracks\n    const tracks = [...Music.tracks];\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    // Initialize state\n    this.player = document.createElement('audio');\n    this.player.onended = this.next.bind(this);\n    this.player.volume = 0.5;\n    this.state = { track: undefined };\n    this.tracks = tracks;\n    this.track = 0;\n  }\n\n  componentDidMount() {\n    this.waitForFirstInteraction();\n  }\n\n  waitForFirstInteraction() {\n    const first = () => {\n      window.removeEventListener('mousedown', first);\n      window.removeEventListener('touchstart', first);\n      window.removeEventListener('vrdisplayactivate', first);\n      this.play();\n    };\n    window.addEventListener('mousedown', first, false);\n    window.addEventListener('touchstart', first, false);\n    window.addEventListener('vrdisplayactivate', first, false);\n  }\n\n  next() {\n    const { player } = this;\n    // Stop current player\n    if (!player.paused) {\n      player.pause();\n    }\n    player.src = '';\n    // Loop through the track list\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      player,\n      track,\n      tracks,\n    } = this;\n    // Fetch the current track\n    const clientId = 'client_id=eb5fcff9e107aab508431b4c3c416415';\n    const id = tracks[track];\n    if (!__PRODUCTION__) {\n      console.log(`playing: ${id}`);\n    }\n    fetch(`https://api.soundcloud.com/tracks/${id}?format=json&${clientId}`)\n      .then(res => res.json())\n      .then((track) => {\n        if (!track) {\n          throw new Error(`Couldn't fetch track: ${id}`);\n        }\n        // Play the track\n        player.src = `${track.stream_url}?${clientId}`;\n        player.play();\n        this.setState({ track });\n      })\n      .catch(() => (\n        this.next()\n      ));\n  }\n\n  render() {\n    const { track } = this.state;\n    if (!track) {\n      return null;\n    }\n    const {\n      title,\n      artwork_url: artwork,\n      permalink_url: link,\n      user: { username, permalink_url: userlink },\n      waveform_url: waveform,\n    } = track;\n    return (\n      <Wrapper>\n        <a\n          href={link}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img alt={title} src={artwork || waveform} />\n        </a>\n        <div>\n          <a\n            href={link}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {title}\n          </a>\n          <a\n            href={userlink}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {username}\n          </a>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\n// eslint-disable-next-line\nMusic.tracks = [334831124,3654595,3654647,62965282,55529274,40801532,28921242,58102473,65194517,44049414,584470,348172961,348172759,118227213,58103033,58102746,255599053,29062473,73664676,217254339,26016069,143994169,34751566,22899851,19645145,14604316,14604145,9747273,290203217,290202627,290203029,290203125,230280393,230280565,230280839,290202890,230280665,230280740,174033188,238809205,219872323,85441920,85442027,85442324,85442658,295429557,31232642,118720768,66345578,64979755,9747680,3654444,354826097,174209343,374346584,374346578,374346566,374346536,374346518,374346506,374346440,272272960,82537981,272272962,331110005,253646536,69972925,297108748,95089740,264157290,3654394,51204969,28460870,270165801,93513660,107137565,200476847,241036508,345846433,13728685,3193491,235796705,74366070,293115267,65027631,226460783,132730188,267647225,331743020,348075711,328602395,232135696,13385987,303726380];\n\nexport default Music;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nclass Hands extends Object3D {\n  constructor() {\n    if (\n      !Hands.mesh\n      || !Hands.pointerMesh\n    ) Hands.setup();\n\n    super();\n    const { mesh, pointerMesh } = Hands;\n    for (let i = 0; i < 2; i += 1) {\n      const hand = mesh.clone();\n      hand.buttons = {\n        menu: false,\n        menuDown: false,\n        menuUp: false,\n        grip: false,\n        gripDown: false,\n        gripUp: false,\n        pad: false,\n        padDown: false,\n        padUp: false,\n        trigger: false,\n        triggerDown: false,\n        triggerUp: false,\n      };\n      hand.pointer = pointerMesh.clone();\n      hand.pointer.visible = false;\n      hand.add(hand.pointer);\n      hand.matrixAutoUpdate = false;\n      hand.setupRaycaster = raycaster => Hands.setupRaycaster({ hand, raycaster });\n      hand.visible = false;\n      this.add(hand);\n    }\n  }\n\n  update() {\n    const { children } = this;\n    const gamepads = ('getGamepads' in navigator ? navigator.getGamepads() : []);\n    children.forEach((hand) => {\n      hand.visible = false;\n    });\n    let hand = 0;\n    for (let i = 0; i < gamepads.length; i += 1) {\n      const gamepad = gamepads[i];\n      if (\n        gamepad\n        && (\n          gamepad.id === 'OpenVR Gamepad'\n          || gamepad.id.startsWith('Oculus Touch')\n          || gamepad.id.startsWith('Spatial Controller')\n        )\n      ) {\n        if (gamepad.pose) {\n          this.updateHand({\n            hand: children[hand],\n            buttons: gamepad.buttons,\n            pose: gamepad.pose,\n          });\n        }\n        hand += 1;\n        if (hand > 1) break;\n      }\n    }\n  }\n\n  updateHand({\n    hand,\n    buttons,\n    pose,\n  }) {\n    const { standingMatrix } = this;\n    if (pose.position !== null) {\n      hand.position.fromArray(pose.position);\n    }\n    if (pose.orientation !== null) {\n      hand.quaternion.fromArray(pose.orientation);\n    }\n    hand.matrix.compose(hand.position, hand.quaternion, hand.scale);\n    hand.matrix.premultiply(standingMatrix);\n    hand.matrixWorldNeedsUpdate = true;\n    hand.visible = true;\n\n    const menu = buttons[3] && buttons[3].pressed;\n    hand.buttons.menuDown = menu && hand.buttons.menu !== menu;\n    hand.buttons.menuUp = !menu && hand.buttons.menu !== menu;\n    hand.buttons.menu = menu;\n    const grip = buttons[2] && buttons[2].pressed;\n    hand.buttons.gripDown = grip && hand.buttons.grip !== grip;\n    hand.buttons.gripUp = !grip && hand.buttons.grip !== grip;\n    hand.buttons.grip = grip;\n    const pad = buttons[0] && buttons[0].pressed;\n    hand.buttons.padDown = pad && hand.buttons.pad !== pad;\n    hand.buttons.padUp = !pad && hand.buttons.pad !== pad;\n    hand.buttons.pad = pad;\n    const trigger = buttons[1] && buttons[1].pressed;\n    hand.buttons.triggerDown = trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.triggerUp = !trigger && hand.buttons.trigger !== trigger;\n    hand.buttons.trigger = trigger;\n  }\n\n  static setupRaycaster({ hand, raycaster }) {\n    if (!hand.auxMatrix) {\n      hand.auxMatrix = new Matrix4();\n    }\n    const { auxMatrix, matrixWorld } = hand;\n    auxMatrix.identity().extractRotation(matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(auxMatrix);\n    raycaster.ray.origin.addScaledVector(raycaster.ray.direction, -0.175);\n  }\n\n  static setup() {\n    if (!Hands.geometry) {\n      const geometry = new BoxGeometry(1, 1, 1);\n      geometry.scale(0.05, 0.03, 0.2);\n      geometry.translate(0, 0, 0.075);\n      geometry.faces.forEach((face, i) => {\n        face.color.set(0x777777);\n        if (i >= 10 && i <= 11) {\n          face.color.offsetHSL(0, 0, -0.1);\n        }\n      });\n      Hands.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Hands.material) {\n      Hands.material = new MeshBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.mesh) {\n      Hands.mesh = new Mesh(\n        Hands.geometry,\n        Hands.material\n      );\n    }\n    if (!Hands.pointerGeometry) {\n      Hands.pointerGeometry = (new BufferGeometry())\n        .setFromPoints([new Vector3(0, 0, 0), new Vector3(0, 0, -1)]);\n    }\n    if (!Hands.pointerMaterial) {\n      Hands.pointerMaterial = new LineBasicMaterial({\n        color: 0xffe0bd,\n      });\n    }\n    if (!Hands.pointerMesh) {\n      Hands.pointerMesh = new Line(\n        Hands.pointerGeometry,\n        Hands.pointerMaterial\n      );\n    }\n  }\n}\n\nexport default Hands;\n","import React, { Component } from 'react';\nimport Stats from 'stats.js';\nimport {\n  Clock,\n  FogExp2,\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Scene,\n  ShaderChunk,\n  WebGLRenderer,\n} from 'three';\nimport Hands from './hands';\n\nclass Renderer extends Component {\n  constructor(props) {\n    super(props);\n    this.canvas = React.createRef();\n    this.onAnimationTick = this.onAnimationTick.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    const { canvas: { current: canvas } } = this;\n    this.camera = new PerspectiveCamera(80, 1, 0.1, 1024);\n    this.clock = new Clock();\n    this.raycaster = new Raycaster();\n    this.room = new Object3D();\n    this.room.add(this.camera);\n    this.hands = new Hands();\n    this.room.add(this.hands);\n    this.resetCamera();\n    this.resetScene();\n    const renderer = new WebGLRenderer({\n      antialias: true,\n      canvas,\n      powerPreference: 'high-performance',\n      stencil: false,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio || 1);\n    renderer.setClearColor(this.scene.fog.color);\n    renderer.setAnimationLoop(this.onAnimationTick);\n    window.addEventListener('resize', this.onResize, false);\n    this.renderer = renderer;\n    this.onResize();\n    this.setupVR();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  onAnimationTick() {\n    const {\n      camera,\n      clock,\n      hands,\n      renderer,\n      scene,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    renderer.animation = {\n      delta: clock.getDelta(),\n      time: clock.oldTime / 1000,\n    };\n    hands.update();\n    renderer.render(scene, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      canvas: { current: canvas },\n      camera,\n      renderer,\n    } = this;\n    const { width, height } = canvas.parentNode.getBoundingClientRect();\n    this.width = width;\n    this.height = height;\n    if (!renderer.vr.isPresenting()) {\n      renderer.setSize(width, height);\n    }\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  getMaxAnisotropy() {\n    const { renderer } = this;\n    return renderer.capabilities.getMaxAnisotropy();\n  }\n\n  setupVR() {\n    const { hands, renderer } = this;\n    const hasWebXR = 'xr' in navigator;\n    const hasWebVR = 'getVRDisplays' in navigator;\n    if (hasWebXR) {\n      // TODO:\n      // Verify that this actually works\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.xr.requestDevice().then((display) => {\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display\n          .requestSession({ immersive: true, exclusive: true /* DEPRECATED */ })\n          .then((session) => {\n            renderer.vr.setSession(session, { frameOfReferenceType: 'stage' });\n          });\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      enterVR();\n    } else if (hasWebVR) {\n      const enterVR = () => {\n        if (renderer.vr.isPresenting()) return;\n        const display = renderer.vr.getDevice();\n        if (!display) {\n          navigator.getVRDisplays().then((displays) => {\n            if (!displays.length) return;\n            const [display] = displays;\n            renderer.vr.enabled = true;\n            renderer.vr.setDevice(display);\n          });\n          return;\n        }\n        display.requestPresent([{ source: renderer.domElement }]);\n      };\n      window.addEventListener('mousedown', enterVR, false);\n      window.addEventListener('vrdisplayactivate', enterVR, false);\n      enterVR();\n    }\n    hands.standingMatrix = renderer.vr.getStandingMatrix();\n  }\n\n  resetCamera() {\n    const { camera } = this;\n    camera.position.set(0, 1.25, 0);\n    camera.rotation.set(0, 0, 0);\n  }\n\n  resetScene() {\n    if (this.scene) {\n      this.scene.children.forEach((child) => {\n        if (child.dispose) child.dispose();\n      });\n    }\n    this.room.position.set(0, 0, 0);\n    this.scene = new Scene();\n    this.scene.add(this.room);\n    this.scene.fog = new FogExp2(0, 0.0125);\n    this.scene.fog.color.setRGB(0.01, 0.01, 0.08);\n    return this.scene;\n  }\n\n  render() {\n    const { canvas } = this;\n    return (\n      <canvas ref={canvas} />\n    );\n  }\n}\n\n// Fix threeJS Fog\nShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n  'fogDepth = -mvPosition.z;',\n  'fogDepth = mvPosition;'\n);\nShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n  'varying float fogDepth;',\n  'varying vec4 fogDepth;'\n);\nShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n  'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n  [\n    'float fogDist = length(fogDepth);',\n    'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n  ].join('\\n')\n).replace(\n  'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n  'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n);\n\nexport default Renderer;\n","import PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport {\n  TiKey,\n  TiSocialGooglePlusCircular,\n  TiTimes,\n} from 'react-icons/ti';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-redux-i18n';\n\nimport styled from 'styled-components';\nimport {\n  hideSessionPopup as hide,\n  login,\n  loginWithGoogle,\n  register,\n} from '@/actions/user';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, .5);\n`;\n\nconst Popup = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 512px;\n  background: #444;\n  box-shadow: 0 0 32px rgba(0, 0, 0, .5);\n`;\n\nconst Heading = styled.div`\n  background: #111;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 56px;\n  .tabs {\n    display: flex;\n    height: 100%;\n    > a {\n      display: flex;\n      align-items: center;\n      background: #222;\n      padding: 0 1rem;\n      border-left: 1px solid #333;\n      cursor: pointer;\n      &:first-child {\n        border-left: none;\n      }\n      &.active {\n        background: #444;\n        cursor: default;\n      }\n    }\n  }\n  > a {\n    padding: 1rem;\n    > svg {\n      font-size: 1.5em;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  button {\n    display: flex;\n    align-items: center;\n    border: 1px solid #555;\n    background: #222;\n    padding: 0.5rem 1rem;\n    margin: 0;\n    font-family: inherit;\n    font-weight: 700;\n    font-size: 1.2rem;\n    color: inherit;\n    cursor: pointer;\n    outline: 0;\n    > svg {\n      font-size: 1.5em;\n      margin-right: 0.5rem;\n    }\n  }\n  .or {\n    position: relative;\n    width: 100%;\n    border-top: 1px solid #222;\n    margin: 2rem 0;\n    > span {\n      position: absolute;\n      display: block;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n  .google {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 80%;\n  > label {\n    width: 100%;\n    padding: 0;\n  }\n  > input {\n    box-sizing: border-box;\n    border: 1px solid #333;\n    width: 100%;\n    background: #222;\n    color: inherit;\n    font-family: inherit;\n    font-weight: 400;\n    font-size: 2em;\n    padding: 0.5rem;\n    margin: 0 0 1rem;\n  }\n`;\n\nclass Session extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.onLoginSubmit = this.onLoginSubmit.bind(this);\n    this.onRegisterSubmit = this.onRegisterSubmit.bind(this);\n    this.state = { tab: 'login' };\n  }\n\n  onLoginSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { login } = this.props;\n    login({\n      email: form.email.value,\n      password: form.password.value,\n    });\n  }\n\n  onRegisterSubmit(e) {\n    e.preventDefault();\n    const { target: form } = e;\n    const { register } = this.props;\n    if (form.password.value !== form.confirmPassword.value) {\n      return;\n    }\n    register({\n      email: form.email.value,\n      name: form.name.value,\n      password: form.password.value,\n    });\n  }\n\n  render() {\n    const {\n      isSigningIn,\n      hide,\n      loginWithGoogle,\n    } = this.props;\n    const { tab } = this.state;\n    if (!isSigningIn) {\n      return null;\n    }\n    let FormComponent;\n    switch (tab) {\n      case 'register':\n        FormComponent = (\n          <Form onSubmit={this.onRegisterSubmit}>\n            <label><Translate value=\"User.name\" /></label>\n            <input type=\"text\" name=\"name\" required />\n            <label><Translate value=\"User.email\" /></label>\n            <input type=\"email\" name=\"email\" required />\n            <label><Translate value=\"User.password\" /></label>\n            <input type=\"password\" name=\"password\" required />\n            <label><Translate value=\"User.confirmPassword\" /></label>\n            <input type=\"password\" name=\"confirmPassword\" required />\n            <button\n              type=\"submit\"\n            >\n              <TiKey />\n              <Translate value=\"User.register\" />\n            </button>\n          </Form>\n        );\n        break;\n      default:\n        FormComponent = (\n          <Form onSubmit={this.onLoginSubmit}>\n            <label><Translate value=\"User.email\" /></label>\n            <input type=\"email\" name=\"email\" required />\n            <label><Translate value=\"User.password\" /></label>\n            <input type=\"password\" name=\"password\" required />\n            <button\n              type=\"submit\"\n            >\n              <TiKey />\n              <Translate value=\"User.signIn\" />\n            </button>\n          </Form>\n        );\n        break;\n    }\n    return (\n      <Wrapper>\n        <Popup>\n          <Heading>\n            <div className=\"tabs\">\n              <a\n                className={tab === 'login' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'login' })}\n              >\n                <Translate value=\"User.signIn\" />\n              </a>\n              <a\n                className={tab === 'register' ? 'active' : null}\n                onClick={() => this.setState({ tab: 'register' })}\n              >\n                <Translate value=\"User.register\" />\n              </a>\n            </div>\n            <a\n              onClick={hide}\n            >\n              <TiTimes />\n            </a>\n          </Heading>\n          <Content>\n            {FormComponent}\n            <div className=\"or\">\n              <Translate value=\"User.or\" />\n            </div>\n            <div className=\"google\">\n              <button\n                onClick={loginWithGoogle}\n                type=\"button\"\n              >\n                <TiSocialGooglePlusCircular />\n                <Translate value=\"User.signInWithGoogle\" />\n              </button>\n            </div>\n          </Content>\n        </Popup>\n      </Wrapper>\n    );\n  }\n}\n\nSession.propTypes = {\n  isSigningIn: PropTypes.bool.isRequired,\n  hide: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  loginWithGoogle: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    user: {\n      isSigningIn,\n    },\n  }) => ({\n    isSigningIn,\n  }),\n  {\n    hide,\n    login,\n    loginWithGoogle,\n    register,\n  }\n)(Session);\n","import { setLocale as reduxSetLocale } from 'react-redux-i18n';\nimport * as types from './types';\nimport API from '@/services/api';\n\nexport function hideSessionPopup() {\n  return {\n    type: types.USER_HIDE_SESSION_POPUP,\n  };\n}\n\nexport function register({ email, name, password }) {\n  return dispatch => dispatch({\n    type: types.USER_REGISTER,\n    payload: API.fetch({\n      body: {\n        email,\n        name,\n        password,\n      },\n      endpoint: 'user',\n      method: 'PUT',\n    }),\n  }).catch(() => {});\n}\n\nexport function refreshSession() {\n  return dispatch => dispatch({\n    type: types.USER_REFRESH_SESSION,\n    payload: API.fetch({\n      endpoint: 'user',\n    }),\n  }).catch(() => {});\n}\n\nexport function setLocale(locale) {\n  return (dispatch) => {\n    localStorage.setItem('REALMSVR::LOCALE', locale);\n    dispatch(reduxSetLocale(locale));\n  };\n}\n\nexport function showSessionPopup() {\n  return {\n    type: types.USER_SHOW_SESSION_POPUP,\n  };\n}\n\nexport function login({ email, password }) {\n  return dispatch => dispatch({\n    type: types.USER_LOGIN,\n    payload: API.fetch({\n      body: {\n        email,\n        password,\n      },\n      endpoint: 'user',\n      method: 'POST',\n    }),\n  }).catch(() => {});\n}\n\nexport function loginWithGoogle() {\n  return (dispatch) => {\n    const w = 512;\n    const h = 512;\n    const left = (window.screen.width / 2) - w / 2;\n    const top = (window.screen.height / 2) - h / 2;\n    const win = window.open(\n      `${API.baseURL}user/google`,\n      'loginWithGoogle',\n      `width=${w},height=${h},top=${top},left=${left}`\n    );\n    const watcher = setInterval(() => {\n      if (!win.window) {\n        clearInterval(watcher);\n        return;\n      }\n      win.postMessage(true, API.baseURL);\n    }, 100);\n    const onMessage = ({ origin, data: { session } }) => {\n      if (API.baseURL.indexOf(origin) === 0) {\n        window.removeEventListener('message', onMessage);\n        clearInterval(watcher);\n        if (!session) {\n          return;\n        }\n        dispatch({\n          type: types.USER_LOGIN_FULFILLED,\n          payload: session,\n        });\n      }\n    };\n    window.addEventListener('message', onMessage, false);\n  };\n}\n\nexport function signout() {\n  return {\n    type: types.USER_SIGNOUT,\n  };\n}\n","import Worker from '@/services/mesher.worker';\n\nclass Mesher {\n  constructor() {\n    this.promiseId = 0;\n    this.promises = {};\n    this.worker = new Worker();\n    this.worker.onmessage = this.onMessage.bind(this);\n  }\n\n  generate({ size, voxels }) {\n    const { promiseId, promises, worker } = this;\n    return new Promise((resolve) => {\n      promises[promiseId] = resolve;\n      this.promiseId += 1;\n      worker.postMessage({\n        promiseId,\n        size,\n        voxels,\n      });\n    });\n  }\n\n  onMessage({ data: { geometry, promiseId } }) {\n    const { promises } = this;\n    promises[promiseId](geometry);\n    delete promises[promiseId];\n  }\n}\n\nexport default new Mesher();\n","import * as types from './types';\nimport API from '@/services/api';\nimport Mesher from '@/services/mesher';\n\nexport function create() {\n  return {\n    type: types.REALM_CREATE,\n    payload: API.fetch({\n      endpoint: 'realm',\n      method: 'PUT',\n    }),\n  };\n}\n\nexport function generateGeometry({ size, voxels }) {\n  return {\n    type: types.REALM_UPDATE_GEOMETRY,\n    payload: Mesher.generate({ size, voxels }),\n  };\n}\n\nexport function fetch(slug) {\n  return dispatch => dispatch({\n    type: types.REALM_FETCH,\n    payload: API.fetch({\n      endpoint: `realm/${slug}`,\n    })\n      .then(realm => (\n        API.fetch({\n          endpoint: `realm/${realm._id}/voxels`,\n        })\n          .then((voxels) => {\n            voxels = new Uint32Array(voxels);\n            dispatch(generateGeometry({ size: realm.size, voxels }));\n            return {\n              ...realm,\n              voxels,\n            };\n          })\n      )),\n  });\n}\n\nexport function reset() {\n  return {\n    type: types.REALM_RESET,\n  };\n}\n\nexport function updateVoxels({\n  color,\n  normal,\n  point,\n  remove,\n}) {\n  return (dispatch, getState) => {\n    const {\n      realm: {\n        id,\n        isCreator,\n        size,\n        voxels: current,\n      },\n    } = getState();\n    // Normalize & 3D wrap voxel position\n    const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n      let position = Math.floor(point[axis] + (normal[axis] * 0.5 * (remove ? -1 : 1)));\n      while (position < 0) position += size;\n      while (position >= size) position -= size;\n      return position;\n    });\n    // Randomize the color just a bit\n    const randomized = {\n      r: Math.min(Math.max(Math.round((color.r * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      g: Math.min(Math.max(Math.round((color.g * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n      b: Math.min(Math.max(Math.round((color.b * 0xFF) + (Math.random() * 8) - 4), 0), 255),\n    };\n    const value = remove ? (\n      0x00\n    ) : (\n      (0x01 << 24) | (randomized.r << 16) | (randomized.g << 8) | randomized.b\n    );\n    // Update the voxels data\n    const voxels = new Uint32Array(current);\n    voxels[z * size * size + y * size + x] = value;\n    // Request a geometry generation\n    dispatch(generateGeometry({ size, voxels }));\n    if (isCreator) {\n      // Send update to server\n      const body = new FormData();\n      body.append('voxels', new Blob([voxels.buffer], { type: 'text/plain' }));\n      API.fetch({\n        body,\n        endpoint: `realm/${id}/voxels`,\n        method: 'PUT',\n      });\n    }\n    return dispatch({\n      type: types.REALM_UPDATE_VOXELS,\n      payload: { voxels },\n    });\n  };\n}\n","import {\n  BufferGeometry,\n  Color,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  VertexColors,\n} from 'three';\n\nclass Ground extends Mesh {\n  constructor() {\n    if (\n      !Ground.geometry\n      || !Ground.material\n    ) {\n      Ground.setup();\n    }\n    super(\n      Ground.geometry,\n      Ground.material\n    );\n  }\n\n  static setup() {\n    if (!Ground.geometry) {\n      const size = 256;\n      const geometry = new PlaneGeometry(size, size, size, size);\n      geometry.rotateX(Math.PI * -0.5);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x666655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Ground.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Ground.material) {\n      Ground.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Ground;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  CanvasTexture,\n  DoubleSide,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Panel extends Mesh {\n  constructor({\n    anisotropy,\n    width = 512,\n    height = 512,\n  }) {\n    if (\n      !Panel.backplate\n      || !Panel.geometry\n    ) {\n      Panel.setup();\n    }\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      Panel.geometry,\n      new MeshBasicMaterial({\n        map: texture,\n      })\n    );\n    this.add(Panel.backplate.clone());\n    this.context = renderer.getContext('2d');\n    this.pointer = new Vector3();\n    this.renderer = renderer;\n    this.texture = texture;\n  }\n\n  dispose() {\n    const { material, texture } = this;\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      renderer,\n      texture,\n    } = this;\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    texture.needsUpdate = true;\n  }\n\n  onPointer(point) {\n    const { pointer, renderer } = this;\n    this.worldToLocal(pointer.copy(point));\n    pointer.set(\n      (pointer.x + 0.5) * renderer.width,\n      (1 - (pointer.y + 0.5)) * renderer.height,\n      0\n    );\n  }\n\n  static setup() {\n    if (!Panel.backplate) {\n      const geometry = new BoxGeometry(1, 1, 0.06);\n      geometry.faces.splice(8, 2);\n      geometry.faces.forEach((face, i) => (\n        face.color.setHex(\n          Math.floor(i / 2) === 4 ? 0x111111 : 0x222222\n        )\n      ));\n      geometry.translate(0, 0, -0.01);\n      const backplate = new Mesh(\n        (new BufferGeometry()).fromGeometry(geometry),\n        new MeshBasicMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      Panel.backplate = backplate;\n    }\n\n    if (!Panel.geometry) {\n      Panel.geometry = new PlaneBufferGeometry(1, 1);\n    }\n  }\n}\n\nexport default Panel;\n","class Fonts {\n  constructor() {\n    this.loaded = {};\n  }\n\n  waitUntilLoaded(fonts) {\n    const { loaded } = this;\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    return Promise.all(\n      fonts\n        .map(font => (\n          new Promise((resolve) => {\n            if (loaded[font]) {\n              resolve();\n              return;\n            }\n            const check = () => {\n              if (document.fonts.check(`1rem ${font}`)) {\n                loaded[font] = true;\n                resolve();\n                return;\n              }\n              setTimeout(check, 10);\n            };\n            check();\n          })\n        ))\n    );\n  }\n}\n\nexport default new Fonts();\n","import {\n  BufferGeometry,\n  Color,\n  CylinderGeometry,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  VertexColors,\n} from 'three';\nimport Panel from '@/components/panel';\nimport API from '@/services/api';\nimport Fonts from '@/services/fonts';\n\nclass Pillar extends Mesh {\n  constructor() {\n    if (!Pillar.geometry || !Pillar.material) {\n      Pillar.setup();\n    }\n    super(\n      Pillar.geometry,\n      Pillar.material\n    );\n  }\n\n  static setup() {\n    if (!Pillar.geometry) {\n      const geometry = new CylinderGeometry(0.025, 0.025, 1, 8, 16);\n      geometry.translate(0, -0.575, 0);\n      const color = new Color();\n      geometry.faces.forEach((face, i) => {\n        if (i % 2 === 1) {\n          face.color.copy(color);\n        } else {\n          face.color.setHex(0x556655);\n          face.color.offsetHSL(0, 0, Math.random() * -0.1);\n          color.copy(face.color);\n        }\n      });\n      Pillar.geometry = (new BufferGeometry()).fromGeometry(geometry);\n    }\n    if (!Pillar.material) {\n      Pillar.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nclass Realm extends Panel {\n  constructor({\n    anisotropy,\n    name,\n    onPointer,\n    screenshot,\n  }) {\n    super({\n      anisotropy,\n    });\n    this.name = name;\n    this.onPointer = onPointer;\n    this.scale.set(0.3, 0.3, 1);\n    {\n      const { width, height } = this.renderer;\n      const vignette = this.context.createRadialGradient(\n        width * 0.5, height * 0.5, width * 0.2,\n        width * 0.5, height * 0.5, width * 0.5\n      );\n      vignette.addColorStop(0, 'rgba(0, 0, 0, 0)');\n      vignette.addColorStop(1, 'rgba(0, 0, 0, .5)');\n      this.vignette = vignette;\n    }\n    let hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        hasLoadedFont = true;\n        this.draw();\n      });\n    if (screenshot) {\n      const image = new Image();\n      image.src = `data:image/jpeg;base64,${screenshot}`;\n      image.onload = () => {\n        this.screenshot = image;\n        if (hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isHover,\n      name,\n      renderer,\n      screenshot,\n      vignette,\n    } = this;\n    super.draw();\n    if (screenshot) {\n      ctx.drawImage(screenshot, 0, 0);\n    }\n    ctx.fillStyle = vignette;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.fillStyle = `rgba(${isHover ? '255, 255, 255' : '0, 0, 0'}, .5)`;\n    ctx.fillRect(0, renderer.height * 0.75, renderer.width, renderer.height * 0.25);\n    ctx.font = '700 60px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = isHover ? '#333' : '#fff';\n    ctx.fillText(\n      name,\n      renderer.width * 0.5,\n      renderer.height * 0.875\n    );\n  }\n}\n\nclass ButtonsPanel extends Panel {\n  constructor({\n    anisotropy,\n  }) {\n    super({\n      anisotropy,\n      width: 256,\n      height: 256,\n    });\n    this.scale.set(0.25, 0.25, 1);\n    this.hasLoadedFont = false;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => {\n        this.hasLoadedFont = true;\n        this.draw();\n      });\n  }\n\n  draw() {\n    const {\n      buttons,\n      context: ctx,\n    } = this;\n    super.draw();\n    ctx.font = '700 30px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    buttons.forEach(({\n      label,\n      x,\n      y,\n      width,\n      height,\n      isActive,\n      isDisabled,\n    }) => {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      if (isDisabled) {\n        ctx.fillStyle = '#555';\n      } else if (isActive) {\n        ctx.fillStyle = '#fff';\n      } else {\n        ctx.fillStyle = '#222';\n      }\n      ctx.strokeStyle = '#333';\n      ctx.fill();\n      ctx.stroke();\n      if (isDisabled) {\n        ctx.fillStyle = '#777';\n      } else if (isActive) {\n        ctx.fillStyle = '#222';\n      } else {\n        ctx.fillStyle = '#fff';\n      }\n      ctx.fillText(\n        label,\n        width * 0.5,\n        height * 0.5\n      );\n      ctx.restore();\n    });\n  }\n\n  onPointer({ isDown, point }) {\n    const { buttons, pointer } = this;\n    if (!isDown) return;\n    super.onPointer(point);\n    buttons\n      .filter(({ isDisabled }) => (!isDisabled))\n      .forEach(({\n        x,\n        y,\n        width,\n        height,\n        onPointer,\n      }) => {\n        if (\n          pointer.x < x\n          || pointer.x > x + width\n          || pointer.y < y\n          || pointer.y > y + height\n        ) {\n          return;\n        }\n        onPointer();\n      });\n  }\n}\n\nclass CreateRealm extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    history,\n    createRealm,\n  }) {\n    super({ anisotropy });\n    this.scale.set(0.3, 0.3, 1);\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: 'Create Realm',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: () => (\n          createRealm()\n            .then(({ value: slug }) => history.push(`/${slug}`))\n        ),\n      },\n    ];\n  }\n}\n\nclass Pagination extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    page,\n    pages,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        label: '<',\n        x: width * 0.1,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page > 0) update(this.page - 1);\n        },\n      },\n      {\n        label: '>',\n        x: width * 0.6,\n        y: height * 0.3,\n        width: width * 0.3,\n        height: height * 0.4,\n        onPointer: () => {\n          if (this.page < this.pages - 1) update(this.page + 1);\n        },\n      },\n    ];\n    this.page = page;\n    this.pages = pages;\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      page,\n      pages,\n      renderer,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    ctx.fillText(\n      `${page + 1} / ${pages}`,\n      renderer.width * 0.5,\n      renderer.height * 0.85\n    );\n  }\n}\n\nclass Session extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isSigningIn,\n    user,\n    signin,\n    signout,\n  }) {\n    super({ anisotropy });\n    this.signin = signin;\n    this.signout = signout;\n    this.updateSession({\n      isSigningIn,\n      user,\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { renderer, signin, signout } = this;\n    const { width, height } = renderer;\n    if (isSigningIn) {\n      this.buttons = [];\n    } else if (!user) {\n      this.buttons = [{\n        label: 'Sign-In',\n        x: width * 0.1,\n        y: height * 0.4,\n        width: width * 0.8,\n        height: height * 0.4,\n        onPointer: signin,\n      }];\n    } else {\n      this.buttons = [{\n        label: 'Sign-Out',\n        x: width * 0.1,\n        y: height * 0.7,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: signout,\n      }];\n    }\n    this.isSigningIn = isSigningIn;\n    this.user = user;\n    delete this.userPhoto;\n    if (user) {\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.src = `${API.baseURL}user/${user._id}/photo`;\n      image.onload = () => {\n        this.userPhoto = image;\n        if (this.hasLoadedFont) {\n          this.draw();\n        }\n      };\n    }\n  }\n\n  draw() {\n    const {\n      context: ctx,\n      isSigningIn,\n      renderer,\n      user,\n      userPhoto,\n    } = this;\n    super.draw();\n    ctx.fillStyle = '#fff';\n    if (isSigningIn) {\n      ctx.fillText(\n        'Remove your',\n        renderer.width * 0.5,\n        renderer.height * 0.25\n      );\n      ctx.fillText(\n        'headset',\n        renderer.width * 0.5,\n        renderer.height * 0.4\n      );\n      ctx.fillText(\n        'And Sign-In',\n        renderer.width * 0.5,\n        renderer.height * 0.6\n      );\n      ctx.fillText(\n        'in your browser',\n        renderer.width * 0.5,\n        renderer.height * 0.75\n      );\n    } else {\n      ctx.fillText(\n        user ? user.firstName : 'Guest',\n        renderer.width * 0.5,\n        renderer.height * 0.2\n      );\n    }\n    if (user && userPhoto) {\n      ctx.drawImage(\n        userPhoto,\n        renderer.width * 0.5 - 40, renderer.height * 0.5 - 50,\n        80, 80\n      );\n    }\n  }\n}\n\nclass Filter extends ButtonsPanel {\n  constructor({\n    anisotropy,\n    isAuth,\n    filter,\n    update,\n  }) {\n    super({ anisotropy });\n    const { width, height } = this.renderer;\n    this.buttons = [\n      {\n        id: 'all',\n        label: 'All Realms',\n        x: width * 0.1,\n        y: height * 0.2,\n        width: width * 0.8,\n        height: height * 0.2,\n        onPointer: () => update('all'),\n      },\n      {\n        id: 'user',\n        label: 'Your Realms',\n        x: width * 0.1,\n        y: height * 0.6,\n        width: width * 0.8,\n        height: height * 0.2,\n        isDisabled: !isAuth,\n        onPointer: () => update('user'),\n      },\n    ];\n    this.filter = filter;\n    this.update = update;\n  }\n\n  updateSession({ isAuth }) {\n    this.buttons[1].isDisabled = !isAuth;\n  }\n\n  draw() {\n    const { buttons, filter } = this;\n    buttons.forEach((button) => {\n      button.isActive = button.id === filter;\n    });\n    super.draw();\n  }\n}\n\nclass Menu extends Object3D {\n  constructor({\n    anisotropy,\n    filter,\n    history,\n    isSigningIn,\n    pagination,\n    realms,\n    user,\n    createRealm,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }) {\n    super();\n    this.anisotropy = anisotropy;\n    this.history = history;\n    this.hover = {};\n    this.intersects = [];\n    this.position.set(0, 1, -1);\n    this.pagination = this.addPanel(\n      Pagination,\n      {\n        ...pagination,\n        update: setPage,\n      },\n      0, -0.3, 0.13\n    );\n    this.session = this.addPanel(\n      Session,\n      {\n        isSigningIn,\n        user,\n        signin,\n        signout,\n      },\n      -0.3, -0.3, 0.13\n    );\n    this.filter = this.addPanel(\n      Filter,\n      {\n        filter,\n        isAuth: !!user,\n        update: setFilter,\n      },\n      0.3, -0.3, 0.13\n    );\n    this.createRealm = createRealm;\n    this.updateRealms(realms);\n  }\n\n  addPanel(Panel, props, x, y, z) {\n    const { anisotropy, intersects } = this;\n    const panel = new Panel({ ...props, anisotropy });\n    panel.position.set(x, y, z);\n    panel.lookAt(0, 0.5, 1);\n    this.add(panel);\n    const pillar = new Pillar();\n    pillar.position.copy(panel.position);\n    this.add(pillar);\n    intersects.push(panel);\n    return panel;\n  }\n\n  dispose() {\n    const { children } = this;\n    children.forEach(child => child.dispose && child.dispose());\n  }\n\n  setHover({ hand, realm }) {\n    const { hover } = this;\n    if (hover[hand] === realm) {\n      return;\n    }\n    if (hover[hand]) {\n      hover[hand].isHover = false;\n      hover[hand].draw();\n    }\n    if (realm) {\n      realm.isHover = true;\n      realm.draw();\n    }\n    this.hover[hand] = realm;\n  }\n\n  updateFilter(value) {\n    const { filter } = this;\n    filter.filter = value;\n    filter.draw();\n  }\n\n  updatePagination({ page, pages }) {\n    const { pagination } = this;\n    pagination.page = page;\n    pagination.pages = pages;\n    pagination.draw();\n  }\n\n  updateRealms(realms) {\n    const {\n      anisotropy,\n      children,\n      createRealm,\n      filter: { filter },\n      history,\n      pagination,\n    } = this;\n    while (children.length > 6) {\n      this.remove(children[children.length - 1]);\n    }\n    this.intersects.length = 3;\n    const showCreateRealm = filter === 'user' && pagination.page === 0;\n    const count = realms.length + (showCreateRealm ? 1 : 0);\n    let offset = 0.25 + count * -0.25;\n    if (showCreateRealm) {\n      this.addPanel(\n        CreateRealm,\n        {\n          history,\n          createRealm,\n        },\n        offset, 0, 0\n      );\n      offset += 0.5;\n    }\n    realms.forEach((realm, i) => {\n      const panel = this.addPanel(\n        Realm,\n        {\n          ...realm,\n          anisotropy,\n          onPointer: ({ hand, isDown }) => {\n            this.setHover({ hand, realm: panel });\n            if (isDown) {\n              history.push(`/${realm.slug}`);\n            }\n          },\n        },\n        offset + (i * 0.5), 0, 0\n      );\n    });\n  }\n\n  updateSession({ isSigningIn, user }) {\n    const { filter, session } = this;\n    filter.updateSession({ isAuth: !!user });\n    filter.draw();\n    session.updateSession({ isSigningIn, user });\n    session.draw();\n  }\n}\n\nexport default Menu;\n","import {\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  VertexColors,\n  BufferAttribute,\n  Vector3,\n} from 'three';\n\nclass Starfield extends Points {\n  constructor() {\n    if (\n      !Starfield.geometry\n      || !Starfield.material\n    ) {\n      Starfield.setup();\n    }\n    super(\n      Starfield.geometry,\n      Starfield.material\n    );\n  }\n\n  static setup() {\n    if (!Starfield.geometry) {\n      const count = 2048;\n      const radius = 512;\n      const position = new Float32Array(count * 3);\n      const color = new Float32Array(count * 3);\n      const aux = new Vector3();\n      for (let i = 0; i < count * 3; i += 3) {\n        aux\n          .set(\n            Math.random() * 2 - 1,\n            Math.random(),\n            Math.random() * 2 - 1\n          )\n          .normalize()\n          .multiplyScalar(radius);\n        position[i] = aux.x;\n        position[i + 1] = aux.y;\n        position[i + 2] = aux.z;\n        const c = 0.2 + Math.random() * 0.5;\n        color[i] = c - Math.random() * 0.1;\n        color[i + 1] = c - Math.random() * 0.1;\n        color[i + 2] = c - Math.random() * 0.1;\n      }\n      Starfield.geometry = new BufferGeometry();\n      Starfield.geometry.addAttribute('position', new BufferAttribute(position, 3));\n      Starfield.geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (!Starfield.material) {\n      Starfield.material = new PointsMaterial({\n        fog: false,\n        vertexColors: VertexColors,\n      });\n    }\n  }\n}\n\nexport default Starfield;\n","import {\n  CanvasTexture,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneBufferGeometry,\n} from 'three';\nimport Fonts from '@/services/fonts';\n\nclass Title extends Mesh {\n  constructor({ anisotropy }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = 1024;\n    renderer.height = 1024;\n    const texture = new CanvasTexture(renderer);\n    texture.anisotropy = anisotropy;\n    super(\n      new PlaneBufferGeometry(2, 2),\n      new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n      })\n    );\n    this.lookAt(0, -0.2, 1);\n    this.position.set(0, 2, -3);\n    this.renderer = renderer;\n    this.texture = texture;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  dispose() {\n    const { geometry, material, texture } = this;\n    geometry.dispose();\n    material.dispose();\n    texture.dispose();\n  }\n\n  draw() {\n    const { renderer, texture } = this;\n    const ctx = renderer.getContext('2d');\n    const grd = ctx.createLinearGradient(0, 0, 0, renderer.height);\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0.3)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\n    ctx.fillStyle = grd;\n    ctx.fillRect(0, 0, renderer.width, renderer.height);\n    ctx.font = '700 200px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = '#eee';\n    ctx.shadowColor = 'rgba(255, 255, 0, .5)';\n    ctx.shadowBlur = 50;\n    ctx.fillText(\n      'REALMS',\n      renderer.width * 0.5,\n      renderer.height * 0.2\n    );\n    ctx.font = '70px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.shadowBlur = 0;\n    ctx.fillText(\n      'A recursive VR experience',\n      renderer.width * 0.5,\n      renderer.height * 0.5\n    );\n    ctx.font = '50px Roboto';\n    ctx.fillStyle = '#999';\n    ctx.fillText(\n      `v${__VERSION__} - dani@gatunes © 2019`,\n      renderer.width * 0.5,\n      renderer.height * 0.8\n    );\n    texture.needsUpdate = true;\n  }\n}\n\nexport default Title;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Touches from 'touches';\nimport {\n  fetchRealms,\n  setFilter,\n  setPage,\n} from '@/actions/lobby';\nimport {\n  create as createRealm,\n} from '@/actions/realm';\nimport { showSessionPopup as signin, signout } from '@/actions/user';\nimport Ground from '@/components/lobby/ground';\nimport Menu from '@/components/lobby/menu';\nimport Starfield from '@/components/lobby/starfield';\nimport Title from '@/components/lobby/title';\nimport Renderer from '@/components/renderer';\n\nclass Lobby extends PureComponent {\n  componentDidMount() {\n    const {\n      filter,\n      hasLoaded,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      renderer: { current: renderer },\n      createRealm,\n      fetchRealms,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    } = this.props;\n    // Setup scene\n    const anisotropy = renderer.getMaxAnisotropy();\n    const scene = renderer.resetScene();\n    scene.add(new Ground());\n    scene.add(new Starfield());\n    scene.add(new Title({ anisotropy }));\n    this.menu = new Menu({\n      anisotropy,\n      filter,\n      history,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      createRealm,\n      setFilter,\n      setPage,\n      signin,\n      signout,\n    });\n    scene.add(this.menu);\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Input for non-vr browsers\n    if (!renderer.renderer.vr.enabled) {\n      this.touches = Touches(\n        window,\n        {\n          filtered: true,\n          target: renderer.canvas.current,\n        }\n      )\n        .on('start', this.onPointerDown.bind(this));\n    }\n    if (!hasLoaded) {\n      // Fetch realms\n      fetchRealms();\n    }\n  }\n\n  componentDidUpdate({\n    filter: previousFilter,\n    isSigningIn: wasSigningIn,\n    pagination: previousPagination,\n    realms: previousRealms,\n    user: previousUser,\n  }) {\n    const {\n      filter,\n      isSigningIn,\n      pagination,\n      realms,\n      user,\n      fetchRealms,\n      setFilter,\n    } = this.props;\n    const { menu } = this;\n    const filterHasUpdated = filter !== previousFilter;\n    if (\n      filterHasUpdated\n      || pagination.page !== previousPagination.page\n    ) {\n      // Fetch realms\n      fetchRealms();\n    }\n    if (filterHasUpdated) {\n      // Update filter\n      menu.updateFilter(filter);\n    }\n    if (isSigningIn !== wasSigningIn) {\n      // Update Session\n      menu.updateSession({ isSigningIn });\n    }\n    if (pagination !== previousPagination) {\n      // Update pagination\n      menu.updatePagination(pagination);\n    }\n    if (realms !== previousRealms) {\n      // Update realms\n      menu.updateRealms(realms);\n    }\n    if (user !== previousUser) {\n      // Update Session\n      menu.updateSession({ user });\n      if (!user && filter === 'user') {\n        setFilter('all');\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { scene, touches } = this;\n    delete scene.onBeforeRender;\n    if (touches) {\n      touches.disable();\n    }\n  }\n\n  onBeforeRender() {\n    const {\n      menu,\n      renderer: {\n        hands,\n        raycaster,\n      },\n    } = this;\n\n    // Handle controls\n    hands.children.forEach((hand, i) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        menu.setHover({ hand: i });\n        return;\n      }\n      const {\n        distance,\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Menu\n      object.onPointer({\n        hand: i,\n        isDown: buttons.triggerDown,\n        point,\n      });\n    });\n  }\n\n  onPointerDown(e, [x, y]) {\n    // Handle non-vr browsers input\n    const {\n      menu,\n      props: {\n        isSigningIn,\n      },\n      renderer: {\n        camera,\n        raycaster,\n        width,\n        height,\n      },\n    } = this;\n    if (isSigningIn) {\n      return;\n    }\n    raycaster.setFromCamera({\n      x: Math.min(Math.max(0.5 - (x / width), -0.5), 0.5) * -2,\n      y: Math.min(Math.max(0.5 - (y / height), -0.5), 0.5) * 2,\n    }, camera);\n    const hit = raycaster.intersectObjects(menu.intersects)[0] || false;\n    if (!hit) {\n      return;\n    }\n    hit.object.onPointer({\n      hand: 0,\n      isDown: true,\n      point: hit.point,\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nLobby.defaultProps = {\n  user: undefined,\n};\n\nLobby.propTypes = {\n  filter: PropTypes.string.isRequired,\n  hasLoaded: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  isSigningIn: PropTypes.bool.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pages: PropTypes.number.isRequired,\n  }).isRequired,\n  realms: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n  })).isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  user: PropTypes.shape({\n    _id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  createRealm: PropTypes.func.isRequired,\n  fetchRealms: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  setPage: PropTypes.func.isRequired,\n  signin: PropTypes.func.isRequired,\n  signout: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    lobby: {\n      filter,\n      hasLoaded,\n      pagination,\n      realms,\n    },\n    user: {\n      isAuth,\n      isSigningIn,\n      profile: user,\n    },\n  }) => ({\n    filter,\n    hasLoaded,\n    isSigningIn,\n    pagination,\n    realms,\n    user: isAuth ? user : undefined,\n  }),\n  {\n    createRealm,\n    fetchRealms,\n    setFilter,\n    setPage,\n    signin,\n    signout,\n  }\n)(Lobby);\n","import * as types from './types';\nimport API from '@/services/api';\n\nexport function fetchRealms() {\n  return (dispatch, getState) => {\n    const { lobby: { filter, pagination: { page } } } = getState();\n    return dispatch({\n      type: types.LOBBY_FETCH_REALMS,\n      payload: API.fetch({\n        endpoint: `realms/${filter === 'user' ? 'user/' : ''}${page}`,\n      }),\n    });\n  };\n}\n\nexport function setFilter(value) {\n  return {\n    type: types.LOBBY_SET_FILTER,\n    payload: { value },\n  };\n}\n\nexport function setPage(value) {\n  return {\n    type: types.LOBBY_SET_PAGE,\n    payload: { value },\n  };\n}\n","import { Color } from 'three';\nimport Panel from '@/components/panel';\nimport Fonts from '@/services/fonts';\n\nclass Picker extends Panel {\n  constructor({ anisotropy, history }) {\n    super({ anisotropy });\n    const { renderer } = this;\n    this.position.set(-0.15, 0.15, 0.075);\n    this.rotation.set(0, Math.PI * 0.5, Math.PI * 0.1, 'ZYX');\n    this.scale.set(0.3, 0.3, 1);\n    this.block = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.75,\n      height: renderer.height * 0.75,\n    };\n    this.strip = {\n      x: renderer.width * 0.85,\n      y: renderer.height * 0.05,\n      width: renderer.width * 0.1,\n      height: renderer.height * 0.75,\n    };\n    this.menu = {\n      x: renderer.width * 0.05,\n      y: renderer.height * 0.85,\n      width: renderer.width * 0.25,\n      height: renderer.height * 0.1,\n    };\n    this.blockColor = new Color();\n    this.color = new Color();\n    this.blockColor.setRGB(1, 0, 0);\n    this.color.copy(this.blockColor);\n    this.history = history;\n    Fonts\n      .waitUntilLoaded('Roboto')\n      .then(() => (\n        this.draw()\n      ));\n  }\n\n  draw() {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      menu,\n      renderer,\n      strip,\n    } = this;\n\n    super.draw();\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = block;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.fillStyle = `#${blockColor.getHexString()}`;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdWhite = ctx.createLinearGradient(0, 0, width, 0);\n      grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n      grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n      ctx.fillStyle = grdWhite;\n      ctx.fillRect(0, 0, width, height);\n\n      const grdBlack = ctx.createLinearGradient(0, 0, 0, height);\n      grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n      grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n      ctx.fillStyle = grdBlack;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = strip;\n      ctx.save();\n      ctx.translate(x, y);\n      const grd = ctx.createLinearGradient(0, 0, 0, height);\n      grd.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      grd.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      grd.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      grd.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      grd.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      grd.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      grd.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      ctx.fillStyle = grd;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    ctx.save();\n    ctx.translate(menu.x, menu.y);\n    ctx.fillStyle = '#222';\n    ctx.strokeStyle = '#333';\n    ctx.beginPath();\n    ctx.rect(0, 0, menu.width, menu.height);\n    ctx.fill();\n    ctx.stroke();\n    ctx.fillStyle = '#fff';\n    ctx.font = '700 24px Roboto';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('« REALMS', menu.width * 0.5, menu.height * 0.5);\n    ctx.restore();\n\n    {\n      ctx.save();\n      const width = renderer.width * 0.25;\n      const height = renderer.width * 0.1;\n      ctx.translate(renderer.width * 0.375, renderer.height * 0.85);\n      ctx.fillStyle = `#${color.getHexString()}`;\n      ctx.strokeStyle = '#333';\n      ctx.beginPath();\n      ctx.rect(0, 0, width, height);\n      ctx.fill();\n      ctx.stroke();\n      ctx.restore();\n    }\n  }\n\n  onPointer(point) {\n    const {\n      block,\n      blockColor,\n      color,\n      context: ctx,\n      history,\n      menu,\n      pointer,\n      strip,\n    } = this;\n    super.onPointer(point);\n    [block, strip, menu].forEach((object) => {\n      const {\n        x,\n        y,\n        width,\n        height,\n      } = object;\n      if (\n        pointer.x < x\n        || pointer.x > x + width\n        || pointer.y < y\n        || pointer.y > y + height\n      ) {\n        return;\n      }\n      if (object === menu) {\n        history.goBack();\n        return;\n      }\n      const imageData = ctx.getImageData(pointer.x, pointer.y, 1, 1).data;\n      if (object === strip) {\n        blockColor.setRGB(\n          imageData[0] / 0xFF,\n          imageData[1] / 0xFF,\n          imageData[2] / 0xFF\n        );\n      }\n      color.setRGB(\n        imageData[0] / 0xFF,\n        imageData[1] / 0xFF,\n        imageData[2] / 0xFF\n      );\n      this.draw();\n    });\n  }\n}\n\nexport default Picker;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Frustum,\n  InstancedBufferAttribute,\n  InstancedBufferGeometry,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  ShaderMaterial,\n  UniformsUtils,\n  ShaderLib,\n  VertexColors,\n  Vector3,\n} from 'three';\n\nclass Voxels extends Object3D {\n  constructor({ instanced = false }) {\n    super();\n    if (instanced) {\n      const { shader } = Voxels;\n      this.geometry = new InstancedBufferGeometry();\n      this.material = new ShaderMaterial({\n        vertexShader: shader.vertex,\n        fragmentShader: shader.fragment,\n        uniforms: shader.uniforms,\n        vertexColors: VertexColors,\n        fog: true,\n      });\n    } else {\n      this.geometry = new BufferGeometry();\n      this.material = new MeshBasicMaterial({\n        vertexColors: VertexColors,\n      });\n    }\n    this.instanced = instanced;\n    this.visible = false;\n\n    this.aux = {\n      frustum: new Frustum(),\n      matrix: new Matrix4(),\n    };\n  }\n\n  dispose() {\n    const { geometry, material } = this;\n    geometry.dispose();\n    material.dispose();\n  }\n\n  resize(size) {\n    const {\n      children,\n      geometry,\n      instanced,\n      material,\n    } = this;\n    while (children.length) {\n      this.remove(children[0]);\n    }\n\n    const radius = 8;\n    this.instances = [];\n    const aux = new Vector3();\n    const origin = new Vector3();\n    for (let z = -radius; z <= radius; z += 1) {\n      for (let y = -radius; y <= radius; y += 1) {\n        for (let x = -radius; x <= radius; x += 1) {\n          const distance = aux.set(x, y, z).distanceTo(origin);\n          if (Math.round(distance) <= radius) {\n            const instance = new Mesh(\n              geometry,\n              material\n            );\n            instance.chunk = { x, y, z };\n            instance.distance = distance;\n            instance.matrixAutoUpdate = false;\n            instance.position.set(x * size, y * size, z * size);\n            instance.updateMatrix();\n            instance.updateMatrixWorld();\n            this.instances.push(instance);\n          }\n        }\n      }\n    }\n    this.instances.sort(({ distance: a }, { distance: b }) => (\n      a - b\n    ));\n    this.intersects = this.instances.filter((instance) => {\n      const { chunk: { x, y, z } } = instance;\n      return (\n        x >= -2 && x <= 2\n        && y >= -2 && y <= 2\n        && z >= -2 && z <= 2\n      );\n    });\n\n    if (instanced) {\n      const mesh = new Mesh(\n        geometry,\n        material\n      );\n      mesh.frustumCulled = false;\n      this.add(mesh);\n      const offset = new Float32Array(this.instances.length * 3);\n      if (geometry.attributes.offset) {\n        geometry.attributes.offset.setArray(offset);\n      } else {\n        geometry.addAttribute('offset', new InstancedBufferAttribute(offset, 3));\n        geometry.attributes.offset.setDynamic(true);\n      }\n      geometry.maxInstancedCount = 0;\n    } else {\n      this.instances.forEach(instance => this.add(instance));\n    }\n  }\n\n  updateFrustum(camera) {\n    const {\n      aux: { frustum, matrix },\n      geometry,\n      instanced,\n      instances,\n    } = this;\n    if (!instanced || !instances) return;\n    matrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    frustum.setFromMatrix(matrix);\n    const offsets = instances\n      .filter(({ worldSphere }) => worldSphere && frustum.intersectsSphere(worldSphere))\n      .reduce((offsets, { position }) => {\n        offsets.push(\n          position.x,\n          position.y,\n          position.z\n        );\n        return offsets;\n      }, []);\n    geometry.attributes.offset.array.set(offsets);\n    geometry.attributes.offset.needsUpdate = true;\n    geometry.maxInstancedCount = offsets.length / 3;\n  }\n\n  update({\n    index,\n    position,\n    color,\n    normal,\n  }) {\n    const { geometry, instances } = this;\n    if (geometry.attributes.position) {\n      geometry.attributes.position.setArray(position);\n      geometry.attributes.position.needsUpdate = true;\n    } else {\n      geometry.addAttribute('position', new BufferAttribute(position, 3));\n    }\n    if (geometry.attributes.color) {\n      geometry.attributes.color.setArray(color);\n      geometry.attributes.color.needsUpdate = true;\n    } else {\n      geometry.addAttribute('color', new BufferAttribute(color, 3));\n    }\n    if (geometry.attributes.normal) {\n      geometry.attributes.normal.setArray(normal);\n      geometry.attributes.normal.needsUpdate = true;\n    } else {\n      geometry.addAttribute('normal', new BufferAttribute(normal, 3));\n    }\n    if (geometry.index) {\n      geometry.index.setArray(index);\n      geometry.index.needsUpdate = true;\n    } else {\n      geometry.setIndex(new BufferAttribute(index, 1));\n    }\n    geometry.computeBoundingSphere();\n    instances.forEach((instance) => {\n      instance.worldSphere = geometry.boundingSphere\n        .clone()\n        .applyMatrix4(instance.matrixWorld);\n    });\n    this.visible = true;\n  }\n}\n\nVoxels.shader = {\n  vertex: (\n    ShaderLib.basic.vertexShader\n      .replace(\n        '#include <clipping_planes_pars_vertex>',\n        [\n          '#include <clipping_planes_pars_vertex>',\n          'attribute vec3 offset;',\n        ].join('\\n')\n      )\n      .replace(\n        '#include <begin_vertex>',\n        [\n          'vec3 transformed = vec3( offset + position );',\n        ].join('\\n')\n      )\n  ),\n  fragment: ShaderLib.basic.fragmentShader,\n  uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n};\n\nexport default Voxels;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Vector3 } from 'three';\nimport { fetch, reset, updateVoxels } from '@/actions/realm';\nimport Renderer from '@/components/renderer';\nimport Picker from '@/components/realm/picker';\nimport Voxels from '@/components/realm/voxels';\n\nclass Realm extends PureComponent {\n  componentDidMount() {\n    const {\n      match: { params: { slug } },\n      history,\n      renderer: { current: renderer },\n      fetch,\n    } = this.props;\n    // Setup scene\n    const scene = renderer.resetScene();\n    this.picker = new Picker({\n      anisotropy: renderer.getMaxAnisotropy(),\n      history,\n    });\n    renderer.hands.children[1].add(this.picker);\n    this.voxels = new Voxels({\n      instanced: !!renderer.renderer.extensions.get('ANGLE_instanced_arrays'),\n    });\n    scene.add(this.voxels);\n    this.head = new Vector3();\n    this.intersects = [this.picker];\n    this.renderer = renderer;\n    this.scene = scene;\n    scene.onBeforeRender = this.onBeforeRender.bind(this);\n    // Fetch realm\n    fetch(slug);\n  }\n\n  componentDidUpdate({ geometry: previousGeometry, size: previousSize }) {\n    const { geometry, size } = this.props;\n    const {\n      renderer: { raycaster, room, renderer: { vr } },\n      picker,\n      voxels,\n    } = this;\n    if (size !== previousSize) {\n      // Resize voxels\n      room.position.set(\n        size * 0.5,\n        size * 0.5,\n        size * 0.5\n      );\n      voxels.resize(size);\n      this.intersects = [\n        picker,\n        ...voxels.intersects,\n      ];\n    }\n    if (geometry !== previousGeometry) {\n      // Update voxels\n      voxels.update(geometry);\n      if (!previousGeometry.index && vr.enabled) {\n        // Pull the player down to the nearest voxel\n        raycaster.ray.origin.copy(room.position);\n        raycaster.ray.direction.set(0, -1, 0);\n        const hit = raycaster.intersectObjects(voxels.intersects)[0];\n        if (hit) {\n          room.position.y = hit.point.y;\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { picker, renderer, scene } = this;\n    const { reset } = this.props;\n    renderer.hands.children[1].remove(picker);\n    picker.dispose();\n    delete scene.onBeforeRender;\n    reset();\n    if (!renderer.renderer.vr.enabled) {\n      renderer.resetCamera();\n    }\n  }\n\n  onBeforeRender(renderer, scene, camera) {\n    const {\n      head,\n      intersects,\n      picker,\n      props: {\n        size,\n        updateVoxels,\n      },\n      renderer: {\n        hands,\n        raycaster,\n        room,\n      },\n      voxels,\n    } = this;\n\n    voxels.updateFrustum(camera);\n\n    // Handle controls\n    hands.children.forEach((hand) => {\n      const { buttons, pointer } = hand;\n      hand.setupRaycaster(raycaster);\n      const hit = raycaster.intersectObjects(intersects)[0] || false;\n      if (!hit) {\n        pointer.visible = false;\n        return;\n      }\n      const {\n        distance,\n        face: { normal },\n        object,\n        point,\n      } = hit;\n      // Pointer feedback\n      pointer.scale.z = distance - 0.175;\n      pointer.visible = true;\n      // Color picker\n      if (object === picker) {\n        if (buttons.triggerDown) {\n          picker.onPointer(point);\n        }\n        return;\n      }\n      // Translocation\n      if (\n        buttons.padDown\n        && normal.x === 0\n        && normal.y === 1\n        && normal.z === 0\n      ) {\n        head.setFromMatrixPosition(camera.matrixWorld);\n        const offset = {\n          x: head.x - room.position.x,\n          y: 0,\n          z: head.z - room.position.z,\n        };\n        const [x, y, z] = ['x', 'y', 'z'].map((axis) => {\n          let position = point[axis] - offset[axis];\n          while (position < 0) position += size;\n          while (position >= size) position -= size;\n          return position;\n        });\n        room.position.set(x, y, z);\n      }\n      // Voxel update\n      if (\n        buttons.triggerDown\n        || buttons.gripDown\n      ) {\n        updateVoxels({\n          color: picker.color,\n          point,\n          normal,\n          remove: buttons.gripDown,\n        });\n      }\n    });\n\n    // Animation for non-vr browsers\n    const { animation, vr } = renderer;\n    if (!vr.enabled && size && animation.time > 1) {\n      const { delta, time } = animation;\n      const rotation = Math.sin(time * 0.1) * 0.001;\n      camera.rotateY(rotation);\n      camera.rotateX(rotation);\n      camera.translateZ(delta * 0.5);\n      camera.updateMatrixWorld();\n      ['x', 'y', 'z'].forEach((axis) => {\n        if (camera.position[axis] < 0) {\n          camera.position[axis] += size;\n        }\n        if (camera.position[axis] >= size) {\n          camera.position[axis] -= size;\n        }\n      });\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nRealm.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  geometry: PropTypes.shape({\n    index: PropTypes.instanceOf(Uint32Array),\n    position: PropTypes.instanceOf(Float32Array),\n    color: PropTypes.instanceOf(Float32Array),\n    normal: PropTypes.instanceOf(Float32Array),\n  }).isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  size: PropTypes.number.isRequired,\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n  fetch: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  updateVoxels: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  ({\n    realm: {\n      geometry,\n      size,\n    },\n  }) => ({\n    geometry,\n    size,\n  }),\n  {\n    fetch,\n    reset,\n    updateVoxels,\n  }\n)(Realm);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Renderer from '@/components/renderer';\nimport Lobby from './lobby';\nimport Realm from './realm';\n\nconst Scenes = ({ renderer }) => (\n  <Switch>\n    {[\n      { path: '/', Component: Lobby },\n      { path: '/:slug', Component: Realm },\n    ].map(({ path, Component }) => (\n      <Route\n        exact\n        key={path}\n        path={path}\n        render={props => (\n          <Component {...props} renderer={renderer} />\n        )}\n      />\n    ))}\n    <Redirect to=\"/\" />\n  </Switch>\n);\n\nScenes.propTypes = {\n  renderer: PropTypes.shape({\n    current: PropTypes.instanceOf(Renderer),\n  }).isRequired,\n};\n\nexport default Scenes;\n","import React, { PureComponent } from 'react';\nimport { hot } from 'react-hot-loader';\nimport LoadingBar from 'react-redux-loading-bar';\nimport styled from 'styled-components';\nimport Music from '@/components/music';\nimport Renderer from '@/components/renderer';\nimport Session from '@/components/session';\nimport Scenes from '@/scenes';\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst loadingBarStyle = {\n  backgroundColor: '#393',\n  zIndex: 1,\n};\n\nclass Layout extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.renderer = React.createRef();\n  }\n\n  render() {\n    const { renderer } = this;\n    return (\n      <div>\n        <LoadingBar style={loadingBarStyle} />\n        <Wrapper>\n          <Renderer ref={renderer} />\n        </Wrapper>\n        <Scenes renderer={renderer} />\n        <Music />\n        <Session />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(Layout);\n","import { createBrowserHistory } from 'history';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { applyMiddleware, createStore, compose as productionCompose } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { Provider } from 'react-redux';\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\nimport { Router } from 'react-router-dom';\nimport thunkMiddleware from 'redux-thunk';\nimport { refreshSession } from '@/actions/user';\nimport syncTranslationWithStore, { load as reloadLocales } from '@/locales';\nimport rootReducer from '@/reducers';\nimport Layout from '@/layout';\n\n// Create Redux Store\nconst devCompose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst compose = !__PRODUCTION__ && devCompose ? devCompose : productionCompose;\nconst store = createStore(\n  rootReducer,\n  {},\n  compose(\n    applyMiddleware(thunkMiddleware, promiseMiddleware, loadingBarMiddleware())\n  )\n);\nsyncTranslationWithStore(store);\n\n// Revive session from localStorage\nif (store.getState().user.isAuth) {\n  store.dispatch(refreshSession());\n}\n\n// Create router history\nconst history = createBrowserHistory({\n  basename: __BASENAME__,\n});\n\n// Support initial hash route from the ghpages-spa-webpack-plugin\nif (window.location.hash) {\n  history.replace(`/${window.location.hash.substr(2)}`);\n}\n\n// Disable contextual menus\nwindow.addEventListener('contextmenu', e => (\n  e.preventDefault()\n), false);\n\n// Render the page\nconst mount = document.getElementById('mount');\nrender(\n  <Provider store={store}>\n    <Router history={history}>\n      <Layout />\n    </Router>\n  </Provider>,\n  mount\n);\n\n// Hot reload locales & reducers\nif (!__PRODUCTION__ && module.hot) {\n  module.hot.accept('@/locales', () => reloadLocales(store));\n  module.hot.accept('@/reducers', () => store.replaceReducer(rootReducer));\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"code/mesher.worker.1c22d4f82f07e694ad4e.js\");\n};"],"sourceRoot":""}